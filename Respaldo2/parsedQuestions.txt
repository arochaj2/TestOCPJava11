Arreglar pregunta 8.12.
Working with Java 
Data Types
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Working with Java Data Types
✓■ Use primitives and wrapper classes, including, operators, 
parentheses, type promotion and casting
✓■ Handle text using String and StringBuilder classes
✓■ Use local variable type inference, including as lambda 
parameters
1. Which of the following are not valid variable names? (Choose two.)
A. _
B. _blue
C. 2blue
D. blue$
E. Blue
2. What is the value of tip after executing the following code snippet?
int meal = 5;
int tip = 2;
var total = meal + (meal>6 ? tip++ : tip--);
A. 1
B. 2
C. 3
D. 7
E. None of the above
3. Which is equivalent to var q = 4.0f;?
A. float q = 4.0f;
B. Float q = 4.0f;
C. double q = 4.0f;
D. Double q = 4.0f;
E. Object q = 4.0f;
4. What is the output of the following?
12: var b = "12";
13: b += "3";
14: b.reverse();
15: System.out.println(b.toString());
A. 12
B. 123
C. 321
D. The code does not compile.
5. What is the output of the following?
5: var line = new StringBuilder("-");
6: var anotherLine = line.append("-");
7: System.out.print(line == anotherLine);Working with Java Data Types 3
8: System.out.print(" ");
9: System.out.print(line.length());
A. false 1
B. false 2
C. true 1
D. true 2
E. It does not compile.
6. Given the following Venn diagram and the boolean variables, apples, oranges, and 
bananas, which expression most closely represents the filled-in region of the diagram?
$$Insertar imagen
A. apples && oranges && !bananas
B. orange || (oranges && !bananas)
C. (apples || bananas) && oranges
D. oranges && apples
E. (apples || oranges) && !bananas
F. apples ^ oranges
7. What is the output of the following?
5: var line = new String("-");
6: var anotherLine = line.concat("-");
7: System.out.print(line == anotherLine);
8: System.out.print(" ");
9: System.out.print(line.length());
A. false 1
B. false 2
C. true 1
D. true 2
E. Does not compile
8. Which can fill in the blank? (Choose two.)
public void math() {
   _____ pi = 3.14;
}
A. byte
B. double
C. float
D. short
E. var
9. Fill in the blanks: The operators !=, _______, _______, _______, and ++ are listed in the same 
or increasing level of operator precedence. (Choose two.)
A. ==, *, !
B. /, %, *
C. *, --, /
D. !, *, %
E. +=, &&, *
F. *, <, /
10. How many of these compile?
18: Comparator<String> c1 = (j, k) -> 0;
19: Comparator<String> c2 = (String j, String k) -> 0;
20: Comparator<String> c3 = (var j, String k) -> 0;
21: Comparator<String> c4 = (var j, k) -> 0;
22: Comparator<String> c5 = (var j, var k) -> 0;
A. 0
B. 1
C. 2
D. 3
E. 4
F. 5
11. The author of this method forgot to include the data type. Which of the following reference 
types can best fill in the blank to complete this method?
public static void secret(___________ mystery) {
   char ch = mystery.charAt(3);
   mystery = mystery.insert(1, "more");
   int num = mystery.length();
}
A. String
B. StringBuilder
C. Both
D. Neither
12. What is the output of the following?
var teams = new StringBuilder("333");
teams.append(" 806");
teams.append(" 1601");
System.out.print(teams);
A. 333
B. 333 806 1601
C. The code compiles but outputs something else.
D. The code does not compile.
13. Which of the following declarations does not compile?
A. double num1, int num2 = 0;
B. int num1, num2;
C. int num1, num2 = 0;
D. int num1 = 0, num2 = 0;
E. All of the above
F. None of the above
14. Given the file Magnet.java shown, which of the marked lines can you independently insert 
the line var color; into and still have the code compile?
// line a1
public class Magnet {
   // line a2
   public void attach() {
      // line a3
   }
   // line a4
}
A. a2
B. a3
C. a2 and a3
D. a1, a2, a3, and a4
E. None of the above
15. Which is one of the lines output by this code?
10: var list = new ArrayList<Integer>();
11: list.add(10);
12: list.add(9);
13: list.add(8);
14:
15: var num = 9;
16: list.removeIf(x -> {int keep = num; return x != keep;});
17: System.out.println(list);
18:
19: list.removeIf(x -> {int keep = num; return x == keep;});
20: System.out.println(list);
A. []
B. [8, 10]
C. [8, 9, 10]
D. [10, 8]
E. The code does not compile.
16. Which of the following can fill in the blank so the code prints true?
var happy = " :) - (: ";
var really = happy.trim();
var question = _____________________;
System.out.println(really.equals(question));
A. happy.substring(0, happy.length() - 1)
B. happy.substring(0, happy.length())
C. happy.substring(1, happy.length() - 1)
D. happy.substring(1, happy.length())
17. How many of the following lines contain a compiler error?
double num1 = 2.718;
double num2 = 2._718;
double num3 = 2.7_1_8;
double num4 = _2.718;
A. 0
B. 1
C. 2
D. 3
E. 4
18. What is the output of the following application?
public class Airplane {
   static int start = 2;
   final int end;
   public Airplane(int x) {
      x = 4;
      end = x;
   }
   public void fly(int distance) {
      System.out.print(end-start+" ");
      System.out.print(distance);
   }
   public static void main(String... start) {
      new Airplane(10).fly(5);
   }
}
A. 2 5
B. 8 5
C. 6 5
D. The code does not compile.
E. None of the above.
19. What is the output of the following class?
1: package rocket;
2: public class Countdown {
3:    public static void main(String[] args) {
4:       var builder = "54321";
5:       builder = builder.substring(4);
6:       System.out.println(builder.charAt(2));
7:    }
8: }
A. 2
B. 3
C. 4
D. None of the above
20. What is the output of the following application?
package transporter;
public class Rematerialize {
   public static void main(String[] input) {
      int init = 11;
      int split = 3;
      int partA = init / split;
      int partB = init % split;
      int result = split * (partB + partA);
      System.out.print(result);
   }
}
A. 9
B. 11
C. 12
D. 15
E. The code does not compile.
F. None of the above.
21. What is the result of the following code?
var sb = new StringBuilder("radical")
   .insert(sb.length(), "robots");
System.out.println(sb);
A. radicarobots
B. radicalrobots
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
22. Given the following code snippet, what is the value of dinner after it is executed?
int time = 9;
int day = 3;
var dinner = ++time >= 10 ? day-- <= 2 
   ? "Takeout" : "Salad" : "Leftovers";
A. Takeout
B. Leftovers
C. Salad
D. The code does not compile but would compile if parentheses were added.
E. None of the above.
23. What is the output of the following?
var teams = new String("694");
teams.concat(" 1155");
teams.concat(" 2265");
teams.concat(" 2869");
System.out.println(teams);
A. 694
B. 694 1155 2265 2869
C. The code compiles but outputs something else.
D. The code does not compile.
24. How many of the following lines compile?
bool b = null;
Bool bl = null;
int i = null;
Integer in = null;
String s = null;
A. None
B. One
C. Two
D. Three
E. Four
F. Five
25. What is the output of the following code snippet?
int height = 2, length = 3;
boolean w = height > 1 | --length < 4;
var x = height!=2 ? length++ : height;
boolean z = height % length == 0;
System.out.println(w + "-" + x + "-" + z);
A. true-2-true
B. false-2-false
C. true-2-false
D. true-3-false
E. true-3-true
F. false-3-false
26. What is the output of the following?
1: public class Legos {
2:    public static void main(String[] args) {
3:       var sb = new StringBuilder();
4:       sb.append("red");
5:       sb.deleteCharAt(0);
6:       sb.delete(1, 2);
7:       System.out.println(sb);
8:    }
9: }
A. e
B. d
C. ed
D. None of the above
27. Which is a true statement?
A. If s.contains("abc") is true, then s.equals("abc") is also true.
B. If s.contains("abc") is true, then s.startsWith("abc") is also true.
C. If s.startsWith("abc") is true, then s.equals("abc") is also true.
D. If s.startsWith("abc") is true, then s.contains("abc") is also true.
28. What is the output of the following code snippet?
boolean carrot = true;
Boolean potato = false;
var broccoli = true;
carrot = carrot & potato;
broccoli = broccoli ? !carrot : potato;
potato = !broccoli ^ carrot;
System.out.println(carrot + "," + potato + "," + broccoli);
A. true,false,true
B. true,true,true
C. false,false,false
D. false,true,true
E. false,false,true
F. The code does not compile.Working with Java Data Types 11
29. What does this code output?
var babies = Arrays.asList("chick", "cygnet", "duckling");
babies.replaceAll(x -> { var newValue = "baby";
return newValue; });
System.out.println(babies);
A. [baby]
B. [baby, baby, baby]
C. [chick, cygnet, duckling]
D. None of the above.
E. The code does not compile.
30. What is the output of the following class?
1: package rocket;
2: public class Countdown {
3:    public static void main(String[] args) {
4:       var builder = new StringBuilder("54321");
5:       builder.substring(2);
6:       System.out.println(builder.charAt(1));
7:    }
8: }
A. 1
B. 2
C. 3
D. 4
E. Does not compileControlling 
Program Flow
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Controlling Program Flow
✓■ Create and use loops, if/else, and switch statements
Chapter 
214 Chapter 2 ■ Controlling Program Flow
1. Variables declared as which of the following are never permitted in a switch statement? 
(Choose two.)
A. var
B. double
C. int
D. String
E. char
F. Object
2. What happens when running the following code snippet?
3: var gas = true;
4: do (
5:    System.out.println("helium");
6:    gas = gas ^ gas;
7:    gas = !gas;
8: ) while (!gas);
A. It completes successfully without output.
B. It outputs helium once.
C. It outputs helium repeatedly.
D. Line 6 does not compile.
E. None of the above.
3. What is output by the following?
10: int m = 0, n = 0;
11: while (m < 5) {
12:    n++;
13:    if (m == 3) 
14:       continue;
15:   
16:    switch (m) {
17:       case 0:
18:       case 1:
19:          n++;
20:       default:
21:          n++;
22:    }
23:    m++;
24: }
25: System.out.println(m + " " + n);Controlling Program Flow 15
A. 3 10
B. 3 12
C. 5 10
D. 5 12
E. The code does not compile.
F. None of the above.
4. Given the following, which can fill in the blank and allow the code to compile? 
(Choose three.)
var quest = ;
for(var zelda : quest) {
   System.out.print(zelda);
}
A. 3
B. new int[] {3}
C. new StringBuilder("3")
D. List.of(3)
E. new String[3]
F. "Link"
5. Which of the following rules about a default branch in a switch statement are correct? 
(Choose two.)
A. A switch statement is required to declare a default statement.
B. A default statement must be placed after all case statements.
C. A default statement can be placed between any case statements.
D. Unlike a case statement, a default statement does not take a parameter value.
E. A switch statement can contain more than one default statement.
F. A default statement can be used only when at least one case statement is present.
6. What does the following method output?
void dance() {
   var singer = 0;
   while (singer)
      System.out.print(singer++);
}
A. The code does not compile.
B. The method completes with no output.
C. The method prints 0 and then terminates.
D. The method enters an infinite loop.
E. None of the above.
7. Which are true statements comparing for-each and traditional for loops? (Choose two.)
A. Both can iterate through an array starting with the first element.
B. Only the for-each loop can iterate through an array starting with the first element.
C. Only the traditional for loop can iterate through an array starting with the first element.
D. Both can iterate through an array starting from the end.
E. Only the for-each loop can iterate through an array starting from the end.
F. Only the traditional for loop can iterate through an array starting from the end.
8. What is the output of the following application?
package planning;
public class ThePlan {
   public static void main(String[] input) {
      var plan = 1;
      plan = plan++ + --plan;
      if(plan==1) {
         System.out.print("Plan A");
      } else { if(plan==2) System.out.print("Plan B");
      } else System.out.print("Plan C"); }
   }
}
A. Plan A
B. Plan B
C. Plan C
D. The class does not compile.
E. None of the above.
9. What is true about the following code? (Choose two.)
23: var race = "";
24: loop:
25: do {
26:    race += "x";
27:    break loop;
28: } while (true);
29: System.out.println(race);
A. It outputs x.
B. It does not compile.
C. It is an infinite loop.
D. With lines 25 and 28 removed, it outputs x.
E. With lines 25 and 28 removed, it does not compile.
F. With lines 25 and 28 removed, it is an infinite loop.Controlling Program Flow 17
10. Which of the following can replace the body of the perform() method to produce the same 
output on any nonempty input? (Choose two.)
public void perform(String[] circus) {
   for (int i=circus.length-1; i>=0; i--)
      System.out.print(circus[i]);
}
A. 
for (int i=circus.length; i>0; i--)
   System.out.print(circus[i-1]);
B. 
for-reversed (String c = circus)
   System.out.print(c);
C. 
for (var c : circus)
   System.out.print(c);
D. 
for(var i=0; i<circus.length; i++) 
   System.out.print(circus[circus.length-i-1]);
E. 
for (int i=circus.length; i>0; i--)
   System.out.print(circus[i+1]);
F. 
for-each (String c circus)
   System.out.print(c);
11. What does the following code snippet output?
var bottles = List.of("glass", "plastic", "can");
for (int type = 1; type < bottles.size();) {
   System.out.print(bottles.get(type) + "-");
   if(type < bottles.size()) break;
}
System.out.print("end");
A. glass-end
B. glass-plastic-can-end
C. plastic-end
D. plastic-can-end
E. The code does not compile.
F. None of the above.
12. What is the result of executing the following code snippet?
final var GOOD = 100;
var score = 10;
switch (score) {
   default:
   1 : System.out.print("1-");
   -1 : System.out.print("2-"); break;
   4,5 : System.out.print("3-");
   6 : System.out.print("4-");
   9 : System.out.print("5-");
}
A. 1-
B. 1-2-
C. 2-
D. 3-
E. 4-
F. None of the above
13. What is the output of the following application?
package dinosaur;
public class Park {
   public final static void main(String... arguments) {
      int pterodactyl = 8;
      long triceratops = 3;
      if(pterodactyl % 3 > 1 + 1)
         triceratops++;
         triceratops--;
      System.out.print(triceratops);
   }
}
A. 2
B. 3
C. 4
D. The code does not compile.
E. The code compiles but throws an exception at runtime.Controlling Program Flow 19
14. What variable type of red allows the following application to compile?
package tornado;
public class Kansas {
   public static void main(String[] args) {
      int colorOfRainbow = 10;
       red = 5;
      switch(colorOfRainbow) {
         default:
            System.out.print("Home");
            break;
         case red:
            System.out.print("Away");
      }
   }
}
A. long
B. double
C. int
D. var
E. String
F. None of the above
15. How many lines of the magic() method contain compilation errors?
10: public void magic() {
11:    do {
12:       int trick = 0;
13:       LOOP: do {
14:          trick++;
15:       } while (trick < 2--);
16:       continue LOOP;
17:    } while (1 > 2);
18:    System.out.println(trick);
19: }
A. Zero
B. One
C. Two
D. Three
E. Four
16. How many of these statements can be inserted after the println to have the code flow follow 
the arrow in this diagram?
break;
break letters;
break numbers;
continue;
continue letters;
continue numbers;
letters: for (char ch = 'a'; ch <= 'z'; ch++) {
   numbers: for (int n = 0; n<=10; n++) {
      System.out.print(ch);
                  
   }
}
A. One
B. Two
C. Three
D. Four
E. Five
F. None of above
17. What is the output of the following application?
package dessert;
public class IceCream {
   public final static void main(String... args) {
      var flavors = 30;
      int eaten = 0;
      switch(flavors) {
         case 30: eaten++;
         case 40: eaten+=2;
         default: eaten--;
      }
      System.out.print(eaten);
   }
}
A. 1
B. 2Controlling Program Flow 21
C. 3
D. The code does not compile because var cannot be used in a switch statement.
E. The code does not compile for another reason.
F. None of the above.
18. Which of the following statements compile and create infinite loops at runtime? 
(Choose two.)
A. while (!false) {}
B. do {}
C. for( : ) {}
D. do {} while (true);
E. while {}
F. for( ; ; ) {}
19. Which of the following iterates a different number of times than the others?
A. for (int k=0; k < 5; k++) {}
B. for (int k=1; k <= 5; k++) {}
C. int k=0; do { } while(k++ < 5);
D. int k=0; while (k++ < 5) {}
E. All of these iterate the same number of times.
20. What is the output of the following code snippet?
int count = 0;
var stops = new String[] { "Washington", "Monroe",
   "Jackson", "LaSalle" };
while (count < stops.length)
   if (stops[++count].length() < 8)
      break;
   else continue;
System.out.println(count);
A. 0
B. 1
C. 2
D. 3
E. The code does not compile.
F. None of the above.
21. What is the output of the following code snippet?
int hops = 0;
int jumps = 0;
jumps = hops++;
if(jumps)
   System.out.print("Jump!");
else
   System.out.print("Hop!");
A. Jump!
B. Hop!
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
E. None of the above.
22. Which of the following best describes the flow of execution in this for loop if beta always 
returns false?
for (alpha; beta; gamma) {
  delta;
}
A. alpha
B. alpha, beta
C. alpha, beta, gamma
D. alpha, gamma
E. alpha, gamma, beta
F. None of the above
23. What is the output of the following code snippet?
boolean balloonInflated = false;
do {
   if (!balloonInflated) {
      balloonInflated = true;
      System.out.print("inflate-");
   }
} while (! balloonInflated);
System.out.println("done");
A. done
B. inflate-doneControlling Program Flow 23
C. The code does not compile.
D. This is an infinite loop.
E. None of the above.
24. Which of these code snippets behaves differently from the others?
A. 
if (numChipmunks == 1)
   System.out.println("One chipmunk");
if (numChipmunks == 2)
   System.out.println("Two chipmunks");
if (numChipmunks == 3)
   System.out.println("Three chipmunks");
B. 
switch (numChipmunks) {
   case 1:  System.out.println("One chipmunk");
   case 2:  System.out.println("Two chipmunks");
   case 3:  System.out.println("Three chipmunks");
}
C. 
if (numChipmunks == 1)
   System.out.println("One chipmunk");
else if (numChipmunks == 2)
   System.out.println("Two chipmunks");
else if (numChipmunks == 3)
   System.out.println("Three chipmunks");
D. All three code snippets do the same thing.
25. Which statements about loops are correct? (Choose three.)
A. A do/while loop requires a body.
B. A while loop cannot be exited early with a return statement.
C. A while loop requires a conditional expression.
D. A do/while loop executes the body (if present) at least once.
E. A do/while loop cannot be exited early with a return statement.
F. A while loop executes the body (if present) at least once.
26. Given the following enum and class, which option fills in the blank and allows the code 
to compile?
enum Season { SPRING, SUMMER, WINTER }
public class Weather {
   public int getAverageTemperate(Season s) {
      switch (s) {
         default:
          return 30;
      }
   }
}
A. case Season.WINTER:
B. case WINTER, SPRING:
C. case SUMMER | WINTER:
D. case SUMMER ->
E. case FALL:
F. None of the above
27. Fill in the blank with the line of code that causes the application to compile and print exactly 
one line at runtime.
package nyc;
public class TourBus {
   public static void main(String... args) {
      var nycTour = new String[] { "Downtown", "Uptown",
         "Brooklyn" };
      var times = new String[] { "Day", "Night" };
      for (  i<nycTour.length && j<times.length;
            i++, j++)
         System.out.println(nycTour[i] + "-" + times[j]);
   }
}
A. int i=1; j=1;
B. int i=0, j=1;
C. int i=1; int j=0;
D. int i=1, int j=0;
E. int i=1, j=0;
F. None of the aboveControlling Program Flow 25
28. The code contains six pairs of curly braces. How many pairs can be removed without chang-
ing the behavior?
12: public static void main(String[] args) {
13:    int secret = 0;
14:    for (int i = 0; i < 10; i++) {
15:       while (i < 10) {
16:          if (i == 5) {
17:             System.out.println("if");
18:          } else {
19:             System.out.println("in");
20:             System.out.println("else");
21:          }
22:       }
23:    }
24:    switch (secret) {
25:       case 0:  System.out.println("zero");
26:    }
27: }
A. One
B. Two
C. Three
D. Four
E. Five
F. Six
29. Which of the following can replace the body of the travel() method to produce the same 
output on any nonempty input?
public void travel(List<Integer> roads) {
   for (int w = 1; w <= roads.size(); w++)
      System.out.print(roads.get(w-1));
}
A. 
for (int r = 0; r < roads.size(); r += 1)
   System.out.print(roads.get(0));
B. 
for(var z : roads)
   System.out.print(z);
C. 
for (int t = roads.size(); t > 0; t--)
   System.out.print(roads.get(t));
D. 
for (var var : roads)
   System.out.print(roads);
E. 
for (int q = roads.size(); q >= 0; q++)
   System.out.print(roads.get(q));
F. None of the above
30. Which statement about the following code snippet is correct?
3: final var javaVersions = List.of(9,10,11);
4: var exams = List.of("1Z0-811", "1Z0-819");
5: V: for (var e1 : javaVersions) {
6:    E: for (String e2 : exams)
7:       System.out.println(e1 + "_" + e2);
8:       break;
9: }
A. One line does not compile.
B. Two lines do not compile.
C. Three lines do not compile.
D. It compiles and prints two lines at runtime.
E. It compiles and prints three lines at runtime.
F. None of the above.Java Object-Oriented  
Approach
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Java Object-Oriented Approach
✓■ Declare and instantiate Java objects including nested class 
objects, and explain objects’ lifecycles (including creation, 
dereferencing by reassignment, and garbage collection)
✓■ Define and use fields and methods, including instance, static 
and overloaded methods
✓■ Initialize objects and their members using instance and static 
initialiser statements and constructors
✓■ Understand variable scopes, apply encapsulation and make 
objects immutable
✓■ Create and use subclasses and superclasses, including 
abstract classes
✓■ Utilize polymorphism and casting to call methods, differen-
tiate object type versus reference type
✓■ Create and use interfaces, identify functional interfaces, and 
utilize private, static, and default methods
✓■ Create and use enumerations
Chapter 
328 Chapter 3 ■ Java Object-Oriented Approach 
1. What is the output of the following application?
package dnd;
final class Story {
   void recite(int chapter) throws Exception {}
}
public class Adventure extends Story {
   final void recite(final int chapter) {  // g1
      switch(chapter) {                    // g2
         case 2: System.out.print(9);
         default: System.out.print(3);
      }
   }
   public static void main(String... u) {
      var bedtime = new Adventure();
      bedtime.recite(2);
   }
}
A. 3
B. 9
C. 93
D. The code does not compile because of line g1.
E. The code does not compile because of line g2.
F. None of the above.
2. Which of the following lines of code are not permitted as the first line of a Java class file? 
(Choose two.)
A. import widget.*;
B. // Widget Manager
C. int facilityNumber;
D. package sprockets;
E. /** Author: Cid **/
F. void produce() {}
3. Which of the following modifiers can be applied to an abstract method? (Choose two.)
A. final
B. private
C. public
D. default
E. protected
F. concreteJava Object-Oriented Approach  29
4. What is the result of compiling and executing the following class?
1: public class ParkRanger {
2:    int birds = 10;
3:    public static void main(String[] data) {
4:       var trees = 5;
5:       System.out.print(trees+birds);
6:    }
7: }
A. It compiles and outputs 5.
B. It compiles and outputs 15.
C. It does not compile.
D. It compiles but throws an exception at runtime.
5. Fill in the blanks: The ___________________ access modifier allows access to everything the 
___________________ access modifier does and more.
A. package-private, protected
B. private, package-private
C. private, protected
D. private, public
E. public, private
F. None of the above
6. Which set of modifiers, when added to a default method within an interface, prevents it from 
being overridden by a class implementing the interface?
A. const
B. final
C. static
D. private
E. private static
F. None of the above
7. Given the following application, fill in the missing values in the table starting from the top 
and going downward.
package competition;
public class Robot {
   static String weight = "A lot";
   double ageMonths = 5, ageDays = 2;
   private static boolean success = true;
 
   public void main(String[] args) {
      final String retries = "1";
      // P1
   }
}
Variable Type Number of Variables Accessible at P1
Class _____
Instance _____
Local _____
A. 2, 0, 1
B. 2, 2, 1
C. 1, 0, 1
D. 0, 2, 1
8. Given the following code, what values inserted, in order, into the blank lines allow the code 
to compile? (Choose two.)
_______ agent;
public _______ Banker {
   private static _______ getMaxWithdrawal() {
      return 10;
   }
}
A. package, new, int
B. package, class, long
C. import, class, null
D. //, class, int
E. import, interface, void
F. package, class, void
9. Which of the following are correct? (Choose two.)
public class Phone {
   private int size;
 
   // insert constructor here
 
   public static void sendHome(Phone p, int newSize) {
      p = new Phone(newSize);
      p.size = 4;
   }
   public static final void main(String... params) {
      final var phone = new Phone(3);Java Object-Oriented Approach  31
      sendHome(phone,7);
      System.out.print(phone.size);
   }
}
A. The following is a valid constructor:
public static Phone create(int size) {
   return new Phone(size);
}
B. The following is a valid constructor:
public static Phone newInstance(int size) {
   return new Phone();
}
C. The following is a valid constructor:
public Phone(int size) {
   this.size=size;
}
D. The following is a valid constructor:
public void Phone(int size) {
   this.size=size;
}
E. With the correct constructor, the output is 3.
F. With the correct constructor, the output is 7.
10. Given the following class structures, which lines can be inserted into the blank independently 
that would allow the class to compile? (Choose two.)
public class Dinosaur {
   class Pterodactyl extends Dinosaur {}
   public void roar() {
      var dino = new Dinosaur();
      _______________________;
   }
}
A. dino.Pterodactyl()
B. Dinosaur.new Pterodactyl()
C. dino.new Pterodactyl()
D. new Dino().new Pterodactyl()
E. new Dinosaur().Pterodactyl()
F. new Dinosaur.Pterodactyl()
11. What is the output of the Computer program?
class Laptop extends Computer {
    public void startup() {
        System.out.print("laptop-");
    }
}
public class Computer {
   public void startup() {
      System.out.print("computer-");
   }
   public static void main(String[] args) {
      Computer computer = new Laptop();
      Laptop laptop = new Laptop();
      computer.startup();
      laptop.startup();
   }
}
A. computer-laptop-
B. laptop-computer-
C. laptop-laptop-
D. The code does not compile.
E. None of the above.
12. What access modifier is used to mark class members package-private?
A. default
B. friend
C. protected
D. private
E. None of the above
13. How many lines does the following code output?
public class Cars {
   private static void drive() {
       static {
          System.out.println("static");
       }
       System.out.println("fast");
       { System.out.println("faster"); }Java Object-Oriented Approach  33
   }
   public static void main(String[] args) {
      drive();
      drive();
   }
}
A. One.
B. Two.
C. Three.
D. Four.
E. None of the above. The code does not compile.
14. Which statements about static interface methods are correct? (Choose three.)
A. A static interface method can be final.
B. A static interface method can be declared private.
C. A static interface method can be package-private.
D. A static interface method can be declared public.
E. A static interface method can be declared protected.
F. A static interface method can be declared without an access modifier.
15. Fill in the blanks with the only option that makes this statement false: A(n) ______________ 
can access ______________ of the enclosing class in which it is defined.
A. static nested class, static members
B. static nested class, instance members
C. member inner class, static members
D. member inner class, instance members
E. local class, instance members from within an instance method
F. anonymous class, instance members from within an instance method
16. What is the result of executing the following program?
public class Canine {
   public String woof(int bark) {
      return "1"+bark.toString();
   }
 
   public String woof(Integer bark) {
      return "2"+bark.toString();
   }
   public String woof(Object bark) {
      return "3"+bark.toString();
   }
   
   public static void main(String[] a) {
      System.out.println(woof((short)5));
   }
}
A. 15
B. 25
C. 35
D. One line does not compile.
E. Two lines do not compile.
F. The program compiles but throws an exception at runtime.
17. What statement best describes the notion of effectively final in Java?
A. A local variable that is marked final
B. A static variable that is marked final
C. A local variable whose primitive value or object reference does not change after it is  
initialized
D. A local variable whose primitive value or object reference does not change after a certain 
point in the method
E. None of the above
18. What is the output of the Turnip class?
package animal;
interface GameItem {
   int sell();
}
abstract class Vegetable implements GameItem {
   public final int sell() { return 5; }
}
public class Turnip extends Vegetable {
   public final int sell() { return 3; }
   public static void main(String[] expensive) {
      System.out.print(new Turnip().sell());
   }
}Java Object-Oriented Approach  35
A. 3
B. 5
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
E. None of the above.
19. What is the output of the following application?
package holiday;
enum DaysOff {
   Thanksgiving, PresidentsDay, ValentinesDay
}
public class Vacation {
   public static void main(String... unused) {
      final DaysOff input = DaysOff.Thanksgiving;
      switch(input) {
         default:
         case DaysOff.ValentinesDay:
            System.out.print("1");
         case DaysOff.PresidentsDay:
            System.out.print("2");
      }
   }
}
A. 1
B. 2
C. 12
D. The code does not compile.
E. The code compiles but throws an exception at runtime.
F. None of the above.
20. Which statements about instance keywords are correct? (Choose two.)
A. The that keyword can be used to read public members in the direct parent class.
B. The this keyword can be used to read all members declared within the class.
C. The super keyword can be used to read all members declared in a parent class.
D. The that keyword can be used to read members of another class.
E. The this keyword can be used to read public members in the direct parent class.
F. The super keyword can be used in static methods.
21. Fill in the blanks: A class ____________ an interface and ______________ an abstract class. 
An interface ______________ another interface.
A. extends, extends, implements
B. extends, implements, extends
C. extends, implements, implements
D. implements, extends, extends
E. implements, extends, implements
F. implements, implements, extends
22. Suppose you have the following code. Which of the images best represents the state of the ref-
erences c1, c2, and c3, right before the end of the main() method, assuming garbage collection 
hasn’t run? In the diagrams, each box represents a Chicken object with a number of eggs.
1:  public class Chicken {
2:     private Integer eggs = 2;
3:     { this.eggs = 3; }
4:     public Chicken(int eggs) {
5:        this.eggs = eggs;
6:     }
7:     public static void main(String[] r) {
8:        var c1 = new Chicken(1);
9:        var c2 = new Chicken(2);
10:       var c3 = new Chicken(3);
11:       c1.eggs = c2.eggs;
12:       c2 = c1;
13:       c3.eggs = null;
14:    } }
Option A
Option C Option D
Option B
c1
c2
c3
2
null
2
c1
c2
c3
1
null
2
c1
c2
c3
2
3
1
c1
c2
c3
1
null
1
A. Option A.
B. Option B.Java Object-Oriented Approach  37
C. Option C.
D. Option D.
E. The code does not compile.
F. None of the above.
23. What is the output of the following application?
package musical;
interface Speak { default int talk() { return 7; } }
interface Sing { default int talk() { return 5; } }
public class Performance implements Speak, Sing {
   public int talk(String... x) {  
      return x.length;
   }
   public static void main(String[] notes) {
      System.out.print(new Performance().talk());
   }
}
A. 7
B. 5
C. The code does not compile.
D. The code compiles without issue, but the output cannot be determined until runtime.
E. None of the above.
24. What is the output of the following application?
package ai;
 
interface Pump {
   void pump(double psi);
}
interface Bend extends Pump {
   void bend(double tensileStrength);
}
public class Robot {
   public static final void apply(
      Bend instruction, double input) {
      instruction.bend(input);
   }
   public static void main(String... future) {
      final Robot r = new Robot();
      r.apply(x -> System.out.print(x+" bent!"), 5);
   }
}
A. 5 bent!
B. 5.0 bent!
C. The code does not compile because Bend is not a functional interface.
D. The code does not compile because of the apply() method declaration.
E. None of the above.
25. Which statement is true about encapsulation while providing the broadest access allowed?
A. Variables are private, and methods are private.
B. Variables are private, and methods are public.
C. Variables are public, and methods are private.
D. Variables are public, and methods are public.
E. None of the above.
26. Fill in the blanks: The ___________________ access modifier allows access to everything the 
___________________ access modifier does and more.
A. package-private, private
B. private, protected
C. protected, public
D. private, package-private
E. None of the above
27. Which statement about the following interface is correct?
public interface Swimming {
   String DEFAULT = "Diving!";      // k1
   abstract int breath();
   private static void stroke() {
      if(breath()==1) {             // k2
         System.out.print("Go!");
      } else {
         System.out.print(dive());  // k3
      }
   }
   static String dive() {
      return DEFAULT;               // k4
   }
}Java Object-Oriented Approach  39
A. The code compiles without issue.
B. The code does not compile because of line k1.
C. The code does not compile because of line k2.
D. The code does not compile because of line k3.
E. The code does not compile because of line k4.
F. None of the above.
28. Which is the first line to fail to compile?
class Tool {
   private void repair() {}            // r1
   void use() {}                       // r2
}
 
class Hammer extends Tool {
   private int repair() { return 0; } // r3
   private void use() {}              // r4
   public void bang() {}              // r5
}
A. r1
B. r2
C. r3
D. r4
E. r5
F. None of the above
29. Which modifier can be applied to an abstract interface method?
A. final
B. interface
C. protected
D. void
E. None of the above
30. What is the output of the Plant program?
class Bush extends Plant {
   String type = "bush";
}
public class Plant {
   String type = "plant";
   public static void main(String[] args) {
      Plant w1 = new Bush();
      Bush w2 = new Bush();
      Plant w3 = w2;
      System.out.print(w1.type+","+w2.type+","+w3.type);
   }
}
A. plant,bush,plant
B. plant,bush,bush
C. bush,plant,bush
D. bush,bush,bush
E. The code does not compile.
F. None of the above.
31. Which statements can accurately fill in the blanks in this table? (Choose two.)
Variable Type Can Be Called Within the Class from What Type of Method?
Instance Blank 1: _____________
static Blank 2: _____________
A. Blank 1: an instance method only
B. Blank 1: a static method only
C. Blank 1: an instance or static method
D. Blank 2: an instance method only
E. Blank 2: a static method only
F. Blank 2: an instance or static method
32. What is the correct order of statements for a Java class file?
A. import statements, package statement, class declaration
B. package statement, class declaration, import statements
C. class declaration, import statements, package statement
D. package statement, import statements, class declaration
E. import statements, class declaration, package statement
F. class declaration, package statement, import statements
33. What is true of the following code? (Choose three.)
1:  class Penguin {
2:     enum Baby { EGG }
3:     static class Chick { 
4:        enum Baby { EGG }Java Object-Oriented Approach  41
5:     }
6:     public static void main(String[] args) {
7:        boolean match = false;
8:        Baby egg = Baby.EGG;
9:        switch (egg) {
10:          case EGG:
11:             match = true;
12:       }
13:    }
14: }
A. It compiles as is.
B. It does not compile as is.
C. Removing line 2 would create an additional compiler error.
D. Removing line 2 would not create an additional compiler error.
E. Removing the static modifier on line 3 would create an additional compiler error.
F. Removing the static modifier on line 3 would not create an additional compiler error.
34. Which are true of the following? (Choose two.)
package beach;
public class Sand {
   private static int numShovels;
   private int numRakes;
 
   public static int getNumShovels() {
      return numShovels;
   }
   public static int getNumRakes() {
      return numRakes;
   }
   public Sand() {
      System.out.print("a");
   }
   public void Sand() {
      System.out.print("b");
   }
   public void run() {
      new Sand();
      Sand();
   }
   public static void main(String... args) {
      new Sand().run();
   }
}
A. The code compiles.
B. One line doesn’t compile.
C. Two lines don’t compile.
D. If any constructors and/or methods that do not compile are removed, the remaining code 
prints a.
E. If the code compiles or if any constructors/methods that do not compile are removed, 
the remaining code prints ab.
F. If the code compiles or if any constructors/methods that do not compile are removed, 
the remaining code prints aab.
35. Which of the following class types cannot be marked final or abstract?
A. static nested class.
B. Local class.
C. Anonymous class.
D. Member inner class.
E. All of the above can be marked final or abstract.
36. Fill in the blanks: The ___________________ access modifier allows access to everything the 
___________________ access modifier does and more. (Choose three.)
A. package-private, protected
B. package-private, public
C. protected, package-private
D. protected, public
E. public, package-private
F. public, protected
37. Which is the first line containing a compiler error?
var title = "Weather";         // line x1
var hot = 100, var cold = 20;  // line x2
var f = 32, int c = 0;         // line x3
A. x1
B. x2
C. x3
D. None of the aboveJava Object-Oriented Approach  43
38. How many of the following members of Telephone interface are public?
public interface Telephone {
   static int call() { return 1; }
   default void dial() {}
   long answer();
   String home = "555-555-5555";
}
A. Zero.
B. One.
C. Two.
D. Three.
E. Four.
F. The code does not compile.
39. Which best describes what the new keyword does?
A. Creates a copy of an existing object and treats it as a new one.
B. Creates a new primitive.
C. Instantiates a new object.
D. Switches an object reference to a new one.
E. The behavior depends on the class implementation.
40. How many lines will not compile?
12: public void printVarargs(String... names) {
13:    System.out.println(Arrays.toString(names));
14: }
15: public void printArray(String[] names) {
16:    System.out.println(Arrays.toString(names));
17: }
18: public void stormy() {
19:    printVarargs("Arlene");
20:    printVarargs(new String[]{"Bret"});
21:    printVarargs(null);
22:    printArray ("Cindy");
23:    printArray (new String[]{"Don"});
24:    printArray (null);
25: }
A. Zero
B. One
C. Two
D. Three
E. Four
F. Five
41. Which of the following can include a static method in its definition? (Choose three.)
A. Interface
B. Anonymous class
C. Abstract class
D. Member inner class
E. Local class
F. static nested class
42. What is the minimum number of lines that need to be removed to make this code compile?
@FunctionalInterface
public interface Play {
   public static void baseball() {}
   private static void soccer() {}
   default void play() {}
   void fun();
}
A. 1.
B. 2.
C. 3.
D. 4.
E. The code compiles as is.
43. Fill in the blanks: A class that defines an instance variable with the same name as a variable 
in the parent class is referred to as ___________________ a variable, while a class that defines 
a static method with the same signature as a static method in a parent class is referred to as 
___________________ a method.
A. hiding, overriding
B. overriding, hiding
C. masking, masking
D. hiding, masking
E. replacing, overriding
F. hiding, hidingJava Object-Oriented Approach  45
44. What change is needed to make Secret well encapsulated?
import java.util.*;
 
public class Secret {
 
   private int number = new Random().nextInt(10);
   public boolean guess(int candidate) {
      return number == candidate;
   }
}
A. Change number to use a protected access modifier.
B. Change number to use a public access modifier.
C. Declare a private constructor.
D. Declare a public constructor.
E. Remove the guess method.
F. None. It is already well encapsulated.
45. Which of the following are the best reasons for creating a public static interface 
method? (Choose two.)
A. Allow static methods to access instance methods.
B. Allow an interface to define a method at the class level.
C. Provide an implementation that a class implementing the interface can override.
D. Improve code reuse within the interface.
E. Add backward compatibility to existing interfaces.
F. Improve encapsulation of the interface.
46. What is the output of the following application?
package space;
public class Bottle {
   public static class Ship {
      private enum Sail {          // w1
         TALL {protected int getHeight() {return 100;}},
         SHORT {protected int getHeight() {return 2;}};
         protected abstract int getHeight();
      }
      public Sail getSail() {
         return Sail.TALL;
      }
   }
   public static void main(String[] stars) {
      var bottle = new Bottle();
      Ship q = bottle.new Ship();  // w2
      System.out.print(q.getSail());
   }
}
A. TALL
B. The code does not compile because of line w1.
C. The code does not compile because of line w2.
D. The code does not compile for another reason.
E. The code compiles, but the application does not produce any output at runtime.
F. None of the above.
47. Which of the following is not a valid order for elements within a class?
A. Constructor, instance variables, method declarations
B. Instance variables, static initializer constructor, method declarations
C. Method declarations, instance variables, constructor
D. Instance initializer, constructor, instance variables, constructor
E. None of the above
48. Which line of code, inserted at line p1, causes the application to print 5?
package games;
public class Jump {
   private int rope = 1;
   protected boolean outside;
   
   public Jump() {
      // line p1
      outside = true;
   }
   
   public Jump(int rope) {
      this.rope = outside ? rope : rope+1;
   }
   
   public static void main(String[] bounce) {
      System.out.print(new Jump().rope);
   }
}Java Object-Oriented Approach  47
A. this(4);
B. new Jump(4);
C. this(5);
D. rope = 4;
E. super(4);
F. super(5);
49. Which of the following is not a reason to use encapsulation when designing a class? 
(Choose two.)
A. Improve security.
B. Increase concurrency and improve performance.
C. Maintain class data integrity of data elements.
D. Prevent users from modifying the internal attributes of a class.
E. Prevent variable state from changing.
F. Promote usability by other developers.
50. Which statement about the following program is correct? (Choose two.)
package ballroom;
 
class Leader {}
class Follower {}
abstract class Dancer {
   public Leader getPartner() { return new Leader(); }
   abstract public Leader getPartner(int count);  // u1
}
 
public abstract class SwingDancer extends Dancer {
   public Leader getPartner(int x) { return null; }
   public Follower getPartner() {                 // u2
      return new Follower();                      // u3
   }
   public static void main(String[] args) {
      new SwingDancer().getPartner();             // u4
   }
}
A. The code does not compile because of line u1.
B. The code does not compile because of line u2.
C. The code does not compile because of line u3.
D. The code does not compile because of line u4.
E. At least three of the classes compile without issue.
F. All of the classes compile without issue.
51. Which is not a true statement given this diagram? Assume all classes are public.
com.light
Flashlight
• private replaceBulb()
• public turnOn()
Phone
• protected display()
• public charge()
com.dark
Blanket
• wash()
Tent
• private pitch()
• public goCamping()
A. Instance methods in the Blanket class can call the Flashlight class’s turnOn().
B. Instance methods in the Flashlight class can call the Flashlight class’s replaceBulb().
C. Instance methods in the Phone class can call the Blanket class’s wash().
D. Instance methods in the Tent class can call the Tent class’s pitch().
E. None of the above.
52. Given the diagram in the previous question, how many of the classes shown in the diagram 
can call the display() method?
A. Zero
B. One
C. Two
D. Three
E. Four
53. Which of the following statements are correct? (Choose two.)
A. Java allows multiple inheritance using two abstract classes.
B. Java allows multiple inheritance using two interfaces.
C. Java does not allow multiple inheritance.
D. An interface can extend another interface.
E. An interface can implement another interface.
54. Which statement about the following code is correct?
public class Dress {
   int size = 10;
   default int getSize() {
      display();
      return size;
   }
   static void display() {
      System.out.print("What a pretty outfit!");
   }Java Object-Oriented Approach  49
   private int getLength() {
      display();
      return 15;
   }
   private static void tryOn() {
      display();
   }
}
A. The code contains an invalid constant.
B. The method getSize() does not compile.
C. The method getLength() does not compile.
D. The method tryOn() does not compile.
E. The code compiles.
F. None of the above.
55. What is the output of the following application?
package ocean;
abstract interface CanSwim {
   public void swim(final int distance);
}
public class Turtle {
   final int distance = 2;
   public static void main(String[] seaweed) {
      final int distance = 3;
      CanSwim seaTurtle = {
         final int distance = 5;
         @Override
         public void swim(final int distance) {
            System.out.print(distance);
         }
      };
      seaTurtle.swim(7);
   }
}
A. 2
B. 3
C. 5
D. 7
E. The code does not compile.
F. None of the above.
56. What is the output of the following application?
package pet;
public class Puppy {
   public static int wag = 5;   // q1
   public void Puppy(int wag) { // q2
      this.wag = wag;
   }
   public static void main(String[] tail) {
      System.out.print(new Puppy(2).wag); // q3
   }
}
A. 2
B. 5
C. The first line with a compiler error is line q1.
D. The first line with a compiler error is line q2.
E. The first line with a compiler error is line q3.
57. Given the following method signature, which classes can call it?
void run(String government)
A. Classes in other packages
B. Classes in the same package
C. Subclasses in a different package
D. All classes
E. None of the above
58. Which is the first declaration to not compile?
package desert;
 
interface CanBurrow {
   public abstract void burrow();
}
 
@FunctionalInterface interface HasHardShell
   extends CanBurrow {} 
 
abstract class Tortoise implements HasHardShell {
   public abstract int toughness();
}Java Object-Oriented Approach  51
public class DesertTortoise extends Tortoise {
   public int toughness() { return 11; }
}
A. The CanBurrow interface does not compile.
B. The HasHardShell interface does not compile.
C. The Tortoise interface does not compile.
D. The DesertTortoise interface does not compile.
E. All of the interfaces compile.
59. Which is the first line to not compile?
interface Building {
   default Double getHeight() { return 1.0; }         // m1
}
interface Office {
   public default String getHeight() { return null; } // m2
}
abstract class Tower implements Building, Office {}   // m3
public class Restaurant extends Tower {}              // m4
A. Line m1
B. Line m2
C. Line m3
D. Line m4
E. None of the above
60. What is the output of the following code snippet?
String tree = "pine";
int count = 0;
if (tree.equals("pine")) {
   int height = 55;
   count = count + 1;
}
System.out.print(height + count);
A. 1
B. 55
C. 56
D. It does not compile.
61. Which of the following are valid comments in Java? (Choose three.)
A. /****** TODO */
B. # Fix this bug later
C. ' Error closing pod bay doors
D. / Invalid record /
E. /* Page not found */
F. // IGNORE ME
62. Which of the following modifiers can both be applied to a method? (Choose three.)
A. private and final
B. abstract and final
C. static and private
D. private and abstract
E. abstract and static
F. static and protected
63. Given the following class, what should be inserted into the two blanks to ensure the class 
data is properly encapsulated?
package storage;
public class Box {
   public String stuff;
   __________ String  __________() {
      return stuff;
   }
 
   public void setStuff(String stuff) {
      this.stuff = stuff;
   }
}
A. private and getStuff
B. private and isStuff
C. public and getStuff
D. public and isStuff
E. None of the aboveJava Object-Oriented Approach  53
64. How many rows of the following table contain an error?
Interface member Membership type Requires method body?
Static method Class Yes
Private non-static method Class Yes
Abstract method Instance No
Default method Instance No
Private static method Class Yes
A. Zero
B. One
C. Two
D. Three
E. Four
65. Fill in the blanks: ___________________ is used to call a constructor in the parent class, while 
___________________ is used to reference a member of the parent class.
A. super and this()
B. super and super()
C. super() and this
D. super() and super
E. None of the above
66. What is the output of the Watch program?
1:  class SmartWatch extends Watch {
2:     private String getType() { return "smart watch"; }
3:     public String getName(String suffix) {
4:        return getType() + suffix;
5:     }
6:  }
7:  public class Watch {
8:     private String getType() { return "watch"; }
9:     public String getName(String suffix) {
10:       return getType() + suffix;
11:    }
12:    public static void main(String[] args) {
13:       var watch = new Watch();
14:       var smartWatch = new SmartWatch();
15:       System.out.print(watch.getName(","));
16:       System.out.print(smartWatch.getName(""));
17:    }
18: }
A. smart watch,watch
B. watch,smart watch
C. watch,watch
D. The code does not compile.
E. An exception is printed at runtime.
F. None of the above.
67. What is the output of the Movie program?
package theater;
class Cinema {
   private String name = "Sequel";
   public Cinema(String name) {
      this.name = name;
   }
}
public class Movie extends Cinema {
   private String name = "adaptation";
   public Movie(String movie) {
      this.name = "Remake";
   }
   public static void main(String[] showing) {
      System.out.print(new Movie("Trilogy").name);
   }
}
A. Sequel
B. Trilogy
C. Remake
D. Adaptation
E. null
F. None of the above
68. Where can a final instance variable be assigned a value? (Choose three.)
A. Instance initializer
B. static initializer
C. Instance method
D. On the line it is declared
E. Class constructor
F. static methodJava Object-Oriented Approach  55
69. What is the output of the following code?
public class Bunny {
   static interface Rabbit { }
   static class FlemishRabbit implements Rabbit { }
 
   private static void hop(Rabbit r) {
      System.out.print("hop");
   }
   private static void hop(FlemishRabbit r) {
      System.out.print("HOP");
   }
   public static void main(String[] args) {
      Rabbit r1 = new FlemishRabbit();
      FlemishRabbit r2 = new FlemishRabbit();
      hop(r1);
      hop(r2);
   }
}
A. hophop
B. HOPhop
C. hopHOP
D. HOPHOP
E. The code does not compile.
70. Which of the following results is not a possible output of this program?
package sea;
enum Direction { north, south, east, west; };
public class Ship {
   public static void main(String[] compass) {
      System.out.print(Direction.valueOf(compass[0]));
   }
}
A. WEST is printed.
B. south is printed.
C. An ArrayIndexOutOfBoundsException is thrown at runtime.
D. An IllegalArgumentException is thrown at runtime.
E. All of the above are possible.
71. Which statement about encapsulation is not true?
A. Encapsulation allows putting extra logic in the getter and setter methods.
B. Encapsulation can use immutable instance variables in the implementation.
C. Encapsulation causes two classes to be more tightly tied together.
D. Encapsulation makes it easier to change the instance variables in the future.
E. All of the above are true.
72. What is the output of the following application?
package radio;
public class Song {
   public void playMusic() {
      System.out.print("Play!");
   }
   private static void playMusic() {
      System.out.print("Music!");
   }
   private static void playMusic(String song) {
      System.out.print(song);
   }
   public static void main(String[] tracks) {
      new Song().playMusic();
   }
}
A. Play!
B. Music!
C. The code does not compile.
D. The code compiles, but the answer cannot be determined until runtime.
73. Which of the following statements about overriding a method are correct? (Choose three.)
A. The return types must be covariant.
B. The access modifier of the method in the child class must be the same or narrower than 
the method in the superclass.
C. The return types must be the same.
D. A checked exception thrown by the method in the parent class must be thrown by the 
method in the child class.
E. A checked exception thrown by a method in the child class must be the same or nar-
rower than the exception thrown by the method in the parent class.
F. The access modifier of the method in the child class must be the same or broader than 
the method in the superclass.Java Object-Oriented Approach  57
74. How lines of the following code do not compile?
10: interface Flavor {
11:    public default void happy() {
12:       printFlavor("Rocky road");
13:    }
14:    private static void excited() {
15:       printFlavor("Peanut butter");
16:    }
17:    private void printFlavor(String f) {
18:       System.out.println("Favorite Flavor is: "+f);
19:    }
20:    public static void sad() {
21:       printFlavor("Butter pecan");
22:    }
23: }
24: public class IceCream implements Flavor {
25:    @Override public void happy() {
26:       printFlavor("Cherry chocolate chip");
27:    } }
A. None, they all compile
B. One
C. Two
D. Three
E. Four
F. Five or more
75. Of the following four modifiers, choose the one that is not implicitly applied to all interface 
variables.
A. final
B. abstract
C. static
D. public
76. Given the following method, what is the first line that does not compile?
public static void main(String[] args) {
   int Integer = 0;        // k1
   Integer int = 0;        // k2
   Integer ++;             // k3
   int++;                  // k4
   int var = null;         // k5
}
A. k1
B. k2
C. k3
D. k4
E. k5
77. What is the result of compiling and executing the following class?
public class Tolls {
   private static int yesterday = 1;
   int tomorrow = 10;
 
   public static void main(String[] args) {
      var tolls = new Tolls();
      int today = 20, tomorrow = 40;  // line x
      System.out.print(
         today + tolls.tomorrow + tolls.yesterday); // line y
   }
}
A. The code does not compile due to line x.
B. The code does not compile due to line y.
C. 31
D. 61
78. What is the output of the following application?
package weather;
public class Forecast {
   public enum Snow {
      BLIZZARD, SQUALL, FLURRY
      @Override public String toString() { return "Sunny"; }
   }
 
   public static void main(String[] modelData) {
      System.out.print(Snow.BLIZZARD.ordinal() + " ");
      System.out.print(Snow.valueOf("flurry".toUpperCase()));
   }
}Java Object-Oriented Approach  59
A. 0 FLURRY
B. 1 FLURRY
C. 0 Sunny
D. 1 Sunny
E. The code does not compile.
F. None of the above.
79. Which of the following is not a true statement?
A. The first line of every constructor is a call to the parent constructor via the super() 
command.
B. A class is not required to have a constructor explicitly defined.
C. A constructor may pass arguments to the parent constructor.
D. A final instance variable whose value is not set when it is declared or in an initialization 
block should be set by the constructor.
E. None of the above.
80. What can fill in the blank so the play() method can be called from all classes in the com.
mammal and com.mammal.eland package, but not the com.mammal.gopher package?
package com.mammal;
 
public class Enrichment {
    void play() {}
}
A. Leave it blank.
B. private
C. protected
D. public
E. None of the above.
81. What is the output of the Rocket program?
package transport;
 
class Ship {
   protected int weight = 3;
   private int height = 5;
   public int getWeight() { return weight; }
   public int getHeight() { return height; }
}
 
public class Rocket extends Ship {
   public int weight = 2;
   public int height = 4;
   public void printDetails() {
      System.out.print(super.getWeight()+","+super.height);
   }
   public static final void main(String[] fuel) {
      new Rocket().printDetails();
   }
}
A. 2,5
B. 3,4
C. 5,2
D. 3,5
E. The code does not compile.
F. None of the above.
82. Imagine you are working with another team to build an application. You are developing 
code that uses a class that the other team has not finished writing yet. You want to allow 
easy integration once the other team’s code is complete. Which statements would meet this 
requirement? (Choose two.)
A. An abstract class is best.
B. An interface is best.
C. Either of an abstract class or interface would meet the requirement.
D. The methods should be protected.
E. The methods should be public.
F. The methods should be static.
83. Fill in the blank with the line of code that allows the program to compile and print 10 
at runtime.
interface Speak {
   public default int getVolume() { return 20; }
}
interface Whisper {
   public default int getVolume() { return 10; } 
}
public class Debate implements Speak, Whisper {
   public int getVolume() { return 30; }
   public static void main(String[] a) {
      var d = new Debate();Java Object-Oriented Approach  61
      System.out.println(______________);
   }
}
A. Whisper.d.getVolume()
B. d.Whisper.getVolume()
C. Whisper.super.getVolume()
D. d.Whisper.super.getVolume()
E. The code does not compile regardless of what is inserted into the blank.
F. None of the above.
84. Which of the following properties of an enum can be marked abstract?
A. The enum type definition
B. An enum method
C. An enum value
D. An enum constructor
E. None of the above
85. How many lines does the following code output?
public class Cars {
  static {
     System.out.println("static");
  }
  private static void drive() {
     System.out.println("fast");
  }
  { System.out.println("faster"); }
  public static void main(String[] args) {
     drive();
     drive();
  }
}
A. One.
B. Two.
C. Three.
D. Four.
E. Five.
F. None of the above. The code does not compile.
86. Suppose foo is a reference to an instance of a class Foo. Which of the following is not pos-
sible about the variable reference foo.bar?
A. bar is an instance variable.
B. bar is a static variable.
C. bar is a local variable.
D. It can be used to read from bar.
E. It can be used to write to bar.
F. All of the above are possible.
87. The following diagram shows two reference variables pointing to the same Bunny object in 
memory. The reference variable myBunny is of type Bunny, while unknownBunny is a valid 
but unknown data type. Which statements about the reference variables are true? Assume the 
instance methods and variables shown in the diagram are marked public. (Choose three.)
myBunny
unknownBunny
Bunny Object in Memory
A. The reference type of unknownBunny must be Bunny or a supertype of Bunny.
B. The reference type of unknownBunny cannot be cast to a reference type of Bunny.
C. The reference type of unknownBunny must be Bunny or a subclass of Bunny.
D. If the reference type of unknownBunny is Bunny, it has access to all of the same 
methods and variables as myBunny.
E. The reference type of unknownBunny could be an interface, class, or abstract class.
F. If the reference type of unknownBunny is Object, it has access to all of the same methods 
and variables as myBunny without a cast.
88. Which of the following interface methods are inherited by classes that implement the  
interface? (Choose two.)
A. private methods
B. private static methods
C. default methods
D. static methods
E. abstract methods
F. final methods
89. Which of these are functional interfaces?
interface Lion {
   public void roar();
   default void drink() {}Java Object-Oriented Approach  63
   String toString();
}
 
interface Tiger {
   public void roar();
   default void drink() {}
   int hashCode();
}
A. Lion
B. Tiger
C. Both Lion and Tiger
D. Neither is a functional interface.
E. The code does not compile.
90. Given the following code, which lines when placed independently in the blank allow the code 
to compile and print bounce? (Choose two.)
public class TennisBall {
   public TennisBall() {
      System.out.println("bounce");
   }
   public static void main(String[] slam) {
       _________________________
   }
}
A. var new = TennisBall;
B. TennisBall();
C. var var = new TennisBall();
D. new TennisBall;
E. new TennisBall();
91. How many of these methods compile?
public class Singing {
   private void sing(String key) { }
   public void sing_do(String key, String... harmonies) {
     this.sing(key);
   }
   public void sing_re(int note, String... sound, String key) {
      this.sing(key);
   } 
   public void sing_me(String... keys, String... pitches) {
      this.sing(key);
   }
   public void sing_far(String key, String... harmonies) {
      this.Singing.sing(key);
   }
   public void sing_so(int note, String... sound, String key) {
     this.Singing.sing(key);
   }
   public void sing_la(String... keys, String... pitches) {
      this.Singing.sing(key);
   }
}
A. Zero
B. One
C. Two
D. Three
E. Four
F. Five
92. What is the output of the following application?
package world;
public class Matrix {
   private int level = 1;
   class Deep {
      private int level = 2;
      class Deeper {
         private int level = 5;
         public void printReality(int level) {
            System.out.print(this.level+" ");
            System.out.print(Matrix.Deep.this.level+" ");
            System.out.print(Deep.this.level);
         }
      }
   }
   public static void main(String[] bots) {
      Matrix.Deep.Deeper simulation = new Matrix()
         .new Deep().new Deeper();Java Object-Oriented Approach  65
      simulation.printReality(6);
   }
}
A. 1 1 2
B. 5 2 2
C. 5 2 1
D. 6 2 2
E. 6 2 1
F. The code does not compile.
93. Given that Integer and Long are direct subclasses of Number, what type can be used to fill 
in the blank in the following class to allow it to compile?
package orchestra;
interface MusicCreator { public Number play(); }
abstract class StringInstrument {
   public Long play() {return 3L;}
}
public class Violin extends StringInstrument 
      implements MusicCreator {
   public _________ play() {
      return null;
   }
}
A. Long
B. Integer
C. Long or Integer
D. Long or Number
E. Long, Integer, or Number
F. None of the above
94. What is the output of the RightTriangle program?
package shapes;
 
abstract class Triangle {
   abstract String getDescription();
}
abstract class IsoRightTriangle extends RightTriangle { // g1
   public String getDescription() { return "irt"; }
}
public class RightTriangle extends Triangle {
   protected String getDescription() { return "rt"; }  // g2
   public static void main(String[] edges) {
      final var shape = new IsoRightTriangle();        // g3
      System.out.print(shape.getDescription());
   }
}
A. rt
B. irt
C. The code does not compile due to line g1.
D. The code does not compile due to line g2.
E. The code does not compile due to line g3.
F. None of the above.
95. What is the output of the following program?
interface Dog {
   private void buryBone() { chaseTail(); }
   private static void wagTail() { chaseTail(); }
   public default String chaseTail() { return "So cute!"; }
}
public class Puppy implements Dog {
   public String chaseTail() throws IllegalArgumentException {
      throw new IllegalArgumentException("Too little!");
   }
   public static void main(String[] t) {
      var p = new Puppy();
      System.out.print(p.chaseTail());
   }
}
A. So cute!
B. An exception is thrown with a Too little! message.
C. A different exception is thrown.
D. The code does not compile because buryBone() is not used.
E. The code does not compile because chaseTail() cannot declare any exceptions in the 
Puppy class.
F. None of the above.Java Object-Oriented Approach  67
96. Which of the following are advantages of using enumerated types in Java, rather than static 
constant values? (Choose three.)
A. Improve performance.
B. Provide access to fixed set of constants whose values do not change during the course of 
the application.
C. Provide a caller with a list of available values for a parameter within a method.
D. Ensure consistency of data across an application.
E. Add support for concurrency.
F. Offer ability to create new enumerated values at runtime.
97. How do you force garbage collection to occur at a certain point?
A. Calling System.forceGc()
B. Calling System.gc()
C. Calling System.requireGc()
D. Calling GarbageCollection.clean()
E. None of the above
98. Which changes made to the following class would help to properly encapsulate the data in 
the class?
package shield;
public class Protect {
   private String material;
   protected int strength;
 
   public int getStrength() {
      return strength;
   }
   public void setStrength(int strength) {
      this.strength = strength;
   }
}
A. Add a getter method for material.
B. Add a setter method for material.
C. Change the access modifier of material to protected.
D. Change the access modifier of strength to private.
E. None of the above.
99. Which are true statements about referencing variables from a lambda? (Choose two.)
A. Instance and static variables can be used regardless of whether effectively final.
B. Instance and local variables can be used regardless of whether effectively final.
C. Instance variables and method parameters must be effectively final to be used.
D. Local variables and method parameters must be effectively final to be used.
E. Local and static variables can be used regardless of whether effectively final.
F. Method parameters and static variables can be used regardless of whether effectively 
final.
100. Given the following two classes, each in a different package, which line inserted into the 
code allows the second class to compile?
package commerce;
public class Bank {
   public void withdrawal(int amountInCents) {}
   public void deposit(int amountInCents) {}
}
 
package employee;
// INSERT CODE HERE
public class Teller {
   public void processAccount(int deposit, int withdrawal) {
      withdrawal(withdrawal);
      deposit(deposit);
   }
}
A. import static commerce.Bank.*;
B. import static commerce.Bank;
C. static import commerce.Bank.*;
D. static import commerce.Bank;
E. None of the above
101. Given the following structure, which snippets of code return true? (Choose three.)
interface Friendly {}
abstract class Dolphin implements Friendly {}
class Animal implements Friendly {}
class Whale extends Object {}
public class Fish {}
class Coral extends Animal {}Java Object-Oriented Approach  69
A. new Coral() instanceof Friendly
B. null instanceof Object
C. new Coral() instanceof Object
D. new Fish() instanceof Friendly
E. new Whale() instanceof Object
F. new Dolphin() instanceof Friendly
102. What is true of the following code?
public class Eggs {
   enum Animal {
      CHICKEN(21), PENGUIN(75);
 
      private int numDays;
      private Animal(int numDays) {
         this.numDays = numDays;
      }
      public int getNumDays() {
         return numDays;
      }
      public void setNumDays(int numDays) {
         this.numDays = numDays;
      }
   }
   public static void main(String[] args) {
       Animal chicken = Animal.CHICKEN;
       chicken.setNumDays(20);
 
       System.out.print(chicken.getNumDays());
       System.out.print(" ");
       System.out.print(Animal.CHICKEN.getNumDays());
       System.out.print(" ");
       System.out.print(Animal.PENGUIN.getNumDays());
   }
}
A. It prints 20 20 20
B. It prints 20 20 75
C. It prints 20 21 75
D. It prints 21 21 75
E. It does not compile due to setNumDays().
F. It does not compile for another reason.
103. What statement about the following interface is correct?
1: public interface Thunderstorm {
2:    float rain = 1;
3:    char getSeason() { return 'W'; }
4:    boolean isWet();
5:    private static void hail() {}
6:    default String location() { return "Home"; }
7:    private static int getTemp() { return 35; }
8: }
A. Line 2 does not compile.
B. Line 3 does not compile.
C. Line 4 does not compile.
D. Line 5 does not compile.
E. Line 6 does not compile.
F. Line 7 does not compile.
G. All of the lines compile.
104. What is the output of the following application?
package finance;
 
enum Currency {
   DOLLAR, YEN, EURO
}
abstract class Provider {
   protected Currency c = Currency.EURO;
}
public class Bank extends Provider {
   protected Currency c = Currency.DOLLAR;
   public static void main(String[] pennies) {
      int value = 0;
      switch(new Bank().c) {
         case 0:
            value--; break;
         case 1:
            value++; break;
      }
      System.out.print(value);
   }
}Java Object-Oriented Approach  71
A. -1
B. 0
C. 1
D. The Provider class does not compile.
E. The Bank class does not compile.
F. None of the above.
105. How many lines need to be removed for this code to compile?
1:  package figures;
2:  public class Dolls {
3:     public int num() { return 3.0; }
4:     public int size() { return 5L; }
5:
6:     public void nested() { nested(2,true); }
7:     public int nested(int w, boolean h) { return 0; }
8:     public int nested(int level) { return level+1; }
9:
10:    public static void main(String[] outOfTheBox) {
11:       System.out.print(new Dolls().nested());
12:    }
13: }
A. Zero
B. One
C. Two
D. Three
E. Four
F. Five
106. Fill in the blanks: A class may be assigned to a(n) ___________________ reference variable 
automatically but requires an explicit cast when assigned to a(n) ___________________  
reference variable.
A. subclass, outer class
B. superclass, subclass
C. concrete class, subclass
D. subclass, superclass
E. abstract class, concrete class
107. Which statement about functional interfaces is incorrect?
A. A functional interface can have any number of static methods.
B. A functional interface can have any number of default methods.
C. A functional interface can have any number of private static methods.
D. A functional interface can have any number of abstract methods.
E. A functional interface can have any number of private methods.
F. All of the above are correct.
108. What are possible outputs of the following given that the comment on line X can be 
replaced by code?
// Mandrill.java
public class Mandrill {
   public int age;
   public Mandrill(int age) {
      this.age = age;
   }
   public String toString() {
      return "" + age;
   }
}
 
// PrintAge.java
public class PrintAge {
   public static void main (String[] args) {
      var mandrill = new Mandrill(5);
 
      // line X
 
      System.out.println(mandrill);
   }
}
A. 0
B. 5
C. Either 0 or 5
D. Any int value
E. Does not compile
109. How many of the String objects are eligible for garbage collection right before the end of 
the main() method?Java Object-Oriented Approach  73
public static void main(String[] ohMy) {
   String animal1 = new String("lion");
   String animal2 = new String("tiger");
   String animal3 = new String("bear");
 
   animal3 = animal1;
   animal2 = animal3;
   animal1 = animal2;
}
A. None
B. One
C. Two
D. Three
E. None of the above
110. Suppose Panther and Cub are interfaces and neither contains any default methods. 
Which statements are true? (Choose two.)
Panther
Cub
A. If Panther has a single abstract method, Cub is guaranteed to be a functional 
interface.
B. If Panther has a single abstract method, Cub may be a functional interface.
C. If Panther has a single abstract method, Cub cannot be a functional interface.
D. If Panther has two abstract methods, Cub is guaranteed to be a functional  
interface.
E. If Panther has two abstract methods, Cub may be a functional interface.
F. If Panther has two abstract methods, Cub cannot be a functional interface.
111. A local class can access which type of local variables? (Choose two.)
A. final
B. private
C. effectively final
D. static
E. default
F. const
112. What does the following output?
1:  public class InitOrder {
2:     public String first = "instance";
3:     public InitOrder() {
4:        first = "constructor";
5:     }
6:     { first = "block";  }
7:     public void print() {
8:        System.out.println(first);
9:     }
10:    public static void main(String... args) {
11:       new InitOrder().print();       
12:    }
13: }
A. block
B. constructor
C. instance
D. The code does not compile.
E. None of the above.
113. Which statement about the following interface is correct?
public interface Tree {
   public static void produceSap() {
      growLeaves();
   }
   public abstract int getNumberOfRings() {
      return getNumberOfRings();
   }
   private static void growLeaves() {
      produceSap();
   }
   public default int getHeight() {
      return getHeight ();
   }
}
A. The code compiles.
B. The method produceSap() does not compile.
C. The method getNumberOfRings() does not compile.
D. The method growLeaves() does not compile.Java Object-Oriented Approach  75
E. The method getHeight() does not compile.
F. The code does not compile because it contains a cycle.
114. Which statements about a variable with a type of var are true? (Choose two.)
A. The variable can be assigned null at any point in the program.
B. The variable can be assigned null only after initial initialization.
C. The variable can never be assigned null.
D. Only primitives can be used with the variable.
E. Only objects can be used with the variable.
F. Either a primitive or an object can be used with the variable.
115. Assume there is a class Bouncer with a protected variable. Methods in which class can 
access this variable?
A. Any subclass of Bouncer or any class in the same package as Bouncer
B. Any superclass of Bouncer
C. Only subclasses of Bouncer
D. Only classes in the same package as Bouncer
E. None of the above
116. What is the output of the following application?
package forest;
public class Woods {
   static class Tree {}
   public static void main(String[] leaves) {
      int heat = 2;
      int water = 10-heat;
      final class Oak extends Tree {  // p1
         public int getWater() {
            return water;             // p2
         }
      }
      System.out.print(new Oak().getWater());
      water = 0;
   }
}
A. 8
B. Line p1 contains a compiler error.
C. Line p2 contains a compiler error.
D. Another line of code contains a compiler error.
E. None of the above.
117. Which can fill in the blank to make the code compile? (Choose two.)
interface Australian {}
interface Mammal {}
________________ Australian, Mammal {}
A. class Quokka extends
B. class Quokka implements
C. Neither A nor B. Only one interface can be specified.
D. interface Quokka extends
E. interface Quokka implements
F. Neither D nor E. Only one interface can be specified.
118. What is true of the following method?
public void setColor(String color) {
   color = color;
}
A. It is a correctly implemented accessor method.
B. It is a correctly implemented mutator method.
C. It is an incorrectly implemented accessor method.
D. It is an incorrectly implemented mutator method.
E. None of the above.
119. Which of the following statements about calling this() in a constructor are true? (Choose 
three.)
A. If arguments are provided to this(), then there must be a constructor in the class able 
to take those arguments.
B. If arguments are provided to this(), then there must be a constructor in the super-
class able to take those arguments.
C. If the no-argument this() is called, then the class must explicitly implement the no-
argument constructor.
D. If super() and this() are both used in the same constructor, super() must appear 
on the line immediately after this().
E. If super() and this() are both used in the same constructor, this() must appear 
on the line immediately after super().
F. If this() is used, it must be the first line of the constructor.
120. What is the result of compiling and executing the following class?
public class RollerSkates {
   static int wheels = 1;
   int tracks = 5;
   public static void main(String[] arguments) {
      RollerSkates s = new RollerSkates();Java Object-Oriented Approach  77
      int feet=4, tracks = 15;
      System.out.print(feet + tracks + s.wheels);
   }
}
A. The code does not compile.
B. 4
C. 5
D. 10
E. 20
121. Which statements about the following program are correct? (Choose two.)
package vessel;
 
class Problem extends Exception {}
abstract class Danger {
   protected abstract void isDanger() throws Problem; // m1
}
public class SeriousDanger extends Danger { // m2
   protected void isDanger() throws Exception { // m3
      throw new RuntimeException(); // m4
   }
   public static void main(String[] w) throws Throwable { // m5
      var sd = new SeriousDanger().isDanger(); // m6
   }
}
A. The code does not compile because of line m1.
B. The code does not compile because of line m2.
C. The code does not compile because of line m3.
D. The code does not compile because of line m4.
E. The code does not compile because of line m5.
F. The code does not compile because of line m6.
122. Which statements about top-level and member inner classes are correct? (Choose three.)
A. Both can be marked protected.
B. Only top-level classes can be declared final.
C. Both can declare constructors.
D. Member inner classes cannot be marked private.
E. Member inner classes can access private variables of the top-level class in which it is 
defined.
F. Both can be marked abstract.
123. What is required to define a valid Java class file?
A. A class declaration
B. A package statement
C. An import statement
D. A class declaration and package statement
E. A class declaration and at least one import statement
F. The public modifier
124. How many objects are eligible for garbage collection right before the end of the main() 
method?
1:  public class Person {
2:     public Person youngestChild;
3: 
4:     public static void main(String... args) {
5:        Person elena = new Person();
6:        Person janeice = new Person();
7:        elena.youngestChild = janeice;
8:        janeice = null;
9:        Person zoe = new Person();
10:       elena.youngestChild = zoe;
11:       zoe = null;
12:    } }
A. None.
B. One.
C. Two.
D. Three.
E. The code does not compile.
125. What is the output of the following application?
package race; 
interface Drive {
   int SPEED = 5;
   default int getSpeed() { return SPEED; }
}
interface Hover {
   int MAX_SPEED = 10;
   default int getSpeed() { return MAX_SPEED; }
}
public class Car implements Drive, Hover {
   public static void main(String[] gears) {Java Object-Oriented Approach  79
      class RaceCar extends Car {
         @Override public int getSpeed() { return 15; }
      };
      System.out.print(new RaceCar().getSpeed());
   } }
A. 5
B. 10
C. 15
D. The code does not compile.
E. The answer cannot be determined with the information given.
126. What is the output of the following application? (Choose two.)
1:  public class ChooseWisely {
2:     public ChooseWisely() { super(); }
3:     public int choose(int choice) { return 5; }
4:     public int choose(short choice) { return 2; }
5:     public int choose(long choice) { return 11; }
6:     public int choose(double choice) { return 6; }
7:     public int choose(Float choice) { return 8; }
8:     public static void main(String[] path) {
9:        ChooseWisely c = new ChooseWisely();
10:       System.out.println(c.choose(2f));
11:       System.out.println(c.choose((byte)2+1));
12:    }
13: }
A. 2
B. 3
C. 5
D. 6
E. 8
127. Fill in the blanks: It is possible to extend a(n) ______________ but not a(n) ______________. 
(Choose two.)
A. interface, abstract class
B. anonymous class, static nested class
C. abstract class, enum
D. enum, interface
E. abstract class, interface
F. local class, anonymous class
128. How many lines of the following program do not compile?
1: public enum Color {
2:    RED(1,2) { void toSpectrum() {} },
3:    BLUE(2) { void toSpectrum() {} void printColor() {} },
4:    ORANGE() { void toSpectrum() {} },
5:    GREEN(4);
6:    public Color(int... color) {}
7:    abstract void toSpectrum();
8:    final void printColor() {}
9: }
A. Zero
B. One
C. Two
D. Three
E. More than three
129. What is the output of the Square program?
package shapes;
 
abstract class Trapezoid {
   private int getEqualSides() {return 0;}
}
abstract class Rectangle extends Trapezoid {
   public static int getEqualSides() {return 2;}  // x1
}
public final class Square extends Rectangle {
   public int getEqualSides() {return 4;}         // x2
   public static void main(String[] corners) {
      final Square myFigure = new Square();       // x3
      System.out.print(myFigure.getEqualSides());
   }
}
A. 0
B. 2
C. 4
D. The code does not compile due to line x1.
E. The code does not compile due to line x2.
F. The code does not compile due to line x3.Java Object-Oriented Approach  81
130. What can fill in the blank so the play() method can be called from all classes in the com.
mammal package, but not the com.mammal.gopher package?
package com.mammal;
 
public class Enrichment {
    void play() {}
}
A. Leave it blank.
B. private
C. protected
D. public
E. None of the above.
131. How many cells in the following table are incorrect?
Type
Allows abstract 
methods? Allows constants? Allows constructors?
Abstract class Yes Yes No
Concrete class Yes Yes Yes
Interface Yes Yes Yes
A. Zero
B. One
C. Two
D. Three
E. Four
132. Which statements are true about a functional interface? (Choose three.)
A. It may contain any number of abstract methods.
B. It must contain a single abstract method.
C. It may contain any number of private methods.
D. It must contain a single private method.
E. It may contain any number of static methods.
F. It must contain a single static method.
133. Which variables have a scope limited to a method?
A. Interface variables
B. Class variables
C. Instance variables
D. Local variables
134. What is a possible output of the following application?
package wrap;
public class Gift {
   private final Object contents;
   protected Object getContents() {
      return contents;
   }
   protected void setContents(Object contents) {
      this.contents = contents;
   }
   public void showPresent() {
      System.out.print("Your gift: "+contents);
   }
   public static void main(String[] treats) {
      Gift gift = new Gift();
      gift.setContents(gift);
      gift.showPresent();
   }
}
A. Your gift: wrap.Gift@29ca2745
B. Your gift: Your gift:
C. It does not compile.
D. It compiles but throws an exception at runtime.
135. Which of the following are the best reasons for creating a default interface method? 
(Choose two.)
A. Allow interface methods to be overloaded.
B. Add backward compatibility to existing interfaces.
C. Give an interface the ability to create final methods.
D. Allow an interface to define a method at the class level.
E. Improve code reuse among classes that implement the interface.
F. Improve encapsulation of the interface.
136. How many compiler errors does the following code contain?
package animal;
interface CanFly {
   public void fly() {}
}
final class Bird {
   public int fly(int speed) {}
}
public class Eagle extends Bird implements CanFly {Java Object-Oriented Approach  83
   public void fly() {}
}
A. None
B. One
C. Two
D. Three
E. Four
137. Which of the following statements is not true?
A. An instance of one class may access an instance of another class’s attributes if it has a 
reference to the instance and the attributes are declared public.
B. An instance of one class may access package-private attributes in a parent class, 
provided the parent class is not in the same package.
C. An instance of one class may access an instance of another class’s attributes if both 
classes are located in the same package and marked protected.
D. Two instances of the same class may access each other’s private attributes.
E. All of the above are true.
138. What is the output of the following code?
public class Bunny {
   static class Rabbit {
      void hop() {
         System.out.print("hop");
      }
   }
   static class FlemishRabbit extends Rabbit {
      void hop() {
         System.out.print("HOP");
      }
    }
    public static void main(String[] args) {
       Rabbit r1 = new FlemishRabbit();
       FlemishRabbit r2 = new FlemishRabbit();
       r1.hop();
       r2.hop();
    }
}
A. hophop
B. HOPhop
C. hopHOP
D. HOPHOP
E. The code does not compile.
139. Which of the following are valid class declarations? (Choose three.)
A. class _ {}
B. class river {}
C. class Str3@m {}
D. class Pond2$ {}
E. class _var_ {}
F. class 5Ocean {}
140. What is the output of the InfiniteMath program?
class Math {
   public final double secret = 2;
}
class ComplexMath extends Math {
   public final double secret = 4;
}
public class InfiniteMath extends ComplexMath {
   public final double secret = 8;
   public static void main(String[] numbers) {
      Math math = new InfiniteMath();
      System.out.print(math.secret);
   }
}
A. 2.0
B. 4.0
C. 8.0
D. The code does not compile.
E. The code compiles but prints an exception at runtime.
F. None of the above.
141. Given the following application, which diagram best represents the state of the mySkier, 
mySpeed, and myName variables in the main() method after the call to the slalom() 
method?
package slopes;
public class Ski {
   private int age = 18;
   private static void slalom(Ski racer,
      int[] speed, String name) {
 
      racer.age = 18;Java Object-Oriented Approach  85
      name = "Wendy";
      speed = new int[1];
      speed[0] = 11;
      racer = null;
   }
   
   public static void main(String... mountain) {
      final var mySkier = new Ski();
      mySkier.age = 16;
      final int[] mySpeed = new int[1];
      final String myName = "Rosie";
      slalom(mySkier,mySpeed,myName);
   }
}
A. 
mySkier
mySpeed
myName "Rosie"
int[]
18
null
B. 
mySkier
mySpeed
myName "Wendy"
int[]
11
Ski
age: 18
C. 
mySkier
mySpeed
myName "Rosie"
int[]
0
Ski
age: 18
D. 
mySkier
mySpeed
myName "Wendy"
int[]
0
Ski
age: 16
142. What is the output of the following application?
package zoo;
public class Penguin {
   private int volume = 1;
   private class Chick {
      private static int volume = 3;
      void chick() {
         System.out.print("Honk("+Penguin.this.volume+")!");
      }
   }
   public static void main(String... eggs) {
      Penguin pen = new Penguin();
      final Penguin.Chick littleOne = pen.new Chick();
      littleOne.chick();
   }
}
A. Honk(1)!
B. Honk(3)!
C. The code does not compile.
D. The code compiles, but the output cannot be determined until runtime.
E. None of the above.
143. Which can implement a functional interface?
A. An anonymous class
B. A top-level class
C. A lambda expression
D. An anonymous class or a top-level class
E. A top-level class or a lambda expression
F. An anonymous class, a top-level class, or a lambda expressionJava Object-Oriented Approach  87
144. Fill in the blank with the line of code that allows the program to compile and print E at 
runtime.
interface Fruit {
   public default char getColor() { return 'F'; }
}
interface Edible  {
   public default char getColor() { return 'E'; } 
}
public class Banana implements Fruit, Edible {
   public char getColor() { return _______________; }
   public static void main(String[] a) {
      var d = new Banana();
      System.out.println(d.getColor());
   }
}
A. Edible.getColor()
B. Edible.super.getColor()
C. super.Edible.getColor()
D. super.getColor()
E. The code does not compile regardless of what is inserted into the blank.
F. None of the above.
145. Given the following two classes, each in a different package, which line inserted into the 
code allows the second class to compile?
package clothes;
public class Store {
   public static String getClothes() { return "dress"; }
}
 
package wardrobe;
// INSERT CODE HERE
public class Closet {
   public void borrow() {
      System.out.print("Borrowing clothes: "+getClothes());
   }
}
A. static import clothes.Store.getClothes;
B. import clothes.Store.*;
C. import static clothes.Store.getClothes;
D. import static clothes.Store;
146. What is the output of the ElectricCar program?
package vehicles;
class Automobile {
   private final String drive() { return "Driving vehicle"; }
}
class Car extends Automobile {
   protected String drive() { return "Driving car"; }
}
public class ElectricCar extends Car {
   public final String drive() { return "Driving electric car"; }
   public static void main(String[] wheels) {
      final Automobile car = new ElectricCar();
      var v = (Car)car;
      System.out.print(v.drive());
   }
}
A. Driving vehicle
B. Driving electric car
C. Driving car
D. The code does not compile.
E. The code compiles but produces a ClassCastException at runtime.
F. None of the above.
147. What is the output of the following program?
public class Music {
   { System.out.print("do-"); }
   static { System.out.print("re-"); }
   { System.out.print("mi-"); }
   static { System.out.print("fa-"); }
   
   public Music() {
      System.out.print("so-");
   }
   
   public Music(int note) {
      System.out.print("la-");
   }Java Object-Oriented Approach  89
   public static void main(String[] sound) {
      System.out.print("ti-");
      var play = new Music();
   }
}
A. re-fa-ti-do-mi-so-
B. do-re-mi-fa-ti-so-
C. ti-re-fa-do-mi-so-
D. re-fa-la-mi-ti-do-
E. do-re-mi-fa-so-ti
F. The code does not compile.
G. None of the above.
148. Given the following class declaration, which options correctly declare a local variable con-
taining an instance of the class?
public class Earth {
   private abstract class Sky {
      void fall() {
         var e = _______________
      }
   }
}
A. new Sunset() extends Sky {};
B. new Sky();
C. new Sky() {}
D. new Sky() { final static int blue = 1; };
E. The code does not compile regardless of what is placed in the blank.
F. None of the above.
149. What is the output of the Encyclopedia program?
package paper;
abstract class Book {
   protected static String material = "papyrus";
   public Book() {}
   abstract String read() {}
   public Book(String material) {this.material = material;}
} 
public class Encyclopedia extends Book {
   public static String material = "cellulose";
   public Encyclopedia() {super();}
   public String read() { return "Reading is fun!"; }
   public String getMaterial() {return super.material;}
 
   public static void main(String[] pages) {
      System.out.print(new Encyclopedia().read());
      System.out.print("-" + new Encyclopedia().getMaterial());
   }
}
A. Reading is fun!-papyrus
B. Reading is fun!-cellulose
C. null-papyrus
D. null-cellulose
E. The code does not compile.
F. None of the above.
150. What does the following print?
interface Vehicle {}
class Bus implements Vehicle {}
 
public class Transport { 
   public static void main(String[] args) {
      Bus bus = new Bus();
      boolean n = null instanceof Bus;
      boolean v = bus instanceof Vehicle;
      boolean b = bus instanceof Bus;
      System.out.println(n + " " + v + " " + b);
  }
}
A. false false false
B. false false true
C. false true true
D. true false true
E. true true false
F. true true trueJava Object-Oriented Approach  91
151. How many rows of the following table contain an error?
Interface member Optional modifier(s) Required modifier(s)
Private method private -
Default method public default
Static method public static -
Abstract method public abstract
A. Zero
B. One
C. Two
D. Three
E. Four
152. What is the output of the following program?
public class Dwarf {
   private final String name;
   
   public Dwarf() {
      this("Bashful");
   }
   
   public Dwarf(String name) {
      name = "Sleepy";
   }
   
   public static void main(String[] sound) {
      var d = new Dwarf("Doc");
      System.out.println(d.name);
   }
}
A. Sleepy
B. Bashful
C. Doc
D. The code does not compile.
E. An exception is thrown at runtime.
153. What is the output of the following application?
package pocketmath;
interface AddNumbers {
   int add(int x, int y);
   static int subtract(int x, int y) { return x-y; }
   default int multiply(int x, int y) { return x*y; }
}
public class Calculator {
   protected void calculate(AddNumbers n, int a, int b) {
      System.out.print(n.add(a, b));
   }
   public static void main(String[] moreNumbers) {
      final var ti = new Calculator() {};
      ti.calculate((k,p) -> p+k+1, 2, 5);  // j1
   }
}
A. 8
B. The code does not compile because AddNumbers is not a functional interface.
C. The code does not compile because of line j1.
D. The code does not compile for a different reason.
E. None of the above.
154. Which of the following variables are always in scope for the entire program once defined?
A. Package variables
B. Class variables
C. Instance variables
D. Local variables
155. What is the command to call one constructor from another constructor in the same class?
A. construct()
B. parent()
C. super()
D. this()
E. that()
156. Which of the following statements about no-argument constructors and inheritance are 
correct? (Choose two.)
A. The compiler cannot insert a no-argument constructor into an abstract class.
B. If a parent class does not include a no-argument constructor, a child class cannot 
declare one.
C. If a parent class declares constructors but each of them take at least one parameter, 
then a child class must declare at least one constructor.
D. The no-argument constructor is sometimes inserted by the compiler.
E. If a parent class declares a no-argument constructor, a child class must declare a no-
argument constructor.
F. If a parent class declares a no-argument constructor, a child class must declare at least 
one constructor.
157. Fill in the blanks: ______________ allow Java to support multiple inheritance, and  
anonymous classes can ______________ of them.
A. Abstract classes, extend at most one
B. Abstract classes, extend any number
C. Interfaces, implement at most one
D. Interfaces, implement any number
E. Concrete classes, extend at most one
F. None of the above
158. What is the result of executing the Grasshopper program?
// Hopper.java
package com.animals;
 
public class Hopper {
   protected void hop() {
      System.out.println("hop");
   }
}
 
// Grasshopper.java
package com.insect;
import com.animals.Hopper;
 
public class Grasshopper extends Hopper {
   public void move() {
      hop();  // p1
   }
   public static void main(String[] args) {
      var hopper = new Grasshopper();
      hopper.move();  // p2
      hopper.hop();   // p3
   }
}
A. The code prints hop once.
B. The code prints hop twice.
C. The first compiler error is on line p1.
D. The first compiler error is on line p2.
E. The first compiler error is on line p3.
159. What is the minimum number of lines that need to be removed to make this code compile?
@FunctionalInterface
public interface Play {
   public static void baseball() {}
   private static void soccer() {}
   default void play() {}
   void fun();
   void game();
   void toy();
}
A. 1
B. 2
C. 3
D. 4
E. The code compiles as is.
160. Which of the following are the best reasons for creating a private interface method? 
(Choose two.)
A. Add backward compatibility to existing interfaces.
B. Provide an implementation that a class implementing the interface can override.
C. Increase code reuse within the interface.
D. Allow interface methods to be inherited.
E. Improve encapsulation of the interface.
F. Allow static methods to access instance methods.
161. What is the result of executing the Sounds program?
// Sheep.java
package com.mammal;
 
public class Sheep {
   private void baa() {
      System.out.println("baa!");
   }
   private void speak() {
      baa();
   }
}Java Object-Oriented Approach  95
 
// Sounds.java
package com.animals;
import com.mammal.Sheep;
 
public class Sounds {
   public static void main(String[] args) {
      var sheep = new Sheep();
      sheep.speak();
   }
}
A. The code runs and prints baa!.
B. The Sheep class does not compile.
C. The Sounds class does not compile.
D. Neither class compiles.
162. What is the output of the following application?
package stocks;
public class Bond {
   private static int price = 5;
   public boolean sell() {
      if(price<10) {
         price++;
         return true;
      } else if(price>=10) {
         return false;
      }
   }
   public static void main(String[] cash) {
      new Bond().sell();
      new Bond().sell();
      new Bond().sell();
      System.out.print(price);
   }
}
A. 5
B. 6
C. 8
D. The code does not compile.
163. Given the following class declaration, what expression can be used to fill in the blank so 
that 88 is printed at runtime?
final public class Racecar {
   final private int speed = 88;
   final protected class Engine {
      private final int speed = 100;
      public final int getSpeed() {
         return _____________________;
      }
   }
   final Engine engine = new Engine();
   final public static void main(String[] feed) {
      System.out.print(new Racecar().engine.getSpeed());
   }
}
A. Racecar.speed
B. this.speed
C. this.Racecar.speed
D. Racecar.Engine.this.speed
E. Racecar.this.speed
F. The code does not compile regardless of what is placed in the blank.
164. Which statements about static initializers are correct? (Choose three.)
A. They cannot be used to create instances of the class they are contained in.
B. They can assign a value to a static final variable.
C. They are executed at most once per program.
D. They are executed each time an instance of the class is created from a local cache of 
objects.
E. They are executed each time an instance of the class is created using the new keyword.
F. They may never be executed.
165. What is the output of the BlueCar program?
package race;
abstract class Car {
   static { System.out.print("1"); }
   public Car(String name) {
      super();
      System.out.print("2");
   }Java Object-Oriented Approach  97
   { System.out.print("3"); }
}
public class BlueCar extends Car {
   { System.out.print("4"); }
   public BlueCar() {
      super("blue");
      System.out.print("5");
   }
   public static void main(String[] gears) {
      new BlueCar();
   }
}
A. 23451
B. 12345
C. 14523
D. 13245
E. The code does not compile.
F. None of the above.
166. Given the following class declaration, which value cannot be inserted into the blank line 
that would allow the code to compile?
package mammal;
interface Pet {}
public class Canine implements Pet {
   public ______ getDoggy() {
      return this;
   }
}
A. Canine
B. List
C. Object
D. Pet
E. All of the above can be inserted.
167. Which statement about the following interface is correct?
public interface Movie {
   String pass = "TICKET";
   private void buyPopcorn() {
      purchaseTicket();
   }
   public static int getDrink() {
      buyPopcorn();
      return 32;
   }
   private static String purchaseTicket() {
      getDrink();
      return pass;
   }
}
A. The code compiles.
B. The code contains an invalid constant.
C. The method buyPopcorn() does not compile.
D. The method getDrink() does not compile.
E. The method purchaseTicket() does not compile.
F. The code does not compile for a different reason.
168. Which methods compile?
private static int numShovels;
private int numRakes;
 
public int getNumShovels() {
   return numShovels;
}
 
public int getNumRakes() {
   return numRakes;
}
A. Just getNumRakes()
B. Just getNumShovels()
C. Both methods
D. Neither method
169. How many lines of the following class contain compilation errors?
1: class Fly {
2:    public Fly Fly() { return Fly(); }
3:    public void Fly(int kite) {}
4:    public int Fly(long kite) { return 1; }
5:    public static void main(String[] a) {
6:       var f = new Fly();Java Object-Oriented Approach  99
7:       f.Fly();
8:    }
9: }
A. None.
B. One.
C. Two.
D. Three.
E. Four.
F. The answer cannot be determined with the information given.
170. How many of the classes in the figure can write code that references the sky() method?
com.color
Red
• protected boolean light
Blue
• void sky()
com.light
BrightLight extends Red
Light
A. None
B. One
C. Two
D. Three
E. Four
171. For the diagram in the previous question, how many classes can write code that references 
the light variable?
A. None
B. One
C. Two
D. Three
E. Four
172. Given the following method signature, which classes cannot call it?
protected void run(String government)
A. All classes in other packages
B. All classes in the same package
C. Subclasses in a different package
D. Subclasses in the same package
173. What is the output of the following application?
interface Toy { String play(); }
public class Gift {
   public static void main(String[] matrix) {
      abstract class Robot {}
      class Transformer extends Robot implements Toy {
         public String name = "GiantRobot";
         public String play() {return "DinosaurRobot";}  // y1
      }
      Transformer prime = new Transformer () {
         public String play() {return name;}             // y2
      };
      System.out.print(prime.play()+" "+name);
   }
}
A. GiantRobot GiantRobot
B. GiantRobot DinosaurRobot
C. DinosaurRobot DinosaurRobot
D. The code does not compile because of line y1.
E. The code does not compile because of line y2.
F. None of the above.
174. What is the output of the HighSchool application?
package edu;
import java.io.FileNotFoundException;
abstract class School {
   abstract Float getNumTeachers();
   public int getNumStudents() {
      return 10;
   }
}
public class HighSchool extends School {
   final Float getNumTeachers() { return 4f; }
   public int getNumStudents() throws FileNotFoundException {
      return 20;
   }
   public static void main(String[] s) throws Exception {
      var school = new HighSchool();Java Object-Oriented Approach  101
      System.out.print(school.getNumStudents());
   }
}
A. 10
B. 20
C. 4.0
D. One line of the program does not compile.
E. Two lines of the program do not compile.
F. None of the above.
175. What is the output of the following application?
package track;
interface Run {
   default CharSequence walk() {
      return "Walking and running!";
   }
}
interface Jog {
   default String walk() {
      return "Walking and jogging!";
   }
}
public class Sprint implements Run, Jog {
   public String walk() {
      return "Sprinting!";
   }
   public static void main(String[] args) {
      var s = new Sprint();
      System.out.println(s.walk());
   }
}
A. Walking and running!
B. Walking and jogging!
C. Sprinting!
D. The code does not compile.
E. The code compiles but prints an exception at runtime.
F. None of the above.
176. What is true of these two interfaces?
interface Crawl {
  void wriggle();
}
interface Dance {
   public void wriggle();
}
A. A concrete class can implement both, but must implement wriggle().
B. A concrete class can implement both, but must not implement wriggle().
C. A concrete class would only be able to implement both if the public modifier were 
removed but must implement wriggle().
D. If the public modifier were removed, a concrete class can implement both, but must 
not implement wriggle().
E. None of the above.
177. Which of these are functional interfaces?
interface Lion {
   public void roar();
   default void drink() {}
   boolean equals(Lion lion);
}
 
interface Tiger {
   public void roar();
   default void drink() {}
   String toString(String name);
}
A. Lion
B. Tiger
C. Both Lion and Tiger
D. Neither is a functional interface.
E. The code does not compile.
178. How many lines of the following class contain a compiler error?
1:  public class Dragon {
2:     boolean scaly;
3:     static final int gold;   
4:     Dragon protectTreasure(int value, boolean scaly) {Java Object-Oriented Approach  103
5:        scaly = true;
6:        return this;
7:     }   
8:     static void fly(boolean scaly) {
9:        scaly = true;
10:    }   
11:    int saveTheTreasure(boolean scaly) {
12:       return this.gold;
13:    }   
14:    static void saveTheDay(boolean scaly) {
15:       this.gold = 0;
16:    }
17:    static { gold = 100; }
18: }
A. None
B. One
C. Two
D. Three
E. More than three
179. What is true of the following method?
public String getColor() {
   return color;
}
A. It is a correctly implemented accessor method.
B. It is a correctly implemented mutator method.
C. It is an incorrectly implemented accessor method.
D. It is an incorrectly implemented mutator method.
E. None of the above.
180. Which statement is true?
A. You can always change a method signature from call(String[] arg) to 
call(String... arg) without causing a compiler error in the calling code.
B. You can always change a method signature from call(String... arg) to 
call(String[] arg) without causing a compiler error in the existing code.
C. Both of the above.
D. Neither of the above.
181. What are two motivations for marking a class final? (Choose two.)
A. Guarantee behavior of a class
B. Allow the class to be extended
C. Improve security
D. Support polymorphism
E. Improve performance
F. Ensure the contents of the class are immutable
182. Which statement about the following interface is correct?
public interface Planet {
   int circumference;
   public abstract void enterAtmosphere();
   public default int getCircumference() {
      enterAtmosphere();
      return circumference;
   }
   private static void leaveOrbit() {
      var earth = new Planet() {
         public void enterAtmosphere() {}
      };
      earth.getCircumference();
   }
}
A. The code compiles.
B. The method enterAtmosphere() does not compile.
C. The method getCircumference() does not compile.
D. The method leaveOrbit() does not compile.
E. The code does not compile for a different reason.
F. None of the above.
183. Fill in the blanks: ___________________ methods always have the same name but a differ-
ent list of parameters, while ___________________ methods always have the same name and 
the same return type.
A. Overloaded, overridden
B. Inherited, overridden
C. Overridden, overloaded
D. Hidden, overloaded
E. Overridden, hidden
F. None of the aboveJava Object-Oriented Approach  105
184. What is the output of the following program?
public class Husky {
   { this.food = 10; }
   { this.toy = 2; }
   private final int toy;
   private static int food;
   public Husky(int friend) {
      this.food += friend++;
      this.toy -= friend--;
   }
   public static void main(String... unused) {
      var h = new Husky(2);
      System.out.println(h.food+","+h.toy);
   }
}
A. 12,-1
B. 12,2
C. 13,-1
D. Exactly one line of this class does not compile.
E. Exactly two lines of this class do not compile.
F. None of the above.
185. Suppose you have the following code. Which of the images best represents the state of the 
references right before the end of the main() method, assuming garbage collection hasn’t 
run?
1:  public class Link {
2:     private String name;
3:     private Link next;
4:     public Link(String name, Link next) {
5:        this.name = name;
6:        this.next = next;
7:     }
8:     public void setNext(Link next) {
9:        this.next = next;
10:    }
11:    public Link getNext() {
12:       return next;
13:    }
14:    public static void main(String... args) {
15:       var apple = new Link("x", null);
16:       var orange = new Link("y", apple);
17:       var banana = new Link("z", orange);
18:       orange.setNext(banana);
19:       banana.setNext(orange);
20:       apple = null;
21:       banana = null;
22:    }
23: }
Option A
Option C Option D
Option B
x
y z
apple
banana
orange
nullapple
banana
orange
x
y z
nullapple
banana
orange
x
y z
null
apple
banana
orange
x
y z
A. Option A.
B. Option B.
C. Option C.
D. Option D.
E. The code does not compile.
F. None of the above.
186. Which statement about a no-argument constructor is true?
A. The Java compiler will always insert a default no-argument constructor if you do not 
define a no-argument constructor in your class.
B. For a class to call super() in one of its constructors, its parent class must explicitly 
implement a no-argument constructor.
C. If a class extends another class that has only one constructor that takes a value, then 
the child class must explicitly declare at least one constructor.
D. A class may contain more than one no-argument constructor.
187. Which variable declaration is the first line not to compile?
public class Complex {
   class Building {}Java Object-Oriented Approach  107
   class House extends Building{}
 
   public void convert() {
      Building b1 =  new Building();
      House h1 = new House();
      Building b2 = new House();
      Building b3 = (House) b1;
      House h2 = (Building) h1;
      Building b4 = (Building) b2;
      House h3 = (House) b2;
   }
}
A. b3
B. h2
C. b4
D. h3
E. All of the lines compile.
188. What is the output of the following application?
1:  interface Tasty {
2:     default void eat() {
3:        System.out.print("Spoiled!");
4:     } }
5:  public class ApplePicking {
6:     public static void main(String[] food) {
7:        var apple = new Tasty() {
8:           @Override
9:           void eat() {
10:             System.out.print("Yummy!");
11:          }
12:       }
13:    } }
A. Spoiled!
B. Yummy!
C. The application completes without printing anything.
D. One line of this application fails to compile.
E. Two lines of this application fail to compile.
F. None of the above.
189. Which of the following statements about functional interfaces is true?
A. It is possible to define a functional interface that returns two data types.
B. It is possible to define a primitive functional interface that uses float, char, or 
short.
C. All functional interfaces must take arguments or return a value.
D. None of the primitive functional interfaces includes generic arguments.
E. None of these statements is true.
190. What is the result of executing the Tortoise program?
// Hare.java
package com.mammal;
 
public class Hare {
   void init() {
      System.out.print("init-");
   }
   protected void race() {
      System.out.print("hare-");
   }
}
 
// Tortoise.java
package com.reptile;
import com.mammal.Hare;
 
public class Tortoise {
   protected void race(Hare hare) {
      hare.init();    // x1
      hare.race();    // x2
      System.out.print("tortoise-");
    }
    public static void main(String[] args) {
       var tortoise = new Tortoise();
       var hare = new Hare();
       tortoise.race(hare);
   }
}
A. init-hare-tortoise
B. init-hare
C. The first line with a compiler error is line x1.
D. The first line with a compiler error is line x2.Java Object-Oriented Approach  109
E. The code does not compile due to a different line.
F. The code throws an exception.
191. How many lines of the following program do not compile?
interface Tool {
   void use(int fun);
}
abstract class Childcare {
   abstract void use(int fun);
}
final public class Stroller extends Childcare implements Tool {
   final public void use(int fun) {
      int width = 5;
      class ParkVisit {
         int getValue() { return width + fun; }
      }
      System.out.print(new ParkVisit().getValue());
   }
}
A. Zero
B. One
C. Two
D. Three
E. More than three
192. What is the result of executing the Sounds program?
// Sheep.java
package com.mammal;
 
public class Sheep {
   default void baa() {
      System.out.println("baa!");
   }
   default void speak() {
      baa();
   }
}
 
// Sounds.java
package com.animals;
import com.mammal.Sheep;
public class Sounds {
   public static void main(String[] args) {
      var sheep = new Sheep();
      sheep.speak();
   }
}
A. The code runs and prints baa!.
B. The Sheep class does not compile.
C. The Sounds class does not compile.
D. Neither class compiles.
193. What is the best reason for marking an existing static method private within in an 
interface?
A. It allows the method to be overridden in a subclass.
B. It hides the secret implementation details from another developer using the interface.
C. It improves the visibility of the method.
D. It ensures the method is not replaced with an overridden implementation at runtime.
E. It allows the method to be marked abstract.
F. Trick question! All static methods are implicitly private within an interface.
194. What is the output of the following application?
package jungle;
public class RainForest extends Forest {
   public RainForest(long treeCount) {
      this.treeCount = treeCount+1;
   }
   public static void main(String[] birds) {
      System.out.print(new RainForest(5).treeCount);
   }
}
class Forest {
   public long treeCount;
   public Forest(long treeCount) {
      this.treeCount = treeCount+2;
   }
}
A. 5
B. 6
C. 8
D. The code does not compile.Java Object-Oriented Approach  111
195. What is the result of compiling and executing the following class?
package sports;
public class Bicycle {
   String color = "red";
   private void printColor(String color) {
      color = "purple";
      System.out.print(color);
   }
   public static void main(String[] rider) {
      new Bicycle().printColor("blue");
   }
}
A. red
B. purple
C. blue
D. It does not compile.
196. Given that Short and Integer extend Number directly, what type can be used to fill in 
the blank in the following class to allow it to compile?
package band;
 
interface Horn {
   public Integer play();
}
abstract class Woodwind {
   public Short play() {
      return 3;
   }
}
public final class Saxophone extends Woodwind implements Horn {
   public _________ play() {
      return null;
   }
}
A. Object
B. Integer
C. Short
D. Number
E. None of the above
197. Which statements about abstract classes and methods are correct? (Choose three.)
A. An abstract class can be extended by a final class.
B. An abstract method can be overridden by a final method.
C. An abstract class can be extended by multiple classes directly.
D. An abstract class can extend multiple classes directly.
E. An abstract class cannot implement an interface.
F. An abstract class can extend an interface.
198. Given the following enum declaration, how many lines contain compilation errors?
public enum Proposition {
   TRUE(1) { String getNickName() { return "RIGHT"; }},
   FALSE(2) { public String getNickName() { return "WRONG"; }},
   UNKNOWN(3) { public String getNickName() { return "LOST"; }}
   public int value;
   Proposition(int value) {
      this.value = value;
   }
   public int getValue() {
      return this.value;
   }
   protected abstract String getNickName();
}
A. Zero
B. One
C. Two
D. Three
E. More than three
199. Which statements about Java classes are true? (Choose three.)
A. A Java class file may include more than one package statement.
B. A Java class file may include more than one import statement.
C. A Java class file may contain more than one comment.
D. Any instance fields within a class must be defined after the class name.
E. Any instance fields within a class must be defined before the class name.
F. Java supports macros, in which fragments of code within a class may be defined inside 
a Java file, separate from any top-level type declaration.Java Object-Oriented Approach  113
200. What is the result of executing the HopCounter program?
// Hopper.java
package com.animals;
 
public class Hopper {
   protected void hop() {
      System.out.println("hop");
   }
}
 
// Grasshopper.java
package com.insect;
import com.animals.Hopper;
 
public class Grasshopper extends Hopper {
   public void move() {
      hop();  // p1
   }
}
 
// HopCounter.java
package com.insect;
 
public class HopCounter {
   public static void main(String[] args) {
      var hopper = new Grasshopper();
      hopper.move();  // p2
      hopper.hop();   // p3
   }
}
 
A. The code prints hop once.
B. The code prints hop twice.
C. The first compiler error is on line p1.
D. The first compiler error is on line p2.
E. The first compiler error is on line p3.
201. Which of the following is not an attribute common to both abstract classes and interfaces?
A. They both can contain abstract methods.
B. They both can contain public methods.
C. They both can contain protected methods.
D. They both can contain static variables.
202. Given the following class, which method signature could be successfully added to the class 
as an overloaded version of the findAverage() method?
public class Calculations {
   public Integer findAverage(int sum) { return sum; }
}
A. public Long findAverage(int sum)
B. public Long findAverage(int sum, int divisor)
C. public Integer average(int sum)
D. private void findAverage(int sum)
203. Which of the following is a valid method name in Java? (Choose two.)
A. Go_$Outside$2()
B. have-Fun()
C. new()
D. 9enjoyTheWeather()
E. $sprint()
F. walk#()
204. Fill in the blanks: A functional interface must contain or inherit ______________ and may 
optionally include ______________.
A. at least one abstract method, the @Override annotation
B. exactly one method, static methods
C. exactly one abstract method, the @FunctionalInterface annotation
D. at least one static method, at most one default method
E. None of the above
205. Fill in the blank with the line of code that allows the program to compile and print 15 at 
runtime.
package love;
interface Sport {
   private int play() { return 15; }
}
interface Tennis extends Sport {
   private int play() { return 30; }
}
public class Game implements Tennis {Java Object-Oriented Approach  115
   public int play() { return ______________; }
   public static void main(String... ace) {
      System.out.println(new Game().play());
   } }
A. Sport.play()
B. Sport.super.play()
C. Sport.Tennis.play()
D. Tennis.Sport.super.play()
E. The code does not compile regardless of what is inserted into the blank.
F. None of the above.
206. What is the output of the following program?
public class MoreMusic {
   {
      System.out.print("do-"); 
      System.out.print("re-"); 
   }
   
   public MoreMusic() {
      System.out.print("mi-");
   }
   public MoreMusic(int note) {
      this(null);
      System.out.print("fa-");
   }
   public MoreMusic(String song) {
      this(9);
      System.out.print("so-");
   }
   
   public static void main(String[] sound) {
      System.out.print("la-");
      var play = new MoreMusic(1);
   }
}
A. la-do-re-mi-so-fa-
B. la-do-re-mi-fa-
C. do-re-mi-fa-so-la-
D. fa-re-do-mi-so-
E. The code does not compile.
F. None of the above.
207. Given the following two classes in the same package, what is the result of executing the Hug 
program?
public class Kitten {
   /** private **/ float cuteness;
   /* public */ String name;
   // default double age;
   void meow() { System.out.println(name + " - "+cuteness); }
}
 
public class Hug {
   public static void main(String... friends) {
      var k = new Kitten();
      k.cuteness = 5;
      k.name = "kitty";
      k.meow();
   }
}
A. kitty - 5.0
B. The Kitten class does not compile.
C. The Hug class does not compile.
D. The Kitten and Hug classes do not compile.
E. None of the above.
208. Which expressions about enums used in switch statements are correct? (Choose two.)
A. The name of the enum type must not be used in each case statement.
B. A switch statement that takes a enum value may not use ordinal() numbers as 
case statement matching values.
C. The name of the enum type must be used in each case statement.
D. Every value of the enum must be present in a case statement.
E. A switch statement that takes a enum value can use ordinal() numbers as case 
statement matching values.
F. Every value of the enum must be present in a case statement unless a default 
branch is provided.
209. What is the output of the following application?
package prepare;
interface Ready {
   static int first = 2;
   final short DEFAULT_VALUE = 10;
   GetSet go = new GetSet();            // n1
}Java Object-Oriented Approach  117
public class GetSet implements Ready {
   int first = 5;
   static int second = DEFAULT_VALUE;   // n2
   public static void main(String[] begin) {
      var r = new Ready() {};
      System.out.print(r.first);        // n3
      System.out.print(" " + second);   // n4
   }
}
A. 2 10
B. 5 10
C. The code does not compile because of line n1.
D. The code does not compile because of line n2.
E. The code does not compile because of line n3.
F. The code does not compile because of line n4.
210. What is the result of executing the Tortoise program?
// Hare.java
package com.mammal;
 
public class Hare {
   public void init() {
      System.out.print("init-");
   }
   private void race() {
      System.out.print("hare-");
   }
}
 
// Tortoise.java
package com.reptile;
import com.mammal.Hare;
 
public class Tortoise {
   protected void race(Hare hare) {
      hare.init();    // x1
      hare.race();    // x2
      System.out.print("tortoise-");
    }
    public static void main(String[] args) {
       var tortoise = new Tortoise();
       var hare = new Hare();
       tortoise.race(hare);
   }
}
A. init-hare-tortoise
B. init-hare
C. The first line with a compiler error is line x1.
D. The first line with a compiler error is line x2.
E. The code does not compile due to a different line.
F. The code throws an exception.
211. What is the result of executing the Sounds program?
// Sheep.java
package com.mammal;
 
public class Sheep {
   private void baa() {
      System.out.println("baa!");
   }
   private static void speak() {
      baa();
   }
}
 
// Sounds.java
package com.animals;
import com.mammal.Sheep;
 
public class Sounds {
   public static void main(String[] args) {
      var sheep = new Sheep();
      sheep.speak();
   }
}
A. The code runs and prints baa!.
B. The Sheep class does not compile.
C. The Sounds class does not compile.
D. Neither class compiles.Java Object-Oriented Approach  119
212. What is the output of the Helicopter program?
package flying;
 
class Rotorcraft {
   protected final int height = 5;
   abstract int fly();
}
interface CanFly {}
public class Helicopter extends Rotorcraft implements CanFly {
   private int height = 10;
   protected int fly() {
      return super.height;
   }
   public static void main(String[] unused) {
      Helicopter h = (Helicopter)new Rotorcraft();
      System.out.print(h.fly());
   }
}
A. 5
B. 10
C. The code does not compile.
D. The code compiles but produces a ClassCastException at runtime.
E. None of the above.
213. Which statements about the following Twins class are true? (Choose three.)
package clone;
interface Alex {
   default void write() { System.out.print("1"); }
   static void publish() {}
   void think();
   private int process() { return 80; }
}
interface Michael {
   default void write() { System.out.print("2"); }
   static void publish() {}
   void think();
   private int study() { return 100; }
}
public class Twins implements Alex, Michael {
   void write() { System.out.print("3"); }
   static void publish() {}
   void think() {
      System.out.print("Thinking...");
   }
}
A. The class fails to compile because of the write() method.
B. The class fails to compile because of the publish() method.
C. The class fails to compile because of the think() method.
D. All of the methods defined in the Alex interface are accessible in the Twins class.
E. All of the methods defined in the Michael interface are accessible in the Twins class.
F. The Twins class cannot be marked abstract.
214. Given the following program, what is the first line to fail to compile?
1: public class Electricity {
2:    interface Power {}
3:    public static void main(String[] light) {
4:       class Source implements Power {};
5:       final class Super extends Source {};
6:       var start = new Super() {};
7:       var end = new Source() { static boolean t = true; };
8:    }
9: }
A. Line 2
B. Line 4
C. Line 5
D. Line 6
E. Line 7
F. All of the lines compile
215. What is the output of the following application?
package prepare;
public class Ready {
   protected static int first = 2;
   private final short DEFAULT_VALUE = 10;
   private static class GetSet {
      int first = 5;
      static int second = DEFAULT_VALUE;
   }
   private GetSet go = new GetSet();
   public static void main(String[] begin) {Java Object-Oriented Approach  121
      Ready r = new Ready();
      System.out.print(r.go.first);
      System.out.print(", "+r.go.second);
   }
}
A. 2, 5
B. 5, 10
C. 2, 10
D. The code does not compile because of the GetSet class declaration.
E. The code does not compile for another reason.
216. Which of the following are true about the following code? (Choose two.)
public class Values {
   static ____  defaultValue = 8;
   static ____ DEFAULT_VALUE;
 
   public static void main(String[] args) {
      System.out.println(defaultValue + DEFAULT_VALUE);
   }
}
A. When you fill in both blanks with double, it prints 8.00.0
B. When you fill in both blanks with double, it prints 8.0
C. When you fill in both blanks with int, it prints 8
D. When you fill in both blanks with int, it prints 80
E. When you fill in both blanks with var, it prints 8
F. When you fill in both blanks with var, it prints 80
217. How many Gems objects are eligible for garbage collection right before the end of the 
main() method?
public class Gems {
   public String name;
   public Gems(String name) {
      this.name = name;
   }
   public static void main(String... args) {
      var g1 = Gems("Garnet");
      var g2 = Gems("Amethyst");
      var g3 = Gems("Pearl");
      var g4 = Gems("Steven");
      g2 = g3;
      g3 = g2;
      g1 = g2;
      g4 = null;
   }
}
A. None
B. One
C. Two
D. Three
E. Four
F. The code does not compile
218. How many lines of the following program contain compilation errors?
package sky;
public class Stars {
   private int inThe = 4;
   public void Stars() {
      super();
   }
   public Stars(int inThe) {
      this.inThe = this.inThe;
   }
   public static void main(String[] endless) {
      System.out.print(new sky.Stars(2).inThe);
   }
}
A. None
B. One
C. Two
D. Three
219. What is the output of the following application?
package sports;
abstract class Ball {
   protected final int size;
   public Ball(int size) {
      this.size = size;
   }
}
interface Equipment {}
public class SoccerBall extends Ball implements Equipment {Java Object-Oriented Approach  123
   public SoccerBall() {
      super(5);
   }
   public Ball get() { return this; }
   public static void main(String[] passes) {
      var equipment = (Equipment)(Ball)new SoccerBall().get();
      System.out.print(((SoccerBall)equipment).size);
   }
}
A. 5
B. The code does not compile due to an invalid cast.
C. The code does not compile for a different reason.
D. The code compiles but throws a ClassCastException at runtime.
220. Which statement about the Elephant program is correct?
package stampede;
interface Long {
   Number length();
}
public class Elephant {
   public class Trunk implements Long {
      public Number length() { return 6; }   // k1
   }
   public class MyTrunk extends Trunk {      // k2
      public Integer length() { return 9; }  // k3
   }
   public static void charge() {
      System.out.print(new MyTrunk().length());
   }
   public static void main(String[] cute) {
      new Elephant().charge();               // k4
   }
}
A. It compiles and prints 6.
B. The code does not compile because of line k1.
C. The code does not compile because of line k2.
D. The code does not compile because of line k3.
E. The code does not compile because of line k4.
F. None of the above.Exception Handling
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Exception Handling
✓■ Handle exceptions using try/catch/finally clauses, try-with-
resource, and multi-catch statements
✓■ Create and use custom exceptions
Chapter 
4126 Chapter 4 ■ Exception Handling
1. Fill in the blanks: The ___________________ keyword is used in method declarations, while 
the ___________________ keyword is used to send an exception to the surrounding process.
A. throwing, catch
B. throws, throw
C. catch, throw
D. throws, catch
E. throw, throws
F. catch, throwing
2. What is the result of compiling and executing the following application?
package mind;
import java.io.*;
public class Remember {
   public static void think() throws IOException {  // k1
      try {
         throw Exception();
      } catch (RuntimeException r) {}               // k2
   }
   public static void main(String... ideas) throws Exception {
      think();
   }
}
A. The code compiles and runs without printing anything.
B. The code compiles, but a stack trace is printed at runtime.
C. The code does not compile because of line k1.
D. The code does not compile because of line k2.
E. None of the above.
3. Given the following keywords, in which order could they be used? (Choose two.)
A. try, finally
B. catch, try, finally
C. try, catch, catch, finally
D. finally, catch, try
E. try, finally, catch
F. try, catch, finally, finally
4. Fill in the blanks: A try statement ______________ a catch or a finally block, while a try-with-
resources statement ______________.
A. is not required to contain, is not required to contain either
B. is not required to contain, must contain one of themException Handling 127
C. must contain, is not required to contain either
D. must contain, must contain a catch block
E. None of the above.
5. What is the output of the following application?
package park;
class LostBallException extends Exception {}
public class Ball {
   public void toss() throw LostBallException {
      var windUp = new int[0];
      System.out.println(windUp[0]);
   }
   public static void main(String[] bouncy) {
      try {
         new Ball().toss();
      } catch (Throwable e) {
         System.out.print("Caught!");
      }
   }
}
A. 0
B. Caught!
C. The code does not compile because LostBallException is not handled or declared in the 
main() method.
D. The code does not compile because ArrayIndexOutOfBoundsException is not handled or 
declared in the toss() method.
E. The code does not compile for a different reason.
F. None of the above.
6. Assuming Scanner is a valid class that implements AutoCloseable, what is the expected output 
of the following code?
try (Scanner s = new Scanner(System.in)) {
   System.out.print(1);
   s.nextLine();
   System.out.print(2);
   s = null;
} catch (IllegalArgumentException | NullPointerException x) {
   s.nextLine();
   System.out.print(3);
} finally {
   s.nextLine();
   System.out.print(4);
}
System.out.print(5);
A. 1245
B. 125
C. 1234 followed by a stack trace
D. 124 followed by a stack trace
E. Does not compile
F. None of the above
7. How many constructors in WhaleSharkException compile in the following class?
package friendly;
public class WhaleSharkException extends Exception {
   public WhaleSharkException() {
      super("Friendly shark!");
   }
 
   public WhaleSharkException(String message) {
      super(new Exception(new WhaleSharkException()));
   }
 
   public WhaleSharkException(Exception cause) {}
}
A. None
B. One
C. Two
D. Three
8. What is the output of the following application?
package game;
public class Football {
   public static void main(String officials[]) {
      try {
         System.out.print('A');
         throw new ArrayIndexOutOfBoundsException();
      } catch (RuntimeException r) {
         System.out.print('B');
         throw r;Exception Handling 129
      } catch (Exception e) {
         System.out.print('C');
      } finally {
         System.out.print('D');
      }
   }
}
A. ABC
B. ABD
C. ABC followed by a stack trace
D. ABD followed by a stack trace
E. AD followed by a stack trace
F. None of the above
9. Which of the following types are not recommended to catch in your application? 
(Choose two.)
A. Exception
B. CheckedException
C. Throwable
D. RuntimeException
E. UncheckedException
F. Error
10. What is the output of the following program?
package buffet;
class Garden implements AutoCloseable {
   private final int g;
   Garden(int g) { this.g = g; }
   public void close() throws Exception {
      System.out.print(g);
   }
}
public class Salad {
   public static void main(String[] u) throws Exception {
      var g = new Garden(5);
      try (g;
            var h = new Garden(4);
            var i = new Garden(2)) {
      } finally {
         System.out.println(9);
      }
      g = null;
   }
}
A. 2459
B. 9245
C. 5429
D. 9542
E. The code does not compile.
F. None of the above.
11. What is the output of the following application?
package paper;
import java.io.Closeable;
public class PrintCompany {
   class Printer implements Closeable {     // r1
      public void print() {
         System.out.println("This just in!");
      }
      public void close() {}
   }
   public void printHeadlines() {
      try {Printer p = new Printer()} {     // r2
         p.print();
      }
   }
   public static void main(String[] headlines) {
      new PrintCompany().printHeadlines();  // r3
   }
}
A. This just in!
B. The code does not compile because of line r1.
C. The code does not compile because of line r2.
D. The code does not compile because of line r3.
E. The code does not compile for a different reason.
F. None of the above.Exception Handling 131
12. How many of these custom exceptions are unchecked exceptions?
class ColoringException extends IOException {}
class CursiveException extends WritingException {}
class DrawingException extends IllegalStateException {}
class SketchingException extends DrawingException {}
class WritingException extends Exception {}
A. None
B. One
C. Two
D. Three
E. Four
F. Five
13. How many lines of text does the following program print?
package lighting;
import java.io.IOException;
public class Light {
   public static void main(String[] v) throws Exception {
      try {
         new Light().turnOn();
      } catch (RuntimeException v) {  // y1
         System.out.println(v);
         throw new IOException();     // y2
      } finally {
         System.out.println("complete");
      }
   }
   public void turnOn() throws IOException {
      new IOException("Not ready");   // y3
   }
}
A. One.
B. Two.
C. The code does not compile because of line y1.
D. The code does not compile because of line y2.
E. The code does not compile because of line y3.
F. None of the above.
14. Which statements about try-with-resources are false? (Choose two.)
A. If more than one resource is used, the resources are closed in the order they were created.
B. Parentheses are used for the resource declaration section, even if more than one resource 
is used.
C. If the try block and close() method both throw an exception, then the one thrown by the 
close() method is suppressed.
D. A resource may be declared before it is used in a try-with-resources statement.
E. Resources declarations are separated by commas.
F. A catch block is not required.
15. How many lines of text does the following program print?
package bee;
class SpellingException extends RuntimeException {}
public class SpellChecker {
   public final static void main(String... participants) {
      try {
         if(!"cat".equals("kat")) {
            new SpellingException();
         }
      } catch (SpellingException | NullPointerException e) {
         System.out.println("Spelling problem!");
      } catch (Exception e) {
         System.out.println("Unknown Problem!");
      } finally {
         System.out.println("Done!");
      }
   }
}
A. One.
B. Two.
C. Three.
D. The code does not compile.
E. None of the above.
16. Which of the following exception types must be handled or declared by the method in which 
they are thrown? (Choose three.)
A. FileNotFoundException
B. ClassCastException
C. ErrorException Handling 133
D. IOException
E. NullPointerException
F. Exception
17. What is the output of the following application?
package bed;
public class Sleep {
   public static void snore() {
      try {
         String sheep[] = new String[3];
         System.out.print(sheep[3]);
      } catch (RuntimeException | Error e) {
         System.out.print("Awake!");
      } finally {
         throw new Exception();                // x1
      }
   }
   public static void main(String... sheep) {  // x2
      new Sleep().snore();                     // x3
   }
}
A. Awake!
B. Awake! followed by a stack trace
C. Does not compile because of line x1
D. Does not compile because of line x2
E. Does not compile because of line x3
F. None of the above
18. What is the output of the following code?
class ProblemException extends Exception {
   ProblemException(Exception e) { super(e); }
}
class MajorProblemException extends ProblemException {
   MajorProblemException(String message) { super(message); }
}
public class Unfortunate {
   public static void main(String[] args) throws Exception {
      try {
         System.out.print(1);
         throw new MajorProblemException("Uh oh");
      } catch (ProblemException | RuntimeException e) {
         System.out.print(2);
         try {
            throw new MajorProblemException("yikes");
         } finally {
            System.out.print(3);   
         }
      } finally {
         System.out.print(4);
      }
   }
}
A. 123
B. 123 followed by an exception stack trace.
C. 1234
D. 1234 followed by an exception stack trace.
E. The code does not compile.
F. None of the above.
19. Which statement best describes how a class that implements the AutoCloseable interface 
should be written? (Choose two.)
A. The close() method is optional since the AutoCloseable interface defines a default imple-
mentation.
B. The close() method should avoid modifying data after it has been run once.
C. The close() method should not throw any exceptions.
D. The close() method should throw an exception if there is a problem closing the resource.
E. The close() method should return a status code.
20. Which of the following diagrams of java.lang classes shows the inheritance 
model properly?
A.Exception Handling 135
B. 
C. 
D. 
21. Which exception classes, when inserted into the blank in the Problems class, allow the code 
to compile?
class MissingMoneyException {}
class MissingFoodException {}
public class Problems {
   public void doIHaveAProblem() 
         throws MissingMoneyException, MissingFoodException {
      System.out.println("No problems");
   }
   public static void main(String[] s) throws  {
      try {
         final Problems p = new Problems();
         p.doIHaveAProblem();
      } catch (Exception e) {
         throw e;
      } } }
A. Exception
B. RuntimeException
C. MissingFoodException
D. MissingMoneyException, MissingFoodException
E. MissingMoneyException
F. None of the above
22. Which statements about Closeable and AutoCloseable are true? (Choose two.)
A. AutoCloseable extends Closeable.
B. Closeable extends AutoCloseable.
C. The close() method in a class that implements AutoCloseable cannot throw an 
IOException.
D. The close() method in a class that implements Closeable cannot throw an Exception.
E. There is no difference; one was added for backward compatibility.
F. Both have a generic return type.
23. Which expressions, when inserted into the blank in the following class, allow the code to 
compile? (Choose two.)
package sun;
import java.io.*;
public class Beach {
   class TideException extends Exception {}
   public void surf() throws RuntimeException {
      try {
         throw new TideException();
      } catch ( ) {}
   }
}
A. Exception a | RuntimeException f
B. IllegalStateException | TideException t
C. TideException | IOException i
D. TideException | Exception x
E. Error e
F. Exception zException Handling 137
24. Which of the following are the best scenarios in which to use and catch an exception? 
(Choose two.)
A. The computer caught fire.
B. A network connection goes down.
C. A caller passes invalid data to a method.
D. The code does not compile.
E. A method finishes sooner than expected.
F. The program runs out of memory.
25. Which statement about the following program is correct?
1:  package dogpark;
2:  public class Fetch {
3:     public int play(String name) throws RuntimeException {
4:        try {
5:           throw new RuntimeException(name);
6:        } catch (Throwable e) {
7:           throw new RuntimeException(e);
8:        }
9:     }
10:    public static final void main(String[] ball) 
11:          throws RuntimeException {
12:       new Fetch().play("Webby");
13:       new Fetch().play("Georgette");
14:    }
15: }
A. One exception is thrown to the caller at runtime.
B. Two exceptions are thrown to the caller at runtime.
C. More than two exceptions are thrown to the caller at runtime.
D. The class does not compile because of the play() method.
E. The class does not compile because of the main() method.
F. None of the above.
26. What is the output of the following application?
package body;
import java.io.IOException;
class Organ {
   public void operate() throws IOException {
      throw new RuntimeException("Not supported");
   }
}
public class Heart extends Organ {
   public void operate() throws Exception {
      System.out.print("beat");
   }
   public static void main(String... c) throws Exception {
      try {
         new Heart().operate();
      } finally {
         System.out.print("!");
      }
   }
}
A. beat
B. beat!
C. Not supported
D. The code does not compile.
E. The code compiles, but a stack trace is printed at runtime.
F. None of the above.
27. Which of the following are not true of using a try-with-resources statement? (Choose two.)
A. It shortens the amount of code a developer must write.
B. It is possible to close a resource before the end of the try block.
C. Associated catch blocks are run before the declared resources have been closed.
D. It is compatible with all classes that implement the Closeable interface.
E. It is compatible with all classes that implement the AutoCloseable interface.
F. It cannot be used with a finally block.
28. What is the result of compiling and executing the following class?
package wind;
public class Storm {
   public static void main(String... rain) throws Exception {
      var weatherTracker = new AutoCloseable() {
         public void close() throws RuntimeException {
            System.out.println("Thunder");
         }
      };
      try (weatherTracker) {
         System.out.println("Tracking");Exception Handling 139
      } catch (Exception e) {
         System.out.println("Lightning");
      } finally {
         System.out.println("Storm gone");
         weatherTracker.close();
      }
   } }
A. It prints one line.
B. It prints two lines.
C. It prints three lines.
D. It prints four lines.
E. It does not compile due to an error in the declaration of the weatherTracker resource.
F. It does not compile for a different reason.
29. How many of the following are valid exception declarations?
class Error extends Exception {}
class _X extends IllegalArgumentException {}
class 2BeOrNot2Be extends RuntimeException {}
class NumberException<Integer> extends NumberFormatException {}
interface Worry implements NumberFormatException {}
A. Zero
B. One
C. Two
D. Three
E. Four
F. Five
30. If a try statement has catch blocks for both ClassCastException and  
Runtime Exception, then which of the following statements is correct?
A. The catch blocks for these two exception types can be declared in any order.
B. A try statement cannot be declared with these two catch block types because they are 
incompatible.
C. The catch block for ClassCastException must appear before the catch block for  
RuntimeException.
D. The catch block for RuntimeException must appear before the catch block for  
ClassCastException.
E. None of the above.
31. Assuming Scanner is a valid class that implements AutoCloseable, what is the expected output 
of the following application?
package castles;
import java.util.Scanner;
public class Fortress {
   public void openDrawbridge() throws Exception {  // p1
      try {
         throw new Exception("Circle");             // p2
      } catch (Exception | Error e) {
         System.out.print("Opening!");
      } finally {
         System.out.print("Walls");
      }
   }
   public static void main(String[] moat) {
      try (var e = new Scanner(System.in)) {
         new Fortress().openDrawbridge();           // p3
      }
   }
}
A. Opening!Walls
B. The code does not compile because of line p1.
C. The code does not compile because of line p2.
D. The code does not compile because of line p3.
E. The code compiles, but a stack trace is printed at runtime.
F. None of the above.
32. What is the output of the following application?
package game;
public class BasketBall {
   public static void main(String[] dribble) {
      try {
         System.out.print(1);
         throw new ClassCastException();
      } catch (ArrayIndexOutOfBoundsException ex) {
         System.out.print(2);
      } catch (Throwable ex) {Exception Handling 141
         System.out.print(3);
      } finally {
         System.out.print(4);
      }
      System.out.print(5);
   }
}
A. 145
B. 1345
C. 1235
D. The code does not compile.
E. The code compiles but throws an exception at runtime.
F. None of the above.
33. Which of the following statements about finally blocks are true? (Choose two.)
A. Every line of the finally block is guaranteed to be executed.
B. The finally block is executed only if the related catch block is also executed.
C. The finally statement requires curly braces, {}.
D. A finally block cannot throw an exception.
E. The first line of a finally block is guaranteed to be executed.
F. A finally block can only throw unchecked exceptions.
34. What is the output of the following application?
package signlanguage;
import java.io.Closeable;
class ReadSign implements Closeable {
   public void close() {}
   public String get() {return "Hello";}
}
class MakeSign implements AutoCloseable {
   public void close() {}
   public void send(String message) {
      System.out.print(message);
   }
}
public class Translate {
   public static void main(String... hands) {
      try (ReadSign r = new ReadSign();
         MakeSign w = new MakeSign();) {
         w.send(r.get());
      }
   }
}
A. Hello
B. The code does not compile because of the ReadSign class.
C. The code does not compile because of the MakeSign class.
D. The code does not compile because of the Translate class.
E. The code does not compile because of the try-with-resources statement.
F. None of the above.
35. What is the output of the following application?
package what;
class FunEvent implements AutoCloseable {
   private final int value;
   FunEvent(int value) { this.value = value; }
   public void close() {
      System.out.print(value);
   }
}
public class Happening {
   public static void main(String... lots) {
      FunEvent e = new FunEvent(1);
      try (e; var f = new FunEvent(8)) {
         System.out.print("2");
         throw new ArithmeticException();
      } catch (Exception x) {
         System.out.print("3");
      } finally {
         System.out.print("4");
      }
   } }
A. 24
B. 21834
C. 23418
D. 23481
E. 28134
F. The code does not compile.Exception Handling 143
36. What is the output of the following application?
package office;
import java.io.*;
public class Printer {
   public void print() {
      try {
         throw new FileNotFoundException();
      } catch (Exception | RuntimeException e) {
         System.out.print("Z");
      } catch (Throwable f) {
         System.out.print("X");
      } finally {
         System.out.print("Y");
      }
   }
 
   public static void main(String... ink) {
      new Printer().print();
   }
}
A. Y
B. XY
C. ZY
D. The code does not compile.
E. The code compiles, but a stack trace is printed at runtime.
F. None of the above.
37. What is the output of the following code?
class ProblemException extends Exception {
   ProblemException(Exception e) { super(e); }
}
class MajorProblemException extends ProblemException {
   MajorProblemException(Exception e) { super(e); }
}
public class Unfortunate {
   public static void main(String[] args) throws Exception {
      try {
         System.out.print(1);
         throw new MajorProblemException(
            new IllegalStateException());
      } catch (ProblemException | RuntimeException e) {
         System.out.print(2);
         try {
            throw new MajorProblemException(e);
         } finally {
            System.out.print(3);   
         }
      } finally {
         System.out.print(4);
      }
   }
}
A. 123
B. 123 followed by an exception stack trace
C. 1234
D. 1234 followed by an exception stack trace
E. Does not compile
F. None of the above
38. What is the output of the following application?
1:  package robot;
2:  public class Computer {
3:     public void compute() throws Exception {
4:        throw new NullPointerException("Does not compute!");
5:     }
6:     public static void main(String[] b) throws Exception {
7:        try {
8:           new Computer().compute();
9:        } catch (RuntimeException e) {
10:          System.out.print("zero");
11:          throw e;
12:       } catch (Exception e) {
13:          System.out.print("one");
14:          throw e;
15:       }
16:    }
17: }
A. zero
B. one
C. zero followed by a stack traceException Handling 145
D. one followed by a stack trace
E. Does not compile
F. None of the above
39. Given the following class diagram, which two classes are missing in the hierarchy at  
positions 1 and 2?
2
1
A. IOException at position 1, Exception at position 2
B. Exception at position 1, RuntimeException at position 2
C. IllegalArgumentException at position 1, RuntimeException at position 2
D. IllegalStateException at position 1, RuntimeException at position 2
E. Exception at position 1, FileNotFoundException at position 2
F. None of the above
40. What is the output of the following application?
package vortex;
class TimeException extends Exception {}
class TimeMachine implements AutoCloseable {
   int v;
   public TimeMachine(int v) {this.v = v;}
   public void close() throws Exception {
      System.out.print(v);
   } }
public class TimeTraveler {
   public static void main(String[] twelve) {
      try (var timeSled = new TimeMachine(1);
           var delorean = new TimeMachine(2);
           var tardis = new TimeMachine(3)) {
      } catch (TimeException e) {
         System.out.print(4);
      } finally {
         System.out.print(5);
      }
   } }
A. 1235
B. 3215
C. 5123
D. 5321
E. The code does not compile.
F. None of the above.
41. Which of the following are common reasons to add a checked exception to a method  
signature? (Choose three.)
A. To alert developers that the state of the JVM has been corrupted
B. To force a caller to handle or declare potential problems
C. To ensure that exceptions never cause the application to terminate
D. To notify the caller of potential types of problems
E. To give the caller a chance to recover from a problem
F. To annoy other developers
42. Which statement about the following application is correct?
package highway;
import java.io.*;
class CarCrash extends RuntimeException {
   CarCrash(Exception e) {}                               // w1
}
public class Car {
   public static void main(String[] s) throws Exception { // w2
      try {
         throw new IOException("Auto-pilot error");
      } catch (Exception | CarCrash e) {                  // w3
         throw e;
      } catch (Exception a) {                             // w4
         throw a;
      }
   }
}
A. The code does not compile because of line w1.
B. The code does not compile because of line w2.
C. The code does not compile because of line w3.Exception Handling 147
D. The code does not compile because of line w4.
E. The code compiles and prints a stack trace at runtime.
F. None of the above.
43. Which of the following exception classes must be handled or declared in the method in which 
they are thrown? (Choose three.)
public class Happy extends IOException {}
public class Dopey extends Grumpy {}
public class Sleepy extends IllegalStateException {}
public class Sneezy extends UnsupportedOperationException {}
public class Doc extends AssertionError {}
public class Grumpy extends SQLException {}
A. Happy
B. Dopey
C. Sleepy
D. Sneezy
E. Doc
F. Grumpy
44. What is the output of the following application?
package pond;
abstract class Duck {
   protected int count;
   public abstract int getDuckies();
}
public class Ducklings extends Duck {
   private int age;
   public Ducklings(int age) { this.age = age; }
   public int getDuckies() { return this.age/count; }
   public static void main(String[] pondInfo) {
      Duck itQuacks = new Ducklings(5);
      System.out.print(itQuacks.getDuckies());
   }
}
A. 0
B. 1
C. 5
D. The code does not compile.
E. The code compiles but throws an exception at runtime.
F. None of the above.
45. Which statements about the following line of code are correct? (Choose three.)
throw new IllegalArgumentException ();
A. The method where this is called must declare a compatible exception.
B. The code where this is called can include a try-with-resources block that handles this 
exception.
C. This exception should not be handled or declared.
D. The code where this is called can include a try/catch block that handles this exception.
E. This exception should be thrown only at the start of a method.
F. This exception does not need to be handled by the method in which it is called.
46. What is the output of the following application?
package storage;
import java.io.*;
public class Backup {
   public void performBackup() {
      try {
         throw new IOException("Disk not found");  // z1
      } catch (Exception e) {
         try {
            throw new FileNotFoundException("File not found");
         } catch (FileNotFoundException e) {       // z2
            System.out.print("Failed");
         }
      }
   }
   public static void main(String... files) {
      new Backup().performBackup();                // z2
   }
}
A. Failed
B. The application compiles, but a stack trace is printed at runtime.
C. The code does not compile because of line z1.
D. The code does not compile because of line z2.
E. The code does not compile because of line z3.
F. None of the above.
47. What is the output of the following?
package com.tps;
import java.io.IOException;
public class IncidentReportException extends RuntimeException {Exception Handling 149
   public static void main(String[] args) throws Exception {
      try {
         throw new IncidentReportException(new IOException());
      } catch (RuntimeException e) {
         System.out.println(e.getCause());
      }
   }
}
A. com.tps.IncidentReportException
B. java.lang.IOException
C. The code does not compile because IOException is a checked exception.
D. The code does not compile due to the declaration of IncidentReportException.
E. None of the above.
48. Which expression, when inserted into the blank in the following class, allows the code 
to compile?
package music;
import java.sql.*;
public class Bells {
   class Player implements AutoCloseable {
      @Override public void close() throws RingException {}
   }
   class RingException extends Exception {
      public RingException(String message) {}
   }
   public static void main(String[] notes) throws Throwable {
      try (Player p = null) {
         throw new Exception();
      } catch (Exception e) {
      } catch ( ) {
      }
   }
}
A. Error r
B. IllegalStateException b
C. RingException q
D. SQLException p
E. RuntimeException r
F. The code does not compile regardless of the expression used.
49. What is the output of the following application?
package zoo;
class BigCat {
   void roar(int level) throw RuntimeException {
      if(level<3) throw new IllegalArgumentException();
      System.out.print("Roar!");
   }
}
public class Lion extends BigCat {
   public void roar() {
      System.out.print("Roar!!!");
   }
   void roar(int sound) {
      System.out.print("Meow");
   }
   public static void main(String[] cubs) {
      final BigCat kitty = new Lion();
      kitty.roar(2);
   }
}
A. Meow
B. Roar!
C. Roar!!!
D. MeowRoar!
E. A stack trace is printed at runtime.
F. None of the above.
50. Which statement about the following program is true?
package tag;
class MissedCallException extends Exception {}
public class Phone {
   static void makeCall() throws RuntimeException {
      throw new ArrayIndexOutOfBoundsException("Call");
   }
   public static void main(String[] messages) {
      try {
         makeCall();
      } catch (MissedCallException e) {
         throw new RuntimeException("Voicemail");Exception Handling 151
      } finally {
         throw new RuntimeException("Text");
      }
   }
}
A. An exception is printed at runtime with Call in the message.
B. An exception is printed at runtime with Voicemail in the message.
C. An exception is printed at runtime with Text in the message.
D. The code does not compile.
E. None of the above.
51. If a try statement has catch blocks for both IllegalArgumentException and 
NullPointer Exception, then which of the following statements is correct?
A. The catch blocks for these two exception types can be declared in any order.
B. A try statement cannot be declared with these two catch block types because they are 
incompatible.
C. The catch block for IllegalArgumentException must appear before the catch block for 
NullPointerException.
D. The catch block for NullPointerException must appear before the catch block 
for IllegalArgumentException.
E. None of the above.
52. What is the output of the following application?
package furniture;
class Chair {
   public void sit() throws IllegalArgumentException {
      System.out.print("creek");
      throw new RuntimeException();
   }
}
public class Stool extends Chair {
   public void sit() throws RuntimeException {
      System.out.print("thud");
   }
   public static void main(String... c) throws Exception {
      try {
         new Stool().sit();
      } finally {
         System.out.print("?");
      }
   }
}
A. creek
B. thud
C. thud?
D. The code does not compile.
E. The code compiles, but a stack trace is printed at runtime.
F. None of the above.
53. What is the output of the following application?
import java.io.*;
import java.sql.*;
public class DatabaseHelper {
   static class MyDatabase implements Closeable {
      public void close() throws SQLException {
         System.out.print("2");
      }
      public void write(String data) {}
      public String read() {return null;}
   }
   public static void main(String... files) throws Exception {
      try (MyDatabase myDb = new MyDatabase()) {
         // TODO: Decide what to read/rite
      } finally {
         System.out.print("1");
      }
   }
}
A. 12
B. 21
C. The code does not compile because of the MyDatabase nested class.
D. The code does not compile because of the try-with-resources statement.
E. The code does not compile for a different reason.
54. What constructors are capable of being called on a custom exception class that directly 
extends the Exception class?
A. One that takes a single Exception
B. One that takes a single String
C. Both of these
D. Neither of theseException Handling 153
55. What is the result of compiling and running the following application?
package dinner;
public class Pizza {   
   Exception order(RuntimeException e) {          // h1
      throw e;                                    // h2
   }   
   public static void main(String... u) {
      var p = new Pizza();
      try {
         p.order(new IllegalArgumentException()); // h3
      } catch(RuntimeException e) {               // h4
         System.out.print(e);
      }
   }
}
A. java.lang.IllegalArgumentException is printed.
B. The code does not compile because of line h1.
C. The code does not compile because of line h2.
D. The code does not compile because of line h3.
E. The code does not compile because of line h4.
F. The code compiles, but a stack trace is printed at runtime.
56. Given an application that hosts a website, which of the following would most likely result in 
a java.lang.Error being thrown? (Choose two.)
A. A user tries to sign in too many times.
B. Two users try to register an account at the same time.
C. An order update page calls itself infinitely.
D. The application temporarily loses connection to the network.
E. A user enters their password incorrectly.
F. The connections to a database are never released and keep accumulating.
57. How many lines of text does the following program print?
package tron;
class DiskPlayer implements AutoCloseable {
   public void close() {}
}
public class LightCycle {
   public static void main(String... bits) {
      try (DiskPlayer john = new DiskPlayer()) {
         System.out.println("ping");
         john.close();
      } finally {
         System.out.println("pong");
         john.close();
      }
      System.out.println("return");
   }
}
A. One.
B. Two.
C. Three.
D. The code does not compile because of the DiskPlayer class.
E. The code does not compile for a different reason.
F. None of the above.
58. What is the output of the following?
package com.tps;
import java.io.IOException;
public class IncidentReportException extends RuntimeException {
   public IncidentReportException(Exception e) {
      super(e);
   }
   public static void main(String[] args) throws Exception {
      try {
         throw new IncidentReportException(new IOException());
      } catch (RuntimeException e) {
         System.out.println(e.getCause());
      }
   }
}
A. com.tps.IncidentReportException
B. java.lang.IOException
C. The code does not compile because IOException is a checked exception.
D. The code does not compile due to the declaration of IncidentReportException.
E. None of the above.Exception Handling 155
59. Given the following application, what is the name of the class printed at line e1?
package canyon;
final class FallenException extends Exception {}
final class HikingGear implements AutoCloseable {
   @Override public void close() throws Exception {
      throw new FallenException();
   }
}
public class Cliff {
   public final void climb() throws Exception {
      try (HikingGear gear = new HikingGear()) {
         throw new RuntimeException();
      }
   }
   public static void main(String... rocks) {
      try {
         new Cliff().climb();
      } catch (Throwable t) {
         System.out.println(t);  // e1
      }
   }
}
A. canyon.FallenException
B. java.lang.RuntimeException
C. The code does not compile.
D. The code compiles, but the answer cannot be determined until runtime.
E. None of the above.
60. Given the following application, which specific type of exception will be printed in the stack 
trace at runtime?
package carnival;
public class WhackAnException {
   public static void main(String... hammer) {
      try {
         throw new ClassCastException();
      } catch (IllegalArgumentException e) {
         throw new IllegalArgumentException();
      } catch (RuntimeException e) {
         throw new NullPointerException();
      } finally {
         throw new RuntimeException();
      }
   }
}
A. ClassCastException
B. IllegalArgumentException
C. NullPointerException
D. RuntimeException
E. The code does not compile.
F. None of the above.Working with Arrays 
and Collections
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Working with Arrays and Collections
✓■ Use generics, including wildcards
✓■ Use a Java array and List, Set, Map and Deque collections, 
including convenience methods
✓■ Sort collections and arrays using Comparator and Comparable 
interfaces
Chapter 
5158 Chapter 5 ■ Working with Arrays and Collections
1. What is the output of the following?
List<String> museums = new ArrayList<>(1);
museums.add("Natural History");
museums.add("Science");
museums.add("Art");
museums.remove(2);
System.out.println(museums);
A. [Natural History, Science]
B. [Natural History, Art, Science]
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
2. How many of the following are legal declarations?
[]String lions = new String[];
String[] tigers = new String[1] {"tiger"};
String bears[] = new String[] {};
String ohMy [] = new String[0] {};
A. None
B. One
C. Two
D. Three
E. Four
3. Which of the following can fill in the blank to make the code compile?
public class News< > {}
A. ? only
B. N only
C. ? and N
D. News, and Object
E. N, News, and Object
F. None of the above
4. What is true of this code? (Choose two.)
26: List<String> strings = new ArrayList<?>();
27: var ints = new HashSet<Integer>();
28: Double dbl = 5.0;
29: ints.add(2);
30: ints.add(null);Working with Arrays and Collections 159
A. The code compiles as is.
B. One line needs to be removed for the code to compile.
C. Two lines need to be removed for the code to compile.
D. One line of code uses autoboxing.
E. Two lines of code use autoboxing.
F. Three lines of code use autoboxing.
5. Which of the following creates an empty two-dimensional array with dimensions 2×2?
A. int[][] blue = new int[2, 2];
B. int[][] blue = new int[2], [2];
C. int[][] blue = new int[2][2];
D. int[][] blue = new int[2 x 2];
E. None of the above
6. What is the output of the following?
var q = new ArrayDeque<String>();
q.offer("snowball");
q.offer("minnie");
q.offer("sugar");
                
System.out.println(q.peek() + " " + q.peek() + " " + q.size());
A. sugar sugar 3
B. sugar minnie 1
C. snowball minnie 1
D. snowball snowball 3
E. The code does not compile.
F. None of the above.
7. We are running a library. Patrons select books by name. They get at the back of the checkout 
line. When they get to the front, they scan the book’s ISBN, a unique identification number. 
The checkout system finds the book based on this number and marks the book as checked 
out. Of these choices, which data structures best represent the line to check out the book and 
the book lookup to mark it as checked out, respectively?
A. ArrayList, HashSet
B. ArrayList, TreeMap
C. ArrayList, TreeSet
D. LinkedList, HashSet
E. LinkedList, TreeMap
F. LinkedList, TreeSet
8. What is the result of running the following program?
1:  package fun;
2:  public class Sudoku {
3:     static int[][] game;
4:
5:     public static void main(String[] args) {
6:        game[3][3] = 6;
7:        Object[] obj = game;
8:        game[3][3] = "X";
9:        System.out.println(game[3][3]);
10:    }
11: }
A. X
B. The code does not compile.
C. The code compiles but throws a NullPointerException at runtime.
D. The code compiles but throws a different exception at runtime.
9. Suppose we want to implement a Comparator<String> so that it sorts the longest strings 
first. You may assume there are no null values. Which method could implement such a 
comparator?
A. 
public int compare(String s1, String s2) {
   return s1.length() - s2.length();
}
B. 
public int compare(String s1, String s2) {
   return s2.length() – s1.length();
}
C. 
public int compare(Object obj1, Object obj2) {
   String s1 = (String) obj1;
   String s2 = (String) obj2;
   return s1.length() - s2.length();
}
D. 
public int compare(Object obj1, Object obj2) {
   String s1 = (String) obj1;
   String s2 = (String) obj2;
   return s2.length() – s1.length();
}
E. None of the above
10. How many lines does the following code output?
var days = new String[] { "Sunday", "Monday", "Tuesday",
   "Wednesday", "Thursday", "Friday", "Saturday" };
 
for (int i = 1; i < days.length; i++)
      System.out.println(days[i]);
A. Zero.
B. Six.
C. Seven.
D. The code does not compile.
E. The code compiles but throws an exception at runtime.
11. Which cannot fill in the blank for this code to compile?
var c = new <String>();
c.add("pen");
c.remove("pen");
System.out.println(c.isEmpty());
A. ArrayList
B. LinkedList
C. TreeMap
D. TreeSet
E. All of these can fill in the blank.
12. What is true of the following code? (Choose two.)
private static void sortAndSearch(String... args) {
   var one = args[0];
   Arrays.sort(args);
    result = Arrays.binarySearch(args, one);
   System.out.println(result);
}
public static void main(String[] args) {
   sortAndSearch("seed", "flower");
}
A. If the blank contains int, then the code outputs 0.
B. If the blank contains int, then the code outputs 1.
C. If the blank contains int, then the does not compile.
D. If the blank contains String, then the code outputs flower.
E. If the blank contains String, then the code outputs seed.
F. If the blank contains String, then the code does not compile.
13. How many of the following are legal declarations?
public void greek() {
   [][]String alpha;
   []String beta;
   String[][] gamma;
   String[] delta[];
   String epsilon[][];
   var[][] zeta;
}
A. One
B. Two
C. Three
D. Four
E. Five
F. Six
14. What is the result of the following?
var list = new ArrayList<Integer>();
list.add(56);
list.add(56);
list.add(3);
var set = new TreeSet<Integer>(list);
System.out.print(set.size());
System.out.print(" " );
System.out.print(set.iterator().next());
A. 2 3
B. 2 56Working with Arrays and Collections 163
C. 3 3
D. 3 56
E. None of the above
15. What is true of the code when run as java Copier.java? (Choose two.)
1:  import java.util.Arrays;
2:
3:  public class Copier {
4:     public static void main(String... original) {
5:        String... copy = original;
6:        Arrays.linearSort(original);
7:        Arrays.search(original, "");
8:        System.out.println(original.size() 
9:           + " " + original[0]);
10:    }
11: }
 
A. One line contains a compiler error.
B. Two lines contain a compiler error.
C. Three lines contain a compiler error.
D. Four lines contain a compiler error.
E. If the compiler errors were fixed, the code would throw an exception.
F. If the compiler errors were fixed, the code would run successfully.
16. What is the output of the following? (Choose three.)
20: var chars = new <Character>();
21: chars.add('a');
22: chars.add(Character.valueOf('b'));
23: chars.set(1, 'c');
24: chars.remove(0);
25: System.out.print(chars.size() + " " + chars.contains('b'));
A. When inserting ArrayList into the blank, the code prints 1 false.
B. When inserting ArrayList into the blank, the code does not compile.
C. When inserting HashMap into the blank, the code prints 1 false.
D. When inserting HashMap into the blank, the code does not compile.
E. When inserting HashSet into the blank, the code prints 1 false.
F. When inserting HashSet into the blank, the code does not compile.
17. What is the output of the following?
class Magazine {
   private String name;
   public Magazine(String name) {
      this.name = name;
   }
   public int compareTo(Magazine m) {
      return name.compareTo(m.name);
   }
   public String toString() {
      return name;
   }
}
public class Newsstand {
   public static void main(String[] args) {
      var set = new TreeSet<Magazine>();
      set.add(new Magazine("highlights"));
      set.add(new Magazine("Newsweek"));
      set.add(new Magazine("highlights"));
      System.out.println(set.iterator().next());
   }
}
A. highlights
B. Newsweek
C. null
D. The code does not compile.
E. The code compiles but throws an exception at runtime.
18. Which is the first line to prevent this code from compiling and running without error?
char[][] ticTacToe = new char[3][3];                 // r1
ticTacToe[1][3] = 'X';                               // r2
ticTacToe[2][2] = 'X';
ticTacToe[3][1] = 'X';
System.out.println(ticTacToe.length + " in a row!"); // r3
A. Line r1
B. Line r2
C. Line r3
D. None of the aboveWorking with Arrays and Collections 165
19. What is the first line with a compiler error?
class Mammal {}
class Bat extends Mammal {}
class Cat extends Mammal {}
class Sat {}
 
class Fur<T extends Mammal> {    // line R
 
   void clean() {
      var bat = new Fur<Bat>();  // line S
      var cat = new Fur<Cat>();  // line T
      var sat = new Fur<Sat>();  // line U
   }
}
A. Line R
B. Line S
C. Line T
D. Line U
E. None of the above
20. What is a possible result of this code?
17: var nums = new HashSet<Long>();
18: nums.add((long) Math.min(5, 3));
19: nums.add(Math.round(3.14));
20: nums.add((long) Math.pow(4,2));
21: System.out.println(nums);
A. [3]
B. [16]
C. [16, 3]
D. [16, 3, 3]
E. None of the above
21. What is the output of the following?
5: var x = new LinkedList<Integer>();
6: x.offer(18);
7: x.offer(5);
8: x.push(13);
9: System.out.println(x.poll() + " " + x.poll());
A. 13 5
B. 13 18
C. 18 5
D. 18 13
E. The code does not compile.
F. The code compiles, but prints something else.
22. Suppose we want to store JellyBean objects. Which of the following require JellyBean to 
implement the Comparable interface or create a Comparator to add them to the collection? 
(Choose two.)
A. ArrayList
B. HashMap
C. HashSet
D. SortedArray
E. TreeMap
F. TreeSet
23. Which of the following references the first and last elements in a nonempty array?
A. trains[0] and trains[trains.length]
B. trains[0] and trains[trains.length - 1]
C. trains[1] and trains[trains.length]
D. trains[1] and trains[trains.length - 1]
E. None of the above
24. Which of the following fills in the blank so this code compiles?
public static void throwOne(Collection< > coll) {
   var iter = coll.iterator();
   if (iter.hasNext())
      throw iter.next();
}
A. ?
B. ? extends RuntimeException
C. ? super RuntimeException
D. None of the above
25. Which of these four array declarations produces a different array than the others?
A. int[][] nums = new int[2][1];
B. int[] nums[] = new int[2][1];
C. int[] nums[] = new int[][] { { 0 }, { 0 } };
D. int[] nums[] = new int[][] { { 0, 0 } };Working with Arrays and Collections 167
26. What does the following output?
var linux = new String[] { "Linux", "Mac", "Windows" };
var mac = new String[] { "Mac", "Linux", "Windows" };
 
var search = Arrays.binarySearch(linux, "Linux");
var mismatch1 = Arrays.mismatch(linux, mac);
var mismatch2 = Arrays.mismatch(mac, mac);
 
System.out.println(search + " " + mismatch1 + " " + mismatch2);
A. -1 0 -1
B. -1 -1 0
C. 0 -1 0
D. 0 0 -1
E. The output is not defined.
F. The code does not compile.
27. Which line in the main() method doesn’t compile or points to a class that doesn’t compile?
1:  interface Comic<C> {
2:     void draw(C c);
3:  }
4:  class ComicClass<C> implements Comic<C> {
5:     public void draw(C c) {
6:        System.out.println(c);
7:     }
8:  }
9:  class SnoopyClass implements Comic<Snoopy> {
10:    public void draw(Snoopy c) {
11:       System.out.println(c);
12:    }
13: }
14: class SnoopyComic implements Comic<Snoopy> {
15:    public void draw(C c) {
16:       System.out.println(c);
17:    }
18: }
19: public class Snoopy {
20:    public static void main(String[] args) {
21:       Comic<Snoopy> c1 = c -> System.out.println(c);
22:       Comic<Snoopy> c2 = new ComicClass<>();
23:       Comic<Snoopy> c3 = new SnoopyClass();
24:       Comic<Snoopy> c4 = new SnoopyComic();
25:    }
26: }
A. Line 21.
B. Line 22.
C. Line 23.
D. Line 24.
E. None of the above. All of the code compiles.
28. Fill in the blank to make this code compile:
public class Truck implements Comparable<Truck> {
   private int id;
   public Truck(int id) {
      this.id = id;
   }
   @Override
   public int  {
      return id - t.id;
   }
}
A. compare(Truck t)
B. compare(Truck t1, Truck t2)
C. compareTo(Truck t)
D. compareTo(Truck t1, Truck t2)
E. None of the above
29. How many lines does the following code output?
var days = new String[] { "Sunday", "Monday", "Tuesday",
   "Wednesday", "Thursday", "Friday", "Saturday" };
 
for (int i = 0; i < days.length; i++)
   System.out.println(days[i]);
A. Six.
B. Seven.
C. The code does not compile.
D. The code compiles but throws an exception at runtime.Working with Arrays and Collections 169
30. Which of the following fill in the blank to print out true? (Choose two.)
String[] array = {"Natural History", "Science"};
var museums = ;
museums.set(0, "Art");
System.out.println(museums.contains("Art"));
A. Arrays.asList(array)
B. Arrays.asList("Natural History, Science")
C. List.of(array)
D. List.of("Natural History", "Science")
E. new ArrayList<String>("Natural History", "Science")
F. new List<String>("Natural History", "Science")
31. Which option cannot fill in the blank to print Clean socks?
class Wash<T> {
   T item;
   public void clean(T item) {
      System.out.println("Clean " + item);
   }
}
public class LaundryTime {
   public static void main(String[] args) {
      
      wash.clean("socks");
   }
}
A. var wash = new Wash<String>();
B. var wash = new Wash<>();
C. Wash wash = new Wash();
D. Wash wash = new Wash<String>();
E. Wash<String> wash = new Wash<>();
F. All of these can fill in the blank.
32. Which of the options in the graphic best represent the blocks variable?
char[][] blocks = new char[][] {
    { 'a', 'b', 'c' }, { 'd' }, { 'e', 'f' } };
Option A
blocks blocks
Option B
Option C
blocks blocks
Option D
A. Option A
B. Option B
C. Option C
D. Option D
33. Fill in the blank so the code prints gamma. (Choose two.)
var list = Arrays.asList("alpha", "beta", "gamma");
Collections.sort(list, );
System.out.println(list.get(0));
A. (s, t) -> s.compareTo(t)
B. (s, t) -> t.compareTo(s)
C. Comparator.comparing((String s) -> s.charAt(0))
D. Comparator.comparing((String s) -> s.charAt(0)).reverse()
E. Comparator.comparing((String s) -> s.charAt(0)).reversed()
34. How many of the following are legal declarations?
float[] lion = new float[];
float[] tiger = new float[1];
float[] bear = new[] float;
float[] ohMy = new[1] float;Working with Arrays and Collections 171
A. None
B. One
C. Two
D. Three
E. Four
35. Which is the first line of code that causes an ArrayIndexOutOfBoundsException?
var matrix = new String[1][2];
matrix[0][0] = "Don't think you are, know you are.";      // m1
matrix[0][1] = "I'm trying to free your mind Neo";        // m2
matrix[1][0] = "Is all around you ";                      // m3
matrix[1][1] = "Why oh why didn't I take the BLUE pill?"; // m4
A. m1
B. m2
C. m3
D. m4
E. The code does not compile.
F. None of the above.
36. Suppose we have list of type List<Integer>. Which method allows you to pass a List 
and returns an immutable Set containing the same elements?
A. List.copyOf(list)
B. List.of(list)
C. Set.copyOf(list);
D. Set.of(list);
E. None of the above
37. What does the following output? (Choose two.)
var os = new String[] { "Mac", "Linux", "Windows" };
Arrays.sort(os);
 
System.out.println(Arrays.binarySearch(os, "RedHat"));
System.out.println(Arrays.binarySearch(os, "Mac"));
A. -1
B. -2
C. -3
D. 0
E. 1
F. 2
38. What does the following output?
var names = new HashMap<String, String>();
names.put("peter", "pan");
names.put("wendy", "darling");
var first = names.entrySet();        // line x1
System.out.println(first.getKey());  // line x2
A. peter
B. wendy
C. Does not compile due to line x1
D. Does not compile due to line x2
E. Does not compile due to another reason
F. Throws an exception at runtime
39. Which of these elements are in the output of the following? (Choose three.)
var q = new ArrayDeque<String>();
q.offerFirst("snowball");
q.offer("sugar");
q.offerLast("minnie");
                
System.out.println(q.poll());
System.out.println(q.removeFirst());
System.out.println(q.size());
A. sugar
B. minnie
C. snowball
D. 1
E. 2
F. 3
40. Which of these four pairs of declarations can point to an array that is different from 
the others?
A. int[][][][] nums1a, nums1b;
B. int[][][] nums2a[], nums2b;
C. int[][] nums3a[][], nums3b[][];
D. int[] nums4a[][][], numbs4b[][][];
41. Which of the following does not behave the same way as the others?
A. var set = new HashSet<>();
B. var set = new HashSet<Object>();Working with Arrays and Collections 173
C. HashSet<> set = new HashSet<Object>();
D. HashSet<Object> set = new HashSet<>();
E. HashSet<Object> set = new HashSet<Object>();
42. What is true about the output of the following code?
var ints = new int[] {3,1,4};
var others = new int[] {2,7,1,8};
System.out.println(Arrays.compare(ints, others));
A. It is negative because ints has fewer elements.
B. It is 0 because the arrays can’t be compared.
C. It is positive because the first element is larger.
D. It is undefined.
E. The code does not compile.
43. Fill in the blank so the code prints beta.
var list = List.of("alpha", "beta", "gamma");
Collections.sort(list, );
System.out.println(list.get(0));
A. (s, t) -> s.compareTo(t)
B. (s, t) -> t.compareTo(s)
C. Comparator.comparing(String::length)
D. Comparator.comparing(String::length).reversed()
E. None of the above
44. How many of these lines have a compiler error?
20: var list = List.of('a', 'c', 'e');
21: Char letter1 = list.get(0);
22: char letter2 = list.get(0);
23: int letter3 = list.get(0);
24: Integer letter4 = list.get(0);
25: Object letter5 = list.get(0);
A. 0
B. 1
C. 2
D. 3
E. 4
F. 5
45. How many dimensions does the array reference moreBools allow?
boolean[][] bools[], moreBools;
A. One dimension
B. Two dimensions
C. Three dimensions
D. None of the above
46. What is the result of the following?
Comparator<Integer> c = (x, y) -> y - x;
var ints = Arrays.asList(3, 1, 4);
Collections.sort(ints, c);
System.out.println(Collections.binarySearch(ints, 1));
A. -1
B. 0
C. -1
D. The code does not compile.
E. The result is not defined.
47. Which statement most accurately represents the relationship between searching and sorting 
with respect to the Arrays class?
A. If the array is not sorted, calling Arrays.binarySearch() will be accurate, but 
slower than if it were sorted.
B. The array does not need to be sorted before calling Arrays.binarySearch() to get 
an accurate result.
C. The array must be sorted before calling Arrays.binarySearch() to get an accurate 
result.
D. None of the above.
48. Which statement is true about the following figure while ensuring the code continues to  
compile? (Choose two.)
List  balloons = new ArrayList ();
P Q
var  air = new ArrayList ();
SR
A. <> can be inserted at positions P and R without making any other changes.
B. <> can be inserted at positions Q and S without making any other changes.
C. <> can be inserted at all four positions.Working with Arrays and Collections 175
D. Both variables point to an ArrayList<String>.
E. Only one variable points to an ArrayList<String>.
F. Neither variable points to an ArrayList<String>.
49. What is the result of the following when called as java Binary.java? (Choose two.)
1: import java.util.*;
2: public class Binary {
3:
4:    public static void main(String... args) {
5:       Arrays.sort(args);
6:       System.out.println(Arrays.toString(args));
7:       System.out.println(args[0]);
8:    } }
A. null
B. []
C. Binary
D. The code throws an ArrayIndexOutOfBoundsException.
E. The code throws a NullPointerException.
F. The code does not compile.
50. What is the first line with a compiler error?
class Mammal {}
class Bat extends Mammal {}
class Cat extends Mammal {}
class Sat {}
 
class Fur<? extends Mammal> {    // line R
 
   void clean() {
      var bat = new Fur<Bat>();  // line S
      var cat = new Fur<Cat>();  // line T
      var sat = new Fur<Sat>();  // line U
   }
}
A. Line R
B. Line S
C. Line T
D. Line U
E. None of the above
51. What is the result of running the following program?
1:  package fun;
2:  public class Sudoku {
3:     static int[][] game = new int[6][6];
4:
5:     public static void main(String[] args) {
6:        game[3][3] = 6;
7:        Object[] obj = game;
8:        obj[3] = "X";
9:        System.out.println(game[3][3]);
10:    }
11: }
A. 6
B. X
C. The code does not compile.
D. The code compiles but throws a NullPointerException at runtime.
E. The code compiles but throws a different exception at runtime.
52. How many of these allow inserting null values: ArrayList, LinkedList, HashSet, and TreeSet?
A. 0
B. 1
C. 2
D. 3
E. 4
53. What is the output of the following?
var threes = Arrays.asList("3", "three", "THREE");
Collections.sort(threes);
System.out.println(threes);
A. [3, three, THREE]
B. [3, THREE, three]
C. [three, THREE, 3]
D. [THREE, three, 3]
E. None of the aboveWorking with Arrays and Collections 177
54. How many dimensions does the array reference moreBools allow?
boolean[][][] bools, moreBools;
A. One dimension
B. Two dimensions
C. Three dimensions
D. None of the above
55. What is the output of the following?
20: List<Character> chars = new ArrayList<>();
21: chars.add('a');
22: chars.add('b');
23: chars.clear();
24: chars.remove(0);
25: System.out.print(chars.isEmpty() + " " + chars.length());
A. false 0
B. true 1
C. 2
D. The code does not compile.
E. The code throws an exception at runtime.
56. Which fills in the blank in the method signature to allow this code to compile?
import java.util.*;
public class ExtendingGenerics {
   private static <  , U> U add(T list, U element) {
      list.add(element);
      return element;
   }
   public static void main(String[] args) {
      var values = new ArrayList<String>();
      add(values, "duck");
      add(values, "duck");
      add(values, "goose");
      System.out.println(values);
   }
}
A. ? extends Collection<U>
B. ? implements Collection<U>
C. T extends Collection<U>
D. T implements Collection<U>
E. None of the above
57. What does the following output?
String[] os = new String[] { "Mac", "Linux", "Windows" };
System.out.println(Arrays.binarySearch(os, "Linux"));
A. 0
B. 1
C. 2
D. The output is not defined.
58. Which is the first line to prevent this code from compiling and running without error?
char[][] ticTacToe = new char[3,3];                  // r1
ticTacToe[1][3] = 'X';                               // r2
ticTacToe[2][2] = 'X';
ticTacToe[3][1] = 'X';
System.out.println(ticTacToe.length + " in a row!"); // r3
A. Line r1
B. Line r2
C. Line r3
D. None of the above
59. What is the result of the following?
var list = new ArrayList<String>();
list.add("Austin");
list.add("Boston");
list.add("San Francisco");
list.removeIf(a -> a.length() > 10);
System.out.println(list.size());
A. 1
B. 2
C. 3
D. None of the above
60. What happens when calling the following method with a non-null and non-empty array?
public static void addStationName(String[] names) {
   names[names.length] = "Times Square";
}
A. It adds an element to the array the value of which is Times Square.
B. It replaces the last element in the array with the value Times Square.Working with Arrays and Collections 179
C. It does not compile.
D. It throws an exception.
E. None of the above.
61. Which is not a true statement about an array?
A. An array expands automatically when it is full.
B. An array is allowed to contain duplicate values.
C. An array understands the concept of ordered elements.
D. An array uses a zero index to reference the first element.
62. Which of the following cannot fill in the blank to make the code compile?
private void output( <?> x) {
   x.forEach(System.out::println);
}
A. Collection
B. LinkedList
C. TreeMap
D. None of these can fill in the blank.
E. All of these can fill in the blank.
63. Which of the following fills in the blank so this code compiles?
public static void getExceptions(Collection< > coll) {
   coll.add(new RuntimeException());
   coll.add(new Exception());
}
A. ?
B. ? extends RuntimeException
C. ? super RuntimeException
D. None of the above
64. What is the output of the following? (Choose two.)
35: var mags = new HashMap<String, Integer>();
36: mags.put("People", 1974);
37: mags.put("Readers Digest", 1922);
38: mags.put("The Economist", 1843);
39:
40: Collection<Integer> years = mags.values();
41:
42: List<Integer> sorted = new ArrayList<>(years);
43: Collections.sort(sorted);
44:
45: int first = sorted.get(0);
46: System.out.println(first);
47:
48: Integer last = sorted.get(sorted.size());
49: System.out.println(last);
A. 1843
B. 1922
C. 1974
D. The code compiles but throws an exception at runtime.
65. How do you access the array element with the value of "z"?
"one"
"p"
"x"
"y"
"x"
"y"
"z"
"two" "three"
dimensions
A. dimensions["three"][2]
B. dimensions["three"][3]
C. dimensions[2][2]
D. dimensions[3][3]
66. What is the output of the following?
class Magazine implements Comparable<Magazine> {
   private String name;
   public Magazine(String name) {
      this.name = name;
   }
   @Override
   public int compareTo(Magazine m) {
      return name.compareTo(m.name);
   }Working with Arrays and Collections 181
   @Override
   public String toString() {
      return name;
   }
}
public class Newsstand {
   public static void main(String[] args) {
      var set = new TreeSet<Magazine>();
      set.add(new Magazine("highlights"));
      set.add(new Magazine("Newsweek"));
      set.add(new Magazine("highlights"));
      System.out.println(set.iterator().next());
   }
}
A. highlights
B. Newsweek
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
67. Which options can fill in the blanks to print Cleaned 2 items?
import java.util.*;
class Wash<T  Collection> {
   T item;
   public void clean(T items) {
      System.out.println("Cleaned " + items.size() + " items");
   }
}
public class LaundryTime {
   public static void main(String[] args) {
      Wash<List> wash = new Wash< >();
      wash.clean(List.of("sock", "tie"));
   }
}
A. extends, ArrayList
B. extends, List
C. super, ArrayList
D. super, List
E. None of the above
68. How many lines does the following code output?
var days = new String[] { "Sunday", "Monday", "Tuesday",
   "Wednesday", "Thursday", "Friday", "Saturday" };
for (int i = 1; i <= days.length; i++)
   System.out.println(days[i]);
A. Six.
B. Seven.
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
69. What is the output of the following?
var listing = new String[][] {
    { "Book" }, { "Game", "29.99" } };
System.out.println(listing.length + " " + listing[0].length);
A. 1 2
B. 2 1
C. 2 2
D. The code does not compile.
E. The code compiles but throws an exception at runtime.
70. What is the output of the following?
Queue<String> q = new ArrayDeque<>();
q.add("snowball");
q.addLast("sugar");
q.addFirst("minnie");
                                 
System.out.println(q.peek() + " " + q.peek() + " " + q.size());
A. sugar sugar 3
B. sugar minnie 1
C. minnie minnie 3
D. minnie snowball 1
E. The code does not compile.
F. None of the above.
71. What is the result of the following?
13: var numbers = Arrays.asList(3, 1, 4);
14: numbers.set(1, null);
15: int first = numbers.get(0);Working with Arrays and Collections 183
16: int middle = numbers.get(1);
17: int last = numbers.get(3);
18: System.out.println(first + " " + middle + " " + last);
A. The code does not compile.
B. Line 14 throws an exception.
C. Line 15 throws an exception.
D. Line 16 throws an exception.
E. Line 17 throws an exception.
F. 3null4
72. Fill in the blank so the code prints gamma.
var list = Arrays.asList("alpha", "beta", "gamma");
Collections.sort(list, );
System.out.println(list.get(0));
A. 
Comparator.comparing(String::length)
   .andCompare(s -> s.charAt(0))
B. 
Comparator.comparing(String::length)
   .thenCompare(s -> s.charAt(0))
C. 
Comparator.comparing(String::length)
   .thenComparing(s -> s.charAt(0))
D. 
Comparator.comparing(String::length)
   .andCompare(s -> s.charAt(0))
   .reversed()
E. 
Comparator.comparing(String::length)
   .thenCompare(s -> s.charAt(0))
   .reversed()
F. 
Comparator.comparing(String::length)
   .thenComparing(s -> s.charAt(0))
   .reversed()
73. What is the output of the following when run as java FirstName Wolfie? 
(Choose two.)
public class FirstName {
   public static void main(String... names) {
      System.out.println(names[0]);
      System.out.println(names[1]);
   }
}
A. FirstName
B. Wolfie
C. The code throws an ArrayIndexOutOfBoundsException.
D. The code throws a NullPointerException.
E. The code throws a different exception.
74. What does the following output?
11: var pennies = new ArrayList<>();
12: pennies.add(1);
13: pennies.add(2);
14: pennies.add(Integer.valueOf(3));
15: pennies.add(Integer.valueOf(4));
16: pennies.remove(2);
17: pennies.remove(Integer.valueOf(1));
18: System.out.println(pennies);
A. [1, 2]
B. [1, 4]
C. [2, 4]
D. [2, 3]
E. [3, 4]
F. The code does not compile.
75. What is true of the following code? (Choose two.)
private static void sortAndSearch(String... args) {
   var one = args[1];
   Comparator<String> comp = (x, y) -> ;
   Arrays.sort(args, comp);
   var result = Arrays.binarySearch(args, one, comp);
   System.out.println(result);
}Working with Arrays and Collections 185
public static void main(String[] args) {
   sortAndSearch("seed", "flower");
}
A. If the blank contains -x.compareTo(y), then the code outputs 0.
B. If the blank contains -x.compareTo(y), then the code outputs -1.
C. If the blank contains x.compareTo(y), then the code outputs 0.
D. If the blank contains -y.compareTo(x), then the code outputs 0.
E. If the blank contains -y.compareTo(x), then the code outputs -1.
F. If the blank contains y.compareTo(x), then the code outputs 0.
G. If the blank contains y.compareTo(x), then the code outputs -1.
76. What does this code output?
String[] nums = new String[] { "1", "9", "10" };
Arrays.sort(nums);
System.out.println(Arrays.toString(nums));
A. [1, 9, 10]
B. [1, 10, 9]
C. [9, 1, 10]
D. [9, 10, 1]
E. [10, 1, 9]
F. [10, 9, 1]
77. Which is the first line to prevent this code from compiling and running without error?
char[][] ticTacToe = new char[3][3];                 // r1
ticTacToe[0][0] = 'X';                               // r2
ticTacToe[1][1] = 'X';
ticTacToe[2][2] = 'X';
System.out.println(ticTacToe.length + " in a row!"); // r3
A. Line r1
B. Line r2
C. Line r3
D. None of the above
78. What is true of the following code? (Choose three.)
36: var names = new HashMap<String, String>();
37: names.put("peter", "pan");
38: names.put("wendy", "darling");
39:
40: String w = names.getOrDefault("peter");
41: String x = names.getOrDefault("peter", "x");
42: String y = names.getOrDefault("john", "x");
A. One line does not compile.
B. Two lines do not compile.
C. If any lines that do not compile are removed, the String on line 40 is set to null.
D. If any lines that do not compile are removed, the String on line 41 is set to "pan".
E. If any lines that do not compile are removed, the String on line 41 is set to "x".
F. If any lines that do not compile are removed, the String on line 42 is set to "x".
79. What does the following output?
18: List<String> list = List.of(
19:    "Mary", "had", "a", "little", "lamb");
20: Set<String> set = new HashSet<>(list);
21: set.addAll(list);
22: for(String sheep : set)
23:    if (sheep.length() > 1)
24:       set.remove(sheep);
25: System.out.println(set);
A. [a, lamb, had, Mary, little]
B. [a]
C. [a, a]
D. The code does not compile.
E. The code throws an exception at runtime.
80. Which of the following fills in the blank so this code compiles?
public static void getExceptions(Collection< > coll) {
   coll.add(new RuntimeException());
   coll.add(new Exception());
}
A. ?
B. ? extends Exception
C. ? super Exception
D. None of the aboveWorking with 
Streams and Lambda 
Expressions
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Working with Streams and Lambda Expressions
✓■ Implement functional interfaces using lambda expressions, 
including interfaces from the java.util.function package
✓■ Use Java Streams to filter, transform and process data
✓■ Perform decomposition and reduction, including grouping and 
partitioning on sequential and parallel streams
Chapter 
6188 Chapter 6 ■ Working with Streams and Lambda Expressions
1. The following figure represents a stream pipeline. Given this, would the boxes X, Y, Z best 
represent?
X Y Z
A. Origin, intermediate operation, and final operation
B. Origin, intermediate operation, and sink
C. Origin, intermediate operation, and terminal operation
D. Source, intermediate operation, and final operation
E. Source, intermediate operation, and sink
F. Source, intermediate operation, and terminal operation
2. Which of the following is required for all valid lambda expressions?
A. ()
B. ->
C. {}
D. Parameter data type(s)
E. None of the above
3. Fill in the blanks: The ______________ functional interface does not take any inputs, while 
the ______________ functional interface does not return any data.
A. IntConsumer, LongSupplier
B. IntSupplier, Function
C. Supplier, DoubleConsumer
D. UnaryOperator, Consumer
E. None of the above
4. What is the result of executing the following application multiple times?
package bears;
import java.util.*;
public class Bounce {
   public static void main(String... legend) {
      List.of(1,2,3,4).stream()
         .forEach(System.out::println);
      List.of(1,2,3,4).parallel()
         .forEach(System.out::println);
      List.of(1,2,3,4).parallel()
         .forEachOrdered(System.out::println);
   } }
A. Only the first stream prints the same order every time.
B. Only the first and second streams print the same order every time.Working with Streams and Lambda Expressions 189
C. Only the first and third streams print the same order every time.
D. All of the streams print the same order every time.
E. None of the streams prints the same order every time.
F. None of the above.
5. A lambda expression for which of the following functional interfaces could be used to return 
a Double value? (Choose two.)
A. UnaryOperator
B. BiPredicate
C. BiOperator
D. BiConsumer
E. BiFunction
F. BiSupplier
6. What does the following output?
var list = new ArrayList<String>();
list.add("Austin");
list.add("Boston");
list.add("San Francisco");
var c = list.stream()
   .filter(a -> a.length() > 10)    // line x
   .count();
System.out.println(c + " " + list.size());
A. 1 1
B. 1 3
C. 2 3
D. The code does not compile due to line x.
E. None of the above.
7. Identify the correct functional interfaces to fill in this table correctly. (Choose three.)
Functional Interface Possible Return Type
Interface X Boolean
Interface Y int
Interface Z Void
A. Interface X is Predicate.
B. Interface X is Supplier.
C. Interface Y is Comparator.
D. Interface Y is Supplier.
E. Interface Z is Consumer.
F. Interface Z is Supplier.
8. What is a common reason for a stream pipeline not to run?
A. The source doesn’t generate any items.
B. There are no intermediate operations.
C. The terminal operation is missing.
D. The version of Java is too old.
E. None of the above.
9. Which functional interface takes a long value as an input argument and has an 
accept() method?
A. LongConsumer
B. LongFunction
C. LongPredicate
D. LongSupplier
E. None of the above
10. Given a parallel Stream<T>, which method would you use to obtain an equivalent serial 
Stream<T>?
A. unordered()
B. reduce()
C. concat()
D. stream()
E. boxed()
F. None of the above
11. Which of the following is a valid lambda expression?
A. r -> {return 1==2}
B. (q) -> true
C. (x,y) -> {int test; return test>0;}
D. a,b -> true
E. None of the above
12. Which are true of the following? (Choose two.)
var empty = Optional.empty();
var param = Optional.of(null);
var method = Optional.ofNullable(null);
A. All of these will run without error.
B. One of the lines fails to compile or throws an exception.Working with Streams and Lambda Expressions 191
C. Two of the lines fail to compile or throw an exception.
D. None of these returns true when calling opt.isPresent()
E. One of these returns true when calling opt.isPresent()
F. Two of these return true when calling opt.isPresent()
13. Which of the following statements about DoubleSupplier and Supplier<Double> 
is not true?
A. Both are functional interfaces.
B. Both take zero parameters.
C. Lambdas for both can return a double value.
D. Lambdas for both cannot return a null value.
E. One supports a generic type; the other does not.
F. All of these are true.
14. What is the output of the following program?
import java.util.stream.*;
public class Bull {
   void charge() {
      IntStream.range(1,6)
         .parallel()
         .forEachOrdered(System.out::print);
   }
   public static void main(String[] args) {
      var b = new Bull();
      b.charge();
   }
}
A. 12345
B. 54321
C. The output cannot be determined ahead of time.
D. The code does not compile.
E. An exception is thrown at runtime.
F. None of the above.
15. Fill in the blank with the functional interface from java.util.function that allows the 
code to compile and print 3 at runtime.
_____________ transformer = x -> x;
 
var prime = List.of(3,1,4,1,5,9)
   .stream()
   .limit(1)
   .peek(s -> {})
   .mapToInt(transformer)
   .peek(s -> {})
   .sum();
System.out.println(prime);
A. Function<Integer,Integer>
B. UnaryOperator<Integer>
C. ToIntFunction<Integer>
D. IntUnaryOperator
E. The code does not compile regardless of what functional interface is placed in the blank.
F. The code is capable of compiling, but since prime is an OptionalInt value, it cannot be 3 
at runtime.
16. Which fills in the blank so the code is guaranteed to print 1?
var stream = Stream.of(1, 2, 3);
System.out.println(stream.__________);
A. anyMatch()
B. findAny()
C. first()
D. min()
E. None of the above
17. What is the result of the following?
6:  var list = new ArrayList<String>();
7:  list.add("Monday");
8:  list.add(String::new);
9:  list.add("Tuesday");
10: list.remove(0);
11: System.out.println(list.get(0));
A. null
B. An empty String.
C. Monday
D. The code does not compile.
E. The code compiles but throws an exception at runtime.Working with Streams and Lambda Expressions 193
18. Which functional interface, when filled into the blank, allows the class to compile?
package space;
import java.util.function.*;
 
public class Asteroid {
   public void mine(___________ lambda) {
      // IMPLEMENTATION OMITTED
   }
   public static void main(String[] debris) {
      new Asteroid().mine((s,p) -> s+p);
   }
}
A. BiConsumer<Integer,Double>
B. BiConsumer<Integer,Double,Double>
C. BiFunction<Integer,Double,Double>
D. BiFunction<Integer,Integer,Double>
E. Function<Integer,Double>
F. None of the above
19. What best describes a reduction?
A. A source operation that creates a small value
B. An intermediate operation where it filters the stream it receives
C. An intermediate operation where it mathematically divides each element in the stream
D. A terminal operation where a single value is generated by reading each element in the 
prior step in a stream pipeline
E. A terminal operation where one element is returned from the prior step in a stream 
pipeline without reading all the elements
20. Which statements about the following application are correct? (Choose two.)
import java.util.concurrent.atomic.*;
import java.util.stream.*;
public class TicketTaker {
   long ticketsSold;
   final AtomicInteger ticketsTaken;
   public TicketTaker() {
      ticketsSold = 0;
      ticketsTaken = new AtomicInteger(0);
   }
   public void performJob() {
      IntStream.iterate(1, p -> p+1)
         .parallel()
         .limit(100)
         .forEach(i -> ticketsTaken.getAndIncrement());
      IntStream.iterate(1, q -> q+1)
         .parallel()
         .limit(500)
         .forEach(i -> ++ticketsSold);
      System.out.print(ticketsTaken+" "+ticketsSold);
   }
   public static void main(String[] matinee) {
      new TicketTaker().performJob();
   } }
A. The TicketTaker constructor does not compile.
B. The performJob() method does not compile.
C. The class compiles.
D. The first number printed is consistently 100.
E. The second number printed is consistently 500.
F. A ConcurrentModificationException is thrown at runtime.
21. Suppose you have a stream with one element and the code  
stream.xxxx.forEach(System.out::println). Filling in xxxx from top to bottom 
in the table, how many elements can be printed out? Assume a valid lambda expression is 
passed to each method in the table.
Method Number elements printed
filter() ?
flatMap() ?
map() ?
A. Zero or one, zero or more, exactly one
B. Zero or one, exactly one, zero or more
C. Zero or one, zero or more, zero or more
D. Exactly one, zero or more, exactly one
E. Exactly one, exactly one, zero or more
F. Exactly one, zero or more, zero or more
22. Assuming the proper generic types are used, which lambda expression can be assigned to a 
ToDoubleBiFunction functional interface reference? (Choose three.)
A. (Integer a, Double b) -> {int c; return b;}
B. (h,i) -> (long)hWorking with Streams and Lambda Expressions 195
C. (String u, Object v) -> u.length()+v.length()
D. (x,y) -> {int z=2; return y/z;}
E. z -> z
F. (double y, double z) -> y + z
23. Given a Stream<T>, which method would you use to obtain an equivalent parallel 
Stream<T>?
A. getParallelStream()
B. parallelStream()
C. parallel()
D. getParallel()
E. parallels()
F. None of the above
24. Rewrite this lambda that takes an int n using a constructor reference:
n -> new ArrayList<>(n)
A. ArrayList::new
B. ArrayList::new()
C. ArrayList::new(n)
D. ArrayList::new[n]
E. None of the above
25. On a DoubleStream, how many of the methods average(), count(), max(), and 
sum() return an OptionalDouble?
A. None
B. One
C. Two
D. Three
E. Four
26. Which of the following is not a functional interface in the java.util.function package? 
(Choose two.)
A. BiPredicate
B. DoubleUnaryOperator
C. IntUnaryOperator
D. ObjectDoubleConsumer
E. ObjectIntConsumer
F. ToLongFunction
27. Five of the following six methods always produce the same result whether they are executed 
on an ordered serial or parallel stream. Which one does not?
A. findAny()
B. findFirst()
C. limit()
D. skip()
E. anyMatch()
F. count()
28. In a stream pipeline, which can return a value other than a Stream?
A. Source
B. Intermediate operation
C. Terminal operation
D. None of the above
29. When working with a Stream<String>, which of these types can be returned from the 
collect() terminal operator by passing arguments to Collectors.groupingBy()?
A. Only Map<Boolean, HashSet<String>>
B. Only Map<Integer, List<String>>
C. Both Map<Boolean, HashSet<String>> and Map<Integer, List<String>>
D. Only List<Integer>
E. Only List<String>
F. Both List<Integer> and List<String>
30. What does the following output?
12: Set<String> set = new HashSet<>();
13: set.add("tire-");
14: List<String> list = new LinkedList<>();
15: Deque<String> queue = new ArrayDeque<>();
16: queue.push("wheel-");
17: Stream.of(set, list, queue)
18:    .flatMap(x -> x)
19:    .forEach(System.out::print);
A. [tire-][wheel-]
B. tire-wheel-
C. [wheel-][tire-]
D. wheel-tire-
E. None of the above.
F. The code does not compile.Working with Streams and Lambda Expressions 197
31. What is the result of executing the following?
var list = new LinkedList<>();
list.add("Archie");
list.add("X-Men");
Stream s = list.stream();  // line w
s.forEach(System.out::println);
s.forEach(System.out::println);
A. The code runs without exception and prints two lines.
B. The code runs without exception and prints four lines.
C. The code does not compile due to line w.
D. The code does not compile due to another line.
E. The code compiles but throws an exception at runtime.
32. What is the output of the following application?
package zoo;
import java.util.function.*;
 
public class TicketTaker {
   private static int AT_CAPACITY = 100;
   public int takeTicket(int currentCount,
      IntUnaryOperator<Integer> counter) {
 
      return counter.applyAsInt(currentCount);
   }
   public static void main(String...theater) {
      final TicketTaker bob = new TicketTaker();
      final int oldCount = 50;
      final int newCount = bob.takeTicket(oldCount,t -> {
         if(t>AT_CAPACITY) {
            throw new RuntimeException(
               "Sorry, max has been reached");
         }
         return t+1;
      });
      System.out.print(newCount);
   }
}
A. 50
B. 51
C. The code does not compile because of the lambda expression.
D. The code does not compile for a different reason.
E. The code compiles but prints an exception at runtime.
33. What are the three requirements for performing a parallel reduction with the collect() 
method, which takes a Collector argument. (Choose three.)
A. The Collector argument is marked concurrent.
B. The elements of the stream implement the Comparable interface.
C. The stream is parallel.
D. The stream is thread-safe.
E. The stream or Collector is marked unordered.
F. The stream is not a primitive stream.
34. What is true about the following code? (Choose two.)
27: public static void main(String[] s) {
28:    Predicate dash = c -> c.startsWith("-");
29:    System.out.println(dash.test("–"));
30:
31:    Consumer clear = x -> System.out.println(x);
32:    clear.accept("pink");
33:
34:    Comparator<String> c = (String s, String t) -> 0;
35:    System.out.println(c.compare("s", "t"));
36: }
A. The code compiles successfully.
B. One line does not compile.
C. Two lines do not compile.
D. Three lines do not compile.
E. If any lines that do not compile are fixed, the output includes pink.
F. If any lines that do not compile are fixed, the output does not include pink.
35. Which functional interface returns a primitive value?
A. BiPredicate
B. CharSupplier
C. LongFunction
D. UnaryOperator
E. TriDoublePredicate
F. None of the aboveWorking with Streams and Lambda Expressions 199
36. Given the following code snippet, which lambda expressions are the best choices for an accu-
mulator? (Choose two.)
import java.util.*;
import java.util.function.*;
public class GoodAccumulator {
   int i = 0;
   List<String> words = new ArrayList<>();
   public void test() {
      BiFunction<Integer,Integer,Integer> x = _____________;
      System.out.print(List.of(1,2,3,4,5)
         .parallelStream()
         .reduce(0,x,(s1, s2) -> s1 + s2));
   } }
A. (a,b) -> (a-b)
B. (a,b) -> 5
C. (a,b) -> i++
D. (a,b) -> {words.add("awesome"); return 0;}
E. (a,b) -> {return 0;}
F. (a,b) -> words.add("awesome")
37. Fill in the blanks so that both methods produce the same output for all inputs.
private static void longer(Optional<Boolean> opt) {
   if (opt.___________())
      System.out.println("run: " + opt.get());
}
private static void shorter(Optional<Boolean> opt) {
   opt.map(x -> "run: " + x)
      ._________(System.out::println);
}
A. isNotNull, isPresent
B. ifPresent, isPresent
C. isPresent, forEach
D. isPresent, ifPresent
E. None of the above
38. Rewrite this lambda using a method reference:
() -> Math.random()
A. Math.random
B. Math::random
C. Math::random()
D. java.lang::Math.random
E. None of the above
39. Which operation can occur more than once in a stream pipeline?
A. Origin
B. Sink
C. Source
D. Intermediate operation
E. Terminal operation
F. None of the above
40. What is true of the following code?
21: var list = List.of('c', 'b', 'a');
22:
23: list.stream()
24:    .sorted()
25:    .findAny()
26:    .ifPresent(System.out::println);
27:
28: System.out.println(list.stream().sorted().findFirst());
A. Both streams are guaranteed to print the single character a.
B. Both streams will print a single character of a, b, or c.
C. Only one stream is guaranteed to print the single character a.
D. Only one stream will print a single character of a, b, or c.
E. The code does not compile.
41. Which functional interface, when entered into the following blank, allows the class 
to compile?
package groceries;
import java.util.*;
import java.util.function.*;
 
public class Market {
   private static void checkPrices(List<Double> prices,
         ____________ scanner) {Working with Streams and Lambda Expressions 201
      prices.forEach(scanner);
   }
   public static void main(String[] right) {
      List<Double> prices = List.of(1.2, 6.5, 3.0);
      checkPrices(prices,
            p -> {
               String result = p<5 ? "Correct" : "Too high";
               System.out.println(result);
            });
   }
}
A. Consumer
B. Consumer<Integer>
C. DoubleConsumer
D. Supplier<Double>
E. None of the above
42. Which of the following is not a valid lambda expression?
A. (Integer j, k) -> 5
B. (p,q) -> p+q
C. (Integer x, Integer y) -> x*y
D. (left,right) -> {return "null";}
E. All of these are valid.
43. What is the output of the following application?
package exercise;
import java.util.*;
public class Concat {
   public String concat1(List<String> values) {
      return values.parallelStream()
            .reduce("a",
                  (x,y)->x+y,
                  String::concat);
   }
   public String concat2(List<String> values) {
      return values.parallelStream()
            .reduce((w,z)->z+w).get();
   }
   public static void main(String... questions) {
      Concat c = new Concat();
      var list = List.of("Cat","Hat");
      String x = c.concat1(list);
      String y = c.concat2(list);
      System.out.print(x+" "+y);
   } }
A. CatHat CatHat
B. aCataHat HatCat
C. The code does not compile because the stream in concat1() returns an Optional.
D. The code does not compile for a different reason.
E. An exception is printed at runtime.
F. None of the above.
44. Which of the following three functional interfaces is not equivalent to the other two?
A. BiFunction<Double,Double,Double>
B. BinaryOperator<Double>
C. DoubleFunction<Double>
D. None of the above. All three are equivalent.
45. Given the following code snippet, what changes should be made for the JVM to correctly 
process this as a concurrent reduction? (Choose two.)
var w = Stream.of("c","a","t")
   .collect(HashSet::new, Set::add, Set::addAll);
System.out.println(w);
A. Replace HashSet with LinkedHashSet.
B. Mark the stream parallel.
C. Remove the second argument of the collect() method.
D. Remove the third argument of the collect() method.
E. Replace HashSet with ConcurrentSkipListSet.
F. Mark the stream unordered.
46. Fill in the blank so this code outputs three lines:
var list = new ArrayList<String>();
list.add("Atlanta");
list.add("Chicago");
list.add("New York");
list.stream()
   .filter( )
   .forEach(System.out::println);Working with Streams and Lambda Expressions 203
A. String::isEmpty
B. ! String::isEmpty
C. String::! isEmpty
D. String::isNotEmpty
E. None of the above
47. What does the following output?
var chars = Stream.generate(() -> 'a');
chars.filter(c -> c < 'b')
     .sorted()
     .findFirst()
     .ifPresent(System.out::print);
A. a
B. The code runs successfully without any output.
C. The code does not complete.
D. The code compiles but throws an exception at runtime.
48. What is the expected output of the following code snippet?
Stream.iterate(1, x -> x + 1)
   .limit(5)
   .skip(2)
   .peek(System.out::print)
   .collect(Collectors.toList())
   .forEach(System.out::print);
A. It does not compile.
B. It throws an exception at runtime.
C. It does not print any output at runtime.
D. 345345
E. 334455
F. The behavior of the code snippet cannot be determined until runtime.
49. What is the output of the following program?
package ai;
import java.util.function.*;
 
public class Android {
   public void wakeUp(Supplier supplier) {             // d1
      supplier.get();
   }
   public static void main(String... electricSheep) {
      Android data = new Android();
      data.wakeUp(() -> System.out.print("Started!")); // d2
   }
}
A. Started!
B. The code does not compile because of line d1 only.
C. The code does not compile because of line d2 only.
D. The code does not compile because of both lines d1 and d2.
50. Given the following code snippet, what statement about the values printed on lines p1 and p2 
is correct?
var db = Collections.synchronizedList(new ArrayList<>());
IntStream.range(1,6)
   .parallel()
   .map(i -> {db.add(i); return i;})
   .forEachOrdered(System.out::print);  // p1
System.out.println();
db.forEach(System.out::print);          // p2
A. They are always the same.
B. They are sometimes the same.
C. They are never the same.
D. The code does not compile.
E. The code will produce a ConcurrentModificationException at runtime.
F. None of the above.
51. Fill in the blanks so this code prints *8.0-8.0*? (Choose two.)
var ints = IntStream.of(6, 10);
var longs = ints.mapToLong(i -> i);
var first = longs.________________;
 
var moreLongs = LongStream.of(6, 10);
var stats = moreLongs.summaryStatistics();
var second = _________________________;
System.out.println("*" + first + "-" + second + "*");
A. averageAsDouble() in the first blank
B. average().getAsDouble() in the first blank
C. getAverage().get() in the first blank
D. stats.average() in the second blankWorking with Streams and Lambda Expressions 205
E. stats.average().get() in the second blank
F. stats.getAverage() in the second blank
52. Starting with DoubleConsumer and going downward, fill in the missing values for 
the table.
Functional Interface # Parameters in Method Signature
DoubleConsumer
IntFunction
LongSupplier
ObjDoubleConsumer
A. 0, 1, 1, 1
B. 0, 1, 0, 2
C. 0, 2, 1, 2
D. 1, 1, 0, 2
E. 1, 1, 1, 1
F. None of the above
53. Starting with DoubleConsumer and going downward, fill in the values for the table. For the 
following choices, assume R is a generic type.
Functional Interface Return Type
DoubleConsumer
IntFunction
LongSupplier
ObjDoubleConsumer
A. double, int, long, R
B. double, R, long, R
C. R, int, long, R
D. R, int, long, void
E. void, int, R, void
F. void, R, long, void
54. What is a possible output of the following application?
package salvage;
import java.util.*;
import java.util.stream.*;
public class Car {
   private String model;
   private int year;
   @Override public String toString() {return model;}
   // Constructor/Getters/Setters Omitted
 
   public static void main(String... make) {
      var cars = new ArrayList<Car>();
      cars.add(new Car("Mustang",1967));
      cars.add(new Car("Thunderbird",1967));
      cars.add(new Car("Escort",1975));
      var map = cars
         .stream()
         .collect(
            Collectors.groupingByConcurrent(Car::getYear));
      System.out.print(map);
   }
}
A. {1975=[Escort], 1967=[ Mustang, Thunderbird]}
B. {Escort=[1975], Thunderbird=[1967], Mustang=[1967]}
C. The code does not compile.
D. The code hangs indefinitely at runtime.
E. The application throws an exception at runtime because the stream is not parallel.
F. None of the above.
55. How many lines does this code output?
var list = new LinkedList<String>();
list.add("Archie");
list.add("X-Men");
list.stream().forEach(System.out.println);
list.stream().forEach(System.out.println);
A. Two.
B. Four.
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
56. Which lambda expression can replace the instance of new BiologyMaterial() in the 
Scientist class and produce the same results under various inputted values?
package university;Working with Streams and Lambda Expressions 207
@FunctionalInterface interface Study {
   abstract int learn(String subject, int duration);
}
 
class BiologyMaterial implements Study {
   @Override public int learn(String subject, int duration) {
      if(subject == null)
         return duration;
      else
         return duration+1;
   }
}
 
public class Scientist {
   public static void main(String[] courses) {
      final Study s = new BiologyMaterial();
      System.out.print(s.learn(courses[0], 
        Integer.parseInt(courses[1])));
   }
}
A. (p,q) -> q==null ? p : p+1
B. (c,d) -> {int d=1; return c!=null ? d+1 : d;}
C. (x,y) -> {return x==null ? y : y+1;}
D. (a,b) -> 1
E. None of the above
57. What is true of the following? (Choose two.)
var s = Stream.of("speak", "bark", "meow", "growl");
BinaryOperator<String> merge = (a, b) -> a;
var map = s.collect(toMap(String::length, k -> k, merge));
System.out.println(map.size() + " " + map.get(4));
A. The output is 2 bark.
B. The output is 2 meow.
C. The output is 4 bark.
D. The output is 4 meow.
E. If "meow" was replaced by a null reference, the output would remain the same.
F. If "meow" was replaced by a null reference, the output would change.
58. Which statement about a source in a Stream is true?
A. The source is mandatory in a stream pipeline.
B. The source is only allowed to return primitives.
C. The source must be retrieved by calling the stream() method.
D. The source must return a finite number of elements.
E. None of the above.
59. Given an IntStream, which method would you use to obtain an equivalent parallel 
Stream<T>?
A. parallel()
B. parallelStream()
C. parallels()
D. getParallel()
E. getParallelStream()
F. None of the above
60. Which can fill in the blank to have the code print true?
var stream = Stream.iterate(1, i -> i+1);
var b = stream.________(i -> i > 5);
System.out.println(b);
A. anyMatch
B. allMatch
C. noneMatch
D. None of the above
61. Which of the following fills in the blank so that the code outputs one line but uses a 
poor practice?
import java.util.*;
 
public class Cheater {
   int count = 0;
   public void sneak(Collection<String> coll) {
      coll.stream()._____________________________;
   }
 
   public static void main(String[] args) {
      var c = new Cheater();
      c.sneak(Arrays.asList("weasel"));
  }
}Working with Streams and Lambda Expressions 209
A. peek(System.out::println)
B. peek(System.out::println).findFirst()
C. peek(r -> System.out.println(r)).findFirst()
D. peek(r -> {count++; System.out.println(r); }).findFirst()
E. None of the above compile.
F. None of these are bad practice.
62. What is the output of the following application?
package nesting;
import java.util.function.*;
 
public class Doll {
   private int layer;
   public Doll(int layer) {
      super();
      this.layer = layer;
   }
 
   public static void open(
      UnaryOperator<Doll> task, Doll doll) {
 
      while((doll = task.accept(doll)) != null) {
         System.out.print("X");
      }
   }
 
   public static void main(String[] wood) {
      open(s -> {
         if(s.layer<=0) return null;
         else return new Doll(s.layer--);
      }, new Doll(5));
   }
}
A. XXXXX
B. The code does not compile because of the lambda expression.
C. The code does not compile for a different reason.
D. The code compiles, but produces an infinite loop at runtime.
E. The code compiles, but throws an exception at runtime.
63. What is the expected output of the following code snippet?
Random r = new Random();
Stream.generate(r::nextDouble)
   .skip(2)
   .limit(4)
   .sorted()
   .peek(System.out::println)
   .forEach(System.out::println);
A. It does not compile.
B. It throws an exception at runtime.
C. It does not print any output at runtime.
D. It prints four numbers twice each.
E. It can print up to eight distinct numbers.
F. The behavior of the code snippet cannot be determined until runtime.
64. Which statements about the findAny() method applied to a stream are correct? 
(Choose three.)
A. It always returns the first element on an ordered serial stream.
B. It may return any element on an ordered serial stream.
C. It always returns the first element on an unordered stream.
D. It may return any element on an unordered stream.
E. It always returns the first element on an ordered parallel stream.
F. It may return any element on an ordered parallel stream.
65. Which functional interface has a get() method?
A. Consumer
B. Function
C. Supplier
D. UnaryOperator
E. None of the above
66. Why can’t String::charAt be used as a method reference within a Function?
A. Method references can only be used on static methods.
B. The charAt() method takes an int rather than Integer parameter.
C. The method reference is not compatible with Function.
D. The method reference syntax is illegal.
E. There is no charAt() method in the String class.
F. None of the above.Working with Streams and Lambda Expressions 211
67. Given the following independent stream operations, which statements are correct? 
(Choose three.)
List.of(2,4,6,8)
   .parallel()
   .parallelStream()
   .forEach(System.out::print);
 
List.of(2,4,6,8)
   .parallelStream()
   .parallel()
   .forEach(System.out::print);
 
List.of(2,4,6,8)
   .parallelStream()
   .parallel().parallel().parallel()
   .forEach(System.out::print);
A. The first stream operation compiles.
B. The second stream operation compiles.
C. The third stream operation compiles.
D. None of the stream operations that compile produce an exception at runtime.
E. At least one of the stream operations that compiles produces at exception at runtime.
F. The output of the stream operations that compile is consistent between executions.
68. Which method reference can replace the lambda on the first line so the output is the same?
BiPredicate<String, String> pred = (a, b) -> a.contains(b);
System.out.println(pred.test("fish", "is"));
A. a::contains(b)
B. a::contains
C. String::contains(b)
D. String::contains
E. The supplied code does not compile.
F. None of the above.
69. What is the result of the following?
import static java.util.stream.Collectors.*;
import java.util.stream.Stream;
 
class Ballot {
   private String name;
   private int judgeNumber;
   private int score;
 
   public Ballot(String name, int judgeNumber, int score) {
      this.name = name;
      this.judgeNumber = judgeNumber;
      this.score = score;
   }
   // all getters and setters
}
 
public class Speaking {
   public static void main(String[] args) {
      Stream<Ballot> ballots = Stream.of(
         new Ballot("Mario", 1, 10),
         new Ballot("Christina", 1, 8),
         new Ballot("Mario", 2, 9),
         new Ballot("Christina", 2, 8)
      );
 
      var scores = ballots.collect(
         groupingBy(Ballot::getName, 
         summingInt(Ballot::getScore)));
      System.out.println(scores.get("Mario"));
  }
}
A. 2
B. 18
C. 19
D. 110
E. The code does not compile.
70. Which of the following can fill in the blank to have the code print 44?
var stream = Stream.of("base", "ball");
stream. (s -> s.length()).forEach(System.out::print);
A. Only map
B. Only mapToInt
C. Only mapToObjectWorking with Streams and Lambda Expressions 213
D. Both map and mapToInt
E. Both map and mapToObject
F. map, mapToInt, and mapToObject
71. What does the following do? (Choose two.)
public class Shoot {
   interface Target {
      boolean needToAim(double angle);
   }
   static void prepare(double angle, Target t) {
      boolean ready = t.needToAim(angle);  // k1
      System.out.println(ready);
   }
   public static void main(String[] args) {
      prepare(45, d -> d > 5 || d < -5);   // k2
   }
}
A. If any compiler errors are fixed, it prints true.
B. If any compiler errors are fixed, it prints false.
C. It compiles without issue.
D. It doesn’t compile due to line k1.
E. It doesn’t compile due to line k2.
72. Which statements about the following code are correct?
var data = List.of(1,2,3);
int f = data.parallelStream()
   .reduce(1, (a,b) -> a+b, (a,b) -> a+b);
System.out.println(f);
A. It consistently prints 6.
B. It consistently prints 7.
C. It consistently prints another value.
D. It does not consistently print the same value on every execution.
E. It compiles but throws an exception at runtime.
F. None of the above.
73. What is the result of the following?
11: var s1 = IntStream.empty();
12: System.out.print(s1.average().getAsDouble());
13:
14: var s2 = IntStream.of(-1,0, 1);
15: System.out.print(s2.average().getAsDouble());
A. Both statements print 0.
B. Both statements print 0.0.
C. The statements print different values.
D. The code does not compile.
E. The code compiles but throws an exception at runtime.
74. Which lambdas can replace the method references in this code? (Choose two.)
Stream.of("fish", "mammal", "amphibian")
   .map(String::length)
   .findFirst()
   .ifPresent(System.out::println);
A. x.length()
B. x -> x.length()
C. x -> x::length
D. System.out.println(s)
E. s -> System.out.println(s)
F. s -> System.out::println
75. What collector can turn the stream at left to the Map at right?
Sree
Ken
Kumar
Ye
Dan
true Sree Kumar
Ken Ye Dan
false
A. Only grouping()
B. Only groupingBy()
C. Only partitioning()
D. Only partitioningBy()
E. Both grouping() and partitioning()
F. Both groupingBy() and partitioningBy()
76. Which expression is compatible with the IntSupplier functional interface?
A. () -> 1<10 ? "3" : 4
B. () -> {return 1/0;}
C. () -> return 4
D. System.out::print
E. None of the aboveWorking with Streams and Lambda Expressions 215
77. What is the output of the following application?
package beach;
import java.util.function.*;
 
class Tourist {
   public Tourist(double distance) {
      this.distance = distance;
   }
   public double distance;
}
public class Lifeguard {
   private void saveLife(Predicate<Tourist> canSave, 
      Tourist tourist) {
      
     System.out.print(canSave.test(tourist) 
        ? "Saved" : "Too far");
   }
   public final static void main(String... sand) {
      new Lifeguard().saveLife(s -> s.distance<4, 
         new Tourist(2));
   }
}
A. Saved
B. Too far
C. The code does not compile because of the main() method.
D. The code does not compile because of the saveLife() method.
E. None of the above.
78. Given a LinkedList<E>, which method would you call to obtain a parallel stream that uses it 
as a data source?
A. getParallel()
B. parallels()
C. getParallelStream()
D. parallel()
E. parallelStream()
F. None of the above
79. How many lines does the following code output?
import java.util.*;
class Blankie {
   String color;
   String getColor() {
      return color;
   }
}
public class PreSchool {
   public static void main(String[] args) {
      var b1 = new Blankie();
      var b2 = new Blankie();
      b1.color = "pink";
      List<Blankie> list = Arrays.asList(b1, b2);
      list.stream()
         .filter(Blankie::getColor)       // line x
         .forEach(System.out::println);   // line y
   }
}
A. One.
B. Two.
C. The code does not compile due to line x.
D. The code does not compile due to line y.
E. The code compiles but throws an exception at runtime.
80. Which are true statements? (Choose two.)
A. A source cannot return an infinite stream.
B. A source may return an infinite stream.
C. A source must return an infinite stream.
D. An intermediate operation cannot return an infinite stream.
E. An intermediate operation may return an infinite stream.
F. An intermediate operation must return an infinite stream.
81. How many of these lines have compiler errors?
14: Consumer<Object> c1 = ArrayList::new;
15: Consumer<Object> c2 = String::new;
16: Consumer<Object> c3 = System.out::println;
17: var c4 = ArrayList::new;
18: var c5 = String::new;
19: var c6 = System.out::println;
A. One.
B. Two.Working with Streams and Lambda Expressions 217
C. Three.
D. Four.
E. Five.
F. The code compiles as is.
82. What is the output of the following program?
var p = List.of(new StringBuilder("hello"),
   new StringBuilder("goodbye"));
var q = p.parallelStream().reduce(0,
   (w,x) -> w.length() + x.length(),
   (y,z) -> y.length() + z.length());
System.out.print(q);
A. 0
B. 12
C. 14
D. One line does not compile.
E. Two lines do not compile.
F. None of the above.
83. What is true of this code? (Choose two.)
var bools = Stream.of(Boolean.TRUE, null);
var map = bools
   .limit(1)    // line k
   .collect(partitioningBy(b -> b));
System.out.println(map);
A. It outputs {true=[true]}.
B. It outputs {false=null, true=[true]}.
C. It outputs {false=[], true=[true]}.
D. It outputs {false=[null], true=[true]}.
E. The output is the same if line k is removed.
F. The output is different after line k is removed.
84. What is the output of the following code snippet?
var apples = List.of(1, 2);
var oranges = List.of(1, 2);
final var count = Stream.of(apples, oranges)
   .flatMapToInt(List::stream)
   .peek(System.out::print)
   .count();
System.out.print(count);
A. 12124
B. 11224
C. 122
D. The code does not compile.
E. The code compiles but does not output anything at runtime.
F. None of the above.
85. Which functional interface, when filled into the blank, prevents the class from compiling?
package morning;
import java.util.function.*;
 
public class Sun {
   public static void dawn(  sunrise) {}
   public void main(String... rays) {
      dawn(s -> s+1);
   }
}
A. DoubleUnaryOperator
B. Function<String,String>
C. IntToLongFunction
D. UnaryOperator
E. All of the above allow the code to compile.
86. Which statements about applying forEachOrdered() to a parallel ordered stream instead of 
using forEach() are correct? (Choose two.)
A. The operation will likely be faster.
B. The operation will likely be slower.
C. There is no expected change in performance.
D. It forces some stream operations in the pipeline to be performed in a serial manner.
E. It forces all stream operations in the pipeline to be performed in a serial manner.
F. All stream operations will continue to be performed in a parallel manner.
87. What is the true of the following? (Choose two.)
IntegerSummaryStatistics stats = Stream.of(20, 40)
   .mapToInt(i -> i)
   .summaryStatistics();
long total = stats.getSum();Working with Streams and Lambda Expressions 219
long count = stats.getCount();
long max = stats.getMax();
System.out.println(total + "-" + count + "-" + max);
A. The output is 60-0-40
B. The output is 60-2-40
C. The code does not compile for one reason.
D. The code does not compile for two reasons.
E. Correct code could be written without summary statistics using a single stream pipeline.
F. Correct code could not be written without summary statics using a single stream 
pipeline.
88. What is a difference between lambdas and method references?
A. Only one can take a method parameter.
B. Only one can reference an effectively final local variable.
C. Only one can make a method call where the method parameter is the hard-coded 
number 3.
D. Only one can use deferred execution.
E. None of the above.
89. Following the generate() method, which of the four method calls in this code can be removed 
and have the method still compile and run without error?
public static void main(String[] args) {
   Stream.generate(() -> 'a')
      .limit(5)
      .filter(c -> c < 'b')
      .sorted()
      .findFirst()
      .ifPresent(System.out::print);
}
A. filter()
B. sorted()
C. filter() and sorted()
D. filter() and ifPresent()
E. filter(), sorted(), and ifPresent()
F. filter(), sorted(), findFirst(), and ifPresent()
90. What is true of the following? (Choose three.)
import java.util.*;
public class Catch {
   public static void main(String[] args) {
      Optional opt = Optional.empty();
      var message = "";
      try {
         message = (opt);
      } catch (IllegalArgumentException e) {
         System.out.print("Caught it");
      }
      System.out.print(message);
   }
   private static String x(Optional<String> opt) {
      return opt.orElseThrow();
   }
   private static String y(Optional<String> opt) {
      return opt.orElseThrow(IllegalArgumentException::new);
   }
   private static String z(Optional<String> opt) {
      return opt.orElse("Caught it");
   }
}
A. If filling in the blank with method x, the code outputs Caught it.
B. If filling in the blank with method x, the code prints a stack trace.
C. If filling in the blank with method y, the code outputs Caught it.
D. If filling in the blank with method y, the code prints a stack trace.
E. If filling in the blank with method z, the code outputs Caught it.
F. If filling in the blank with method z, the code prints a stack trace.
91. Which statement is not true of Predicate?
A. A boolean is returned from the method it declares.
B. It is an interface.
C. The method it declares accepts two parameters.
D. The method it declares is named test.
E. All of the above are true.
92. Which functional interface does not have the correct number of generic arguments? 
(Choose two.)
A. BiFunction<T,U,R>
B. BinaryOperator<T, U>
C. DoubleFunction<T,R>
D. ToDoubleFunction<T>
E. ToIntBiFunction<T,U>Working with Streams and Lambda Expressions 221
93. How many changes need to be made to the following stream operation to execute a parallel 
reduction?
var r = new Random();
var data = Stream.generate(() -> String.valueOf(r.nextInt()))
   .limit(50_000_000)
   .collect(Collectors.toSet());
var map = data.stream()
   .collect(Collectors.groupingBy(String::length));
A. None, it is already a parallel reduction.
B. One.
C. Two.
D. Three.
E. The code does not compile.
F. None of the above.
94. What is the output of this code?
Stream.of("one", "two", "bloat")
   .limit(1)
   .map(String::toUpperCase)       // line x
   .sorted()
   .forEach(System.out::println);
A. bloat
B. BLOAT
C. one
D. ONE
E. The code does not compile due to line x.
F. None of the above.
95. Which lambda expression can be passed to the magic() method?
package show;
import java.util.function.*;
 
public class Magician {
   public void magic(BinaryOperator<Long> lambda) {
      lambda.apply(3L, 7L);
   }
}
A. (a) -> a
B. (b,w) -> (long)w.intValue()
C. (c,m) -> {long c=4; return c+m;}
D. (Integer d, Integer r) -> (Long)r+d
E. None of the above
96. Fill in the blank: ______________ is the only functional interface that does not involve  
double, int, or long.
A. BooleanSupplier
B. CharPredicate
C. FloatUnaryOperator
D. ShortConsumer
E. None of the above
97. Which statements about parallel streams are correct? (Choose two.)
A. A parallel stream is always faster than a serial stream.
B. The JVM will automatically apply a parallel stream operation to an arbitrary stream in 
order to boost performance.
C. A parallel stream synchronizes its operations so that they are atomic.
D. All streams can be converted to a parallel stream.
E. If a stream uses a reduction method, the result will be the same regardless of whether the 
stream is parallel or serial.
F. Sometimes, a parallel stream will still operate in a single-threaded manner.
98. What is the output of the following?
var s = Stream.of("over the river",
    "through the woods",
    "to grandmother's house we go");
 
s.filter(n -> n.startsWith("t"))
   .sorted(Comparator::reverseOrder)
   .findFirst()
   .ifPresent(System.out::println);
A. over the river
B. through the woods
C. to grandmother's house we go
D. None of the above
99. Which can fill in the blank to have the code print the single digit 9?
var stream = LongStream.of(9);
stream.____________(p -> p).forEach(System.out::print);
A. Only mapToDouble
B. Only mapToIntWorking with Streams and Lambda Expressions 223
C. Only mapToLong
D. Both mapToDouble and mapToInt
E. mapToDouble, mapToInt, and mapToLong
F. None of the above
100. What is the output of the following application?
package savings;
import java.util.function.*;
 
public class Bank {
   private int savingsInCents;
   private static class ConvertToCents {
      static DoubleToIntFunction f = p -> p*100;
   }
   public static void main(String... currency) {
      Bank creditUnion = new Bank();
      creditUnion.savingsInCents = 100;
      double deposit = 1.5;
 
      creditUnion.savingsInCents += 
         ConvertToCents.f.applyAsInt(deposit);  // j1
      System.out.print(creditUnion.savingsInCents);
   }
}
A. 100
B. 200
C. 250
D. The code does not compile because of line j1.
E. None of the above.
101. Which statements about stateful lambda expressions are correct? (Choose two.)
A. Stateful lambda expressions should be avoided on both serial and parallel streams.
B. Stateful lambda expressions should be avoided on only serial streams.
C. Stateful lambda expressions should be avoided on only parallel streams.
D. One way to avoid modifying a List with a stateful lambda expression is to use a 
concurrent collection.
E. One way to avoid modifying a List with a stateful lambda expression is to use a 
collector that outputs a List.
F. One way to avoid modifying a List with a stateful lambda expression is to use a 
synchronized list.
102. Which method reference can replace the lambda on the second line so the output is the 
same?
var s = "fish";
Predicate<String> pred = (a) -> s.contains(a);
System.out.println(pred.test("fish", "is"));
A. a::contains(b)
B. a::contains
C. String::contains(b)
D. String::contains
E. The supplied code does not compile.
F. None of the above.
103. What is the best example of lazy evaluation?
A. The pipeline can execute before seeing all the data.
B. The pipeline does not begin until the terminal operation is executed.
C. The pipeline executes all operations as quickly as possible.
D. The pipeline loses data.
E. The pipeline takes a nap.
104. Which method can be applied to an existing Stream<T> to return a stream with a different 
generic type?
A. distinct()
B. iterate()
C. peek()
D. sorted()
E. filter()
F. None of the above
105. The ______________ functional interface has an apply() method, while the 
______________ functional interface has an applyAsDouble() method. (Choose two.)
A. BiConsumer
B. BiFunction
C. BiPredicate
D. DoubleConsumer
E. DoublePredicate
F. DoubleUnaryOperatorWorking with Streams and Lambda Expressions 225
106. Given the following code snippet, what statement about the values printed on lines q1 and 
q2 is correct?
var mitchsWorkout = new CopyOnWriteArrayList<Integer>();
List.of(1,5,7,9).stream().parallel()
   .forEach(mitchsWorkout::add);
mitchsWorkout
   .forEachOrdered(System.out::print);  // q1
List.of(1,5,7,9).stream().parallel()
   .forEachOrdered(System.out::print);  // q2
A. They are always the same.
B. They are sometimes the same.
C. They are never the same.
D. The code does not compile.
E. The code will produce a ConcurrentModificationException at runtime.
F. None of the above.
107. Which of the following can fill in the blank to have the code print out *?
Stream.generate(() -> "*")
   .limit(3)
   .sorted( )
   .distinct()
   .forEach(System.out::println);
A. (s,t) -> s.length() - t.length()
B. String::isEmpty
C. Both of these will produce the desired output.
D. Neither of these will allow the code to compile.
E. The code does not complete regardless of what goes in the blank.
108. Which statement about functional interfaces and lambda expressions is not true?
A. A lambda expression may be compatible with multiple functional interfaces.
B. A lambda expression must be assigned to a functional interface when it is declared.
C. A method can return a lambda expression in the form of a functional interface  
instance.
D. The compiler uses deferred execution to skip determining whether a lambda expression 
compiles or not.
E. All of these are true.
109. Which can fill in the blank to have the code print true?
var stream = Stream.iterate(1, i -> i);
var b = stream. (i -> i > 5);
System.out.println(b);
A. anyMatch
B. allMatch
C. noneMatch
D. None of the above
110. Given the following class, how many lines contain compilation errors?
1:  package showtimes;
2:  import java.util.*;
3:  import java.util.function.*;
4:  public class FindMovie {
5:     private Function<String> printer;
6:     protected FindMovie() {
7:        printer = s -> {System.out.println(s); return s;}
8:     }
9:     void printMovies(List<String> movies) {
10:       movies.forEach(printer);
11:    }
12:    public static void main(String[] screen) {
13:       List<String> movies = new ArrayList<>();
14:       movies.add("Stream 3");
15:       movies.add("Lord of the Recursion");
16:       movies.add("Silence of the Lambdas");
17:       new FindMovie().printMovies(movies);
18:    }
19: }
A. None. The code compiles as is.
B. One.
C. Two.
D. Three.
E. Four.
F. Five.Working with Streams and Lambda Expressions 227
111. Which statements about the findFirst() method applied to a stream are correct? 
(Choose three.)
A. It always returns the first element on an ordered serial stream.
B. It may return any element on an ordered serial stream.
C. It always returns the first element on an unordered stream.
D. It may return any element on an unordered stream.
E. It always returns the first element on an ordered parallel stream.
F. It may return any element on an ordered parallel stream.
112. Which method reference can replace the lambda in the first line of the main() method to 
produce the same output?
interface Marsupial {
   void carryInPouch(int size);
}
public class Opossum {
   public static void main(String[] args) {
      Marsupial mar = x -> System.out.println("Carrying " + x);
 
      mar.carryInPouch(1);
   }
}
A. System:out:println
B. System::out:println
C. System::out::println
D. System.out::println
E. None of the above
113. What is true of the following code?
21: Stream<Integer> s1 = Stream.of(8, 2);
22: Stream<Integer> s2 = Stream.of(10, 20);
23: s2 = s1.filter(n -> n > 4);
24: s1 = s2.filter(n -> n < 1);
25: System.out.println(s1.count());
26: System.out.println(s2.count());
A. The code runs without error and prints 0.
B. The code runs without error and prints 1.
C. The code throws an exception on line 23.
D. The code throws an exception on line 24.
E. The code throws an exception on line 25.
F. The code throws an exception on line 26.
114. Which changes can be independently made to this code and have it still compile? (Choose 
three.)
Predicate<StringBuilder> p = 
   (StringBuilder b) -> {return true;};
A. Change StringBuilder b to var b.
B. Change StringBuilder b to b.
C. Remove StringBuilder b.
D. Remove ->.
E. Remove { and ;}.
F. Remove { return and ;}.
115. What does this code output?
var babies = Arrays.asList("chick", "cygnet", "duckling");
babies.replaceAll(x -> { var newValue = "baby";
   return newValue; });
System.out.println(newValue);
A. baby
B. chick
C. cygnet
D. duckling
E. The code does not compile.
116. Which lambda expression cannot be assigned to a DoubleToLongFunction functional 
interface?
A. a -> null==null ? 1 : 2L
B. e -> (int)(10.0*e)
C. (double m) -> {long p = (long)m; return p;}
D. (Double s) -> s.longValue()
E. All of these can be assigned.
117. Given the following code snippet, which values of x will allow the call divide(x) to com-
pile and provide predictable results at runtime? (Choose two.)
import java.util.stream.*;
public class Divide {
   static float divide(Stream<Float> s) {
      return s.reduce(1.0f, (a,b) -> a/b, (a,b) -> a/b);
   } }
A. Set.of(1f,2f,3f,4f).stream()
B. List.of(1f,2f,3f,4f).stream()Working with Streams and Lambda Expressions 229
C. List.of(1f,2f,3f,4f).parallel()
D. List.of(1f).parallelStream()
E. List.of(1f,2f,3f,4f).parallelStream()
F. List.of(1f).parallel()
118. Which of the following produces different output than the others?
A. 
Stream.of("eeny", "meeny", "miny", "moe")
   .collect(partitioningBy(x -> x.charAt(0) == 'e'))
   .get(false)
   .stream()
   .collect(groupingBy(String::length))
   .get(4)
   .forEach(System.out::println);
B. 
Stream.of("eeny", "meeny", "miny", "moe")
   .filter(x -> x.charAt(0) != 'e')
   .collect(groupingBy(String::length))
   .get(4)
   .forEach(System.out::println);
C. 
Stream.of("eeny", "meeny", "miny", "moe")
   .collect(groupingBy(x -> x.charAt(0) == 'e'))
   .get(false)
   .stream()
   .collect(partitioningBy(String::length))
   .get(4)
   .forEach(System.out::println);
D. 
Stream.of("eeny", "meeny", "miny", "moe")
   .collect(groupingBy(x -> x.charAt(0) == 'e'))
   .get(false)
   .stream()
   .collect(groupingBy(String::length))
   .get(4)
   .forEach(System.out::println);
E. 
Stream.of("eeny", "meeny", "miny", "moe")
   .collect(partitioningBy(x -> x.charAt(0) == 'e'))
   .get(false)
   .stream()
   .collect(partitioningBy(x -> x.length() == 4))
   .get(true)
   .forEach(System.out::println);
F. They all produce the same output.
119. Given an IntStream, which method would you use to obtain an equivalent parallel 
IntStream?
A. parallelStream()
B. parallels()
C. getParallelStream()
D. parallel()
E. getParallel()
F. None of the above
120. Which statement is true?
A. All lambdas can be converted to method references, and vice versa.
B. All lambdas can be converted to method references, but not vice versa.
C. All method references can be converted to lambdas, but not vice versa.
D. None of the above.
121. The following diagram shows input arguments being used in three functional interface 
methods of unknown type. Which three functional interfaces, inserted in order from left to 
right, could be used to complete the diagram?
???
A. 
DoubleBinaryOperator
ToDoubleBiFunction<Integer,Double>
UnaryOperator<Integer>
B. 
BinaryOperator<Double>
BiFunction<Integer,Integer,Double>
UnaryOperator<Integer>
C. 
Function<Double,Integer>
BiFunction<Integer,Integer,Double>
DoubleToIntFunction
D. 
BiFunction<Integer,Double,Integer>
BinaryOperator<Integer>
IntUnaryOperator
E. None of the above
122. Which of the following is not a functional interface in the java.util.function 
package? (Choose two.)
A. DoublePredicate
B. LongUnaryOperator
C. ShortSupplier
D. ToIntBiFunction
E. ToStringOperator
123. What is the output of the following application?
package tps;
import java.util.*;
 
class Boss {
   private String name;
   public Boss(String name) {
      this.name = name;
   }
   public String getName() {return name.toUpperCase();}
   public String toString() {return getName();}
}
public class Initech {
   public static void main(String[] reports) {
      final List<Boss> bosses = new ArrayList(8);
      bosses.add(new Boss("Jenny"));
      bosses.add(new Boss("Ted"));
      bosses.add(new Boss("Grace"));
      bosses.removeIf(s -> s.equalsIgnoreCase("ted"));
      System.out.print(bosses);
   }
}
A. [JENNY, GRACE]
B. [ted]
C. [tps.Boss@4218224c, tps.Boss@815f19a]
D. The code does not compile because of the lambda expression.
E. The code does not compile for a different reason.
124. Which lambda can implement this functional interface?
public interface Serval {
   static void printName(String name) {}
   boolean cat(String name) { return true; }
}
A. () -> System.out.println()
B. n -> System.out.println(n)
C. () -> true
D. n -> true
E. None of the above
125. How many of these lines compile?
17: Comparator<String> c1 = s -> false;
18: Comparator<String, String> c2 = (s1, s2) -> false;
19: Predicate<String> p1 = String s -> false;
20: Predicate<String> p2 = (String s) -> false;
21: Supplier<String> s1 = String s -> false;
22: Supplier<String> s2 = (String s) -> false;
A. One
B. Two
C. Three
D. Four
E. Five
F. Six
126. Which method is not available on the IntSummaryStatistics class?
A. getCountAsLong()
B. getMax()
C. toString()
D. None of these methods is available.
E. All of these methods are available.Working with Streams and Lambda Expressions 233
127. Which functional interface, when filled into the blank, allows the class to compile?
package sleep;
import java.util.function.*;
 
class Sheep {}
public class Dream {
   int MAX_SHEEP = 10;
   int sheepCount;
   public void countSheep(  backToSleep) {
      while(sheepCount<MAX_SHEEP) {
         // TODO: Apply lambda
         sheepCount++;
      }
   }
   public static void main(String[] dark) {
      new Dream().countSheep(System.out::println);
   }
}
A. Consumer<Sheep>
B. Function<Sheep,void>
C. Supplier<Sheep>
D. UnaryOperator<Sheep>
E. None of the above
128. Given an instance of Stream s and Collection c, which of the following are valid 
ways of creating a parallel stream? (Choose three.)
A. c.parallel()
B. c.parallel().parallelStream()
C. c.parallelStream()
D. s.parallelStream()
E. c.parallelStream().parallel()
F. s.parallel()
129. What is true of the following code? (Choose two.)
3:  public static void main(String[] args) {
4:     var prefix = "r";
5:     var pets = List.of("rabbit", "snake", "turtle");
6:
7:     // prefix = "t";
8:     pets.forEach(p -> { 
9:        if (p.startsWith(prefix)) System.out.println(p); } );
10: }
A. As written, the code prints one line.
B. As written, the code prints two lines.
C. As written the code does not compile.
D. If line 7 is uncommented, the code prints one line.
E. If line 7 is uncommented, the code prints two lines.
F. If line 7 is uncommented, the code does not compile.
130. What is the output of the following code snippet?
10: var pears = List.of(1, 2, 3, 4, 5, 6);
11: final var sum = pears.stream()
12:    .skip(1)
13:    .limit(3)
14:    .flatMapToInt(s -> IntStream.of(s))
15:    .skip(1)
16:    .boxed()
17:    .mapToDouble(s -> s)
18:    .sum();
19: System.out.print(sum);
A. 6
B. 7.0
C. 6.0
D. 7
E. Exactly one line contains a compiler error.
F. More than one line contains a compiler error.
131. What is the minimum number of intermediate operations that can fill in each box [M, N, 
O, P] to have the pipeline complete given any intermediate operation?
Source Intermediate Operation Terminal Operation
Finite Stream Source Box M count()
Finite Stream Source Box N findFirst()
Infinite Stream Source Box O count()
Infinite Stream Source Box P findFirst()Working with Streams and Lambda Expressions 235
A. [0, 0, 0, 1]
B. [0, 0, 1, 0]
C. [0, 0, 1, 1]
D. [1, 1, 0, 1]
E. [1, 1 ,1, 0]
F. [1, 1, 1, 1]
132. Given the table in the previous question, how many of the boxes in the Intermediate  
Operation column will have the pipeline complete regardless of which intermediate  
operation is placed in the box?
A. Zero
B. One
C. Two
D. Three
E. Four
133. Which of the following declares a Comparator where all objects are treated as equal?
A. Comparator<Character> comp = (c1) -> 0;
B. Comparator<Character> comp = (c1) -> {0};
C. Comparator<Character> comp = (c1, c2) -> 0;
D. Comparator<Character> comp = (c1, c2) -> {0};
E. None of the above
134. Which can fill in the blank so this code outputs true?
import java.util.function.*;
import java.util.stream.*;
 
public class HideAndSeek {
   public static void main(String[] args) {
      var hide = Stream.of(true, false, true);
      var found = hide.filter(b -> b).________();
      System.out.println(found);
   }
}
A. Only anyMatch
B. Only allMatch
C. Both anyMatch and allMatch
D. Only noneMatch
E. The code does not compile with any of these options.
135. Which method reference can replace the lambda on the second line so the output is the 
same?
var s = "fish";
Predicate<String> pred = (a) -> s.contains(a);
System.out.println(pred.test("is"));
A. s::contains(a)
B. s::contains
C. String::contains(a)
D. String::contains
E. The supplied code does not compile.
F. None of the above.
136. How many of these lines compile?
Predicate<String> pred1 = (final String s) -> s.isEmpty();
Predicate<String> pred2 = (final s) -> s.isEmpty();
Predicate<String> pred3 = (final var s) -> s.isEmpty();
Predicate<String> pred4 = (String s) -> s.isEmpty();
Predicate<String> pred5 = (var s) -> s.isEmpty();
A. 0
B. 1
C. 2
D. 3
E. 4
F. 5
137. What is the output of the following application?
package pet;
import java.util.*;
import java.util.function.*;
 
public class DogSearch {
   void reduceList(List<String> names,
      Predicate<String> tester) {
 
      names.removeIf(tester);
   }
   public static void main(String[] treats) {
      int MAX_LENGTH = 2;
      DogSearch search = new DogSearch();
      List<String> names = new ArrayList<>();Working with Streams and Lambda Expressions 237
      names.add("Lassie");
      names.add("Benji");
      names.add("Brian");
      search.reduceList(names, d -> d.length()>MAX_LENGTH);
      System.out.print(names.size());
   }
}
A. 0
B. 2
C. 3
D. The code does not compile because of the lambda expression.
E. The code does not compile for a different reason.
138. What is the output of the following program?
var p = List.of(1,3,5);
var q = p.parallelStream().reduce(0f,
   (w,x) -> w.floatValue() + x.floatValue(),
   (y,z) -> y.floatValue() + z.floatValue());
System.out.println(q);
A. 0.0
B. 9.0
C. 11.0
D. One line does not compile.
E. Two lines do not compile.
F. None of the above.
139. What does the following output?
Set<String> set = new HashSet<>();
set.add("tire-");
List<String> list = new LinkedList<>();
Deque<String> queue = new ArrayDeque<>();
queue.push("wheel-");
Stream.of(set, list, queue)
   .flatMap(x -> x.stream())
   .forEach(System.out::print);
A. [tire-][wheel-]
B. tire-wheel-
C. None of the above.
D. The code does not compile.
140. How many lines does this code output?
1:  import java.util.*;
2:
3:  public class PrintNegative {
4:     public static void main(String[] args) {
5:        List<String> list = new ArrayList<>();
6:        list.add("-5");
7:        list.add("0");
8:        list.add("5");
9:        list.removeIf(e -> e < 0);
10:       list.forEach(x -> System.out.println(x));
11:    }
12: }
A. One.
B. Two.
C. Three.
D. None. The code does not compile.
E. None. The code throws an exception at runtime.
141. How many of the following lines compile?
8:  IntFunction<Integer> f1 =(Integer f) -> f;
9:  IntFunction<Integer> f2 = (v) -> null;
10: IntFunction<Integer> f3 = s -> s;
11: IntFunction<Integer> f4 = () -> 5;
12: IntFunction<Integer> f5 = () -> Integer.valueOf(9);
A. None
B. One
C. Two
D. Three
E. Four
F. Five
142. Which statements about using a parallel stream instead of a serial stream are correct? 
(Choose three.)
A. The number of threads used is guaranteed to be higher.
B. It requires a stateful lambda expression.
C. The stream operation may execute faster.
D. The stream operation may execute slower.Working with Streams and Lambda Expressions 239
E. The result of the stream operation will be the same.
F. The result of the stream operation may change.
143. Which is a possible output of the following code snippet?
var landmarks = Set.of("Eiffel Tower", "Statue of Liberty",
   "Stonehenge", "Mount Fuji");
var result = landmarks
   .stream()
   .collect(Collectors.partitioningBy(b -> b.contains(" ")))
   .entrySet()
   .stream()
   .flatMap(t -> t.getValue().stream())
   .collect(Collectors.groupingBy(s -> !s.startsWith("S")));
System.out.println(result);
A. {false=[Stonehenge, Statue of Liberty], true=[Eiffel Tower, 
Mount Fuji]}
B. {false=[Stonehenge], true=[Mount Fuji, Eiffel Tower, Statue of 
Liberty]}
C. {false=[Mount Fuji, Stonehenge], true=[Eiffel Tower, Statue of 
Liberty]}
D. Exactly one line contains a compiler error.
E. More than one line contains a compiler error.
F. None of the above.
144. Which can independently fill in the blank to output No dessert today?
import java.util.*;
public class Dessert {
  public static void main(String[] yum) {
    eatDessert(Optional.of("Cupcake"));
  }
  private static void eatDessert(Optional<String> opt) {
     System.out.println(opt._____________);
  }
}
A. get("No dessert today")
B. orElse("No dessert today")
C. orElseGet(() -> "No dessert today")
D. orElseThrow()
E. None of the above
145. What is the output of this code?
List.of("one", "two", "bloat")
   .limit(1)
   .map(String::toUpperCase)       // line x
   .sorted()
   .forEach(System.out::println);
A. bloat
B. BLOAT
C. one
D. ONE
E. The code does not compile due to line x.
F. None of the above.
146. Which is one of the lines output by this code?
10: var list = new ArrayList<Integer>();
11: list.add(10);
12: list.add(9);
13: list.add(8);
14:
15: var num = 9;
16: list.removeIf(x -> {int keep = num; return x == keep;});
17: System.out.println(list);
18:
19: num = 8;
20: list.removeIf(x -> {int keep = num; return x == keep;});
21: System.out.println(list);
A. []
B. [8]
C. [9]
D. [10]
E. The code does not compile.
147. What is the output of the following?
import java.util.Comparator;
import java.util.stream.Stream;
 
public class Compete {
   public static void main(String[] args) {
      Stream<Integer> is = Stream.of(8, 6, 9);
      Comparator<Integer> c = (a, b) -> a - b;Working with Streams and Lambda Expressions 241
      is.sort(c).forEach(System.out::print);
   }
}
A. 689
B. 986
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
148. What can a lambda implement?
A. All functional interfaces
B. Any interface
C. Only functional interfaces in the JDK
D. None of the above
149. What is the output of the following application?
package lot;
import java.util.function.*;
 
public class Warehouse {
   private int quantity = 40;
   private final BooleanSupplier stock;
   {
      stock = () -> quantity>0;
   }
   public void checkInventory() {
      if(stock.get())
         System.out.print("Plenty!");
      else {
         System.out.print("On Backorder!");
      }
   }
   public static void main(String... widget) {
      final Warehouse w13 = new Warehouse();
      w13.checkInventory();
   }
}
A. Plenty!
B. On Backorder!
C. The code does not compile because of the checkInventory() method.
D. The code does not compile for a different reason.
150. What is a possible output of the following application?
import java.util.*;
import java.util.stream.*;
public class Thermometer {
   private String feelsLike;
   private double temp;
   @Override public String toString() { return feelsLike; }
   // Constructor/Getters/Setters Omitted
   
   public static void main(String... season) {
      var readings = List.of(new Thermometer("HOT!",72),
            new Thermometer("Too Cold!",0),
            new Thermometer("Just right!",72));
      readings
         .parallelStream()               // k1
         .collect(Collectors.groupingByConcurrent(
            Thermometer::getTemp))       // k2
         .forEach(System.out::println);  // k3      
   } }
A. {0.0=[Cold!], 72.0=[HOT!, Just right!]}
B. {0.0=[Cold!], 72.0=[Just right!] , 72.0=[HOT!]}
C. The code does not compile because of line k1.
D. The code does not compile because of line k2.
E. The code does not compile because of line k3.
F. None of the above.Java Platform 
Module System
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Java Platform Module System
✓■ Deploy and execute modular applications, including 
automatic modules
✓■ Declare, use, and expose modules, including the use 
of services
Chapter 
7244 Chapter 7 ■ Java Platform Module System
1. What is the name of a file that declares a module?
A. mod.java
B. mod-data.java
C. mod-info.java
D. module.java
E. module-data.java
F. module-info.java
2. Suppose you have a module that contains a class with a call to  
exports(ChocolateLab.class). Which part of the module service contains this class?
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
E. None of the above
3. Which are considered part of a service? (Choose two.)
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
4. Given the following diagram, how many of the following are named modules?
classpath module path
dog.fluffy.jar
dog.fluffy
dog.hair.jar
dog.hair
dog.husky.jar
dog.husky
module-info
dog.bark.jar
dog.bark
module-info
A. 0
B. 1
C. 2
D. 3
E. 4Java Platform Module System 245
5. Given the diagram from the previous question, which is an automatic module?
A. dog.bark
B. dog.fluffy
C. dog.hair
D. dog.husky
E. None of the above
6. Given the diagram from question 4, which is a default module?
A. dog.bark
B. dog.fluffy
C. dog.hair
D. dog.husky
E. None of the above
7. Given the diagram from question 4, how many are unnamed modules?
A. 0
B. 1
C. 2
D. 3
E. 4
8. Which of the following statements are true? (Choose two.)
A. It is a good practice to add the --add-exports option to your java command.
B. It is permitted, but not recommended, to add the --add-exports option to your java 
command.
C. There is no --add-exports option on the java command.
D. It is a good practice to add the --add-requires option to your java command.
E. It is permitted, but not recommended, to add the --add-requires option to your 
java command.
F. There is no --add-requires option on the java command.
9. How many of the following are legal module-info.java files?
module com.koala {
  exports cute;
}
module com-koala {
  exports cute;
}
public module com.koala {
  exports cute;
}
public module com-koala {
  exports cute;
}
A. None
B. One
C. Two
D. Three
E. Four
10. Which two would be best to combine into a single module?
A. Consumer and service locator
B. Consumer and service provider
C. Consumer and service provider interface
D. Service locator and service provider interface
E. Service locator and service provider
F. Service provider and service provider interface
11. What command could you run to print output like the following?
java.base@11.0.2
java.compiler@11.0.2
java.datatransfer@11.0.2
java.desktop@11.0.2
...
A. java --all-modules
B. java --describe-modules
C. java --list-modules
D. java --output-modules
E. java --show-modules
F. None of the above
12. Suppose we have an automatic module on the module path named dog-arthur2.jar and 
no Automatic-Module-Name specified? What module name should named modules use to 
reference it?
A. dog-arthur
B. dog-arthur2
C. dog.arthur
D. dog.arthur2
E. None of the aboveJava Platform Module System 247
13. Given the dependencies in the diagram, which boxes represent the service provider interface 
and service provider, respectively?
W
Z
X
Y
A. W and X
B. W and Z
C. X and Y
D. X and Z
E. Y and Z
F. None of the above
14. Using the diagram in the previous question, which boxes represent the consumer and service 
locator, respectively?
A. W and X
B. W and Z
C. X and Y
D. X and Z
E. Y and Z
F. None of the above
15. What is the minimum number of JAR files you need for a cyclic dependency?
A. 0
B. 1
C. 2
D. 3
E. 4
16. Fill in the blank with code to look up and call a service.
String cheese = ServiceLoader.load(Mouse.class)
   .map(______________)
   .map(Mouse::favoriteFood)
   .findFirst()
   .orElse("");
A. Mouse.get()
B. Mouse::get
C. Provider.get()
D. Provider::get
E. None of the above
17. Suppose we want to have two modules: com.ny and com.sf. Which is true about the 
placement of the module-info.java file(s)?
module com.ny
V
package com.ny.city
module com.sf
package com.sf.city
W
X
Y
Z
A. One module-info.java file is required in position Z.
B. Two module-info.java files are required, in positions V and X.
C. Two module-info.java files are required, in positions W and Y.
D. Three module-info.java files are required, in positions V, X, and Z.
E. Three module-info.java files are required, in positions W, Y, and Z.
F. None of the above.
18. Consider the modules in the previous diagram. Suppose we want the code in module com.sf 
to depend on code in module com.ny. Which of the following directives goes into module 
com.sf’s module-info file to configure that behavior?
A. export com.ny;
B. exports com.ny;
C. require com.ny;
D. require com.ny.city;
E. requires com.ny;
F. requires com.ny.city;
19. Consider the modules diagram in question 17. Suppose we want the code in module com.sf 
to depend on code in module com.ny. Which of the following directives goes into module 
com.ny’s module-info file to configure that behavior?
A. export com.ny;
B. export com.ny.city;
C. exports com.ny;
D. exports com.ny.city;
E. requires com.ny;
F. requires com.ny.city;Java Platform Module System 249
20. Suppose the consumer, service locator, service provider, and service provider interface are 
each in separate modules. Which of the following best describes the following module-
info file?
module nature.tree {
  provides nature.sapling.Tree with nature.tree.Maple
}
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
E. None of the above
21. Which options are commonly used when compiling a module?
A. -d and -m
B. -d and -p
C. -m and -p
D. -d, -m, and -p
E. None of the above
22. Which of the following are modules supplied by the JDK? (Choose three.)
A. java.base
B. java.basic
C. java.desktop
D. java.sdk
E. java.sql
F. java.swing
23. Which best describes a top-down migration? (Choose two.)
A. The first step is to move all the modules to the module path.
B. The first step is to move a single module to the module path.
C. Most steps consist of changing an automatic module to a named module.
D. Most steps consist of changing an automatic module to a unnamed module.
E. Most steps consist of changing an unnamed module to an automatic module.
F. Most steps consist of changing an unnamed module to a named module
24. Suppose the consumer, service locator, service provider, and service provider interface are 
each in separate modules. Which of the following best describes the following  
module-info file?
module nature.tree {
  requires nature.sapling;
  requires nature.bush;
}
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
E. None of the above
25. Suppose you have these two JARs from Java 8. Which steps, when taken together, would be 
the best way to make them modules? (Choose two.)
baby.otter
food.fish
A. Add a module-info.java to each.
B. Add them to the classpath.
C. Create a third module to contain the common code.
D. Merge them into one module to break the cyclic dependency.
E. Rename the modules to use dashes instead of dots.
26. Which command produces output such as the following?
animal.puppy -> animal.dog
A. jdeps –d zoo.animal.puppy.jar
B. jdeps –s zoo.animal.puppy.jar
C. jmod –d zoo.animal.puppy.jar
D. jmod –s zoo.animal.puppy.jar
E. None of the above
27. Suppose the consumer, service locator, service provider, and service provider interface are 
each in separate modules. Which of the following best describes the following module-
info file?
module nature.tree{
   requires nature.sapling;
   provides nature.sapling.Tree with nature.tree.Maple
}
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
E. None of the aboveJava Platform Module System 251
28. Suppose we have module com.bird that contains package com.bird.tweet and 
class Tweety with a main() method. Which of the following can fill in the blank to run 
this program?
java --module-path mods –module _____________
A. com.bird.Tweety
B. com.bird.tweety.Tweety
C. com.bird/Tweety
D. com.bird.tweet/Tweety
E. com.bird/com.bird.tweet.Tweety
F. com.bird.tweet/com.bird.Tweety
29. Which types of modules are required to contain a module-info file?
A. Automatic only
B. Named only
C. Unnamed only
D. Automatic and named
E. Automatic and unnamed
F. Named and unnamed
30. Suppose the consumer, service locator, service provider, and service provider interface are 
each in separate modules. Which of the following best describes the following  
module-info file?
module nature.tree{
  exports nature.tree.leaf;
  requires nature.sapling;
  uses nature.tree.Photosynthesis;
}
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
E. None of the above
31. What is a benefit of using modules? (Choose two.)
A. Better access control
B. Custom Java builds
C. Elimination of JAR files
D. Fewer .java files needed in your application
E. Not necessary to specify types of local variables
F. Write once, run anywhere
32. Suppose the consumer, service locator, service provider, and service provider interface are 
each in separate modules. Which of the following best describes the following  
module-info file?
module nature.tree{
  requires nature.sapling;
}
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
E. None of the above
33. Which types of modules are allowed to contain a module-info file?
A. Automatic only
B. Named only
C. Unnamed only
D. Automatic and named
E. Automatic and unnamed
F. Named and unnamed
34. Which of the following is true of the following module declaration?
1: class com.mammal {
2:    exports com.mammal.cat;
3:    exports cat.mammal.mouse to com.mice;
4:    uses com.animal;
5: }
A. The first line that fails to compile is line 1.
B. The first line that fails to compile is line 2.
C. The first line that fails to compile is line 3.
D. The first line that fails to compile is line 4.
E. The code compiles.
35. How many of these keywords can be used in a module-info.java file: closes, export, 
import, require, and uses?
A. None
B. OneJava Platform Module System 253
C. Two
D. Three
E. Four
F. Five
36. Suppose the consumer, service locator, service provider, and service provider interface are 
each in separate modules. Which of the following best describes the following  
module-info file?
module nature.tree{
  exports nature.tree.leaf;
}
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
E. None of the above
37. Which of the following are modules supplied by the JDK? (Choose three.)
A. jdk.base
B. jdk.basic
C. jdk.desktop
D. jdk.javadoc
E. jdk.jdeps
F. jdk.net
38. Which are true statements about types of migration? (Choose three.)
A. All modules are immediately moved to the module path in a bottom-up migration.
B. All modules are immediately moved to the module path in a top-down migration.
C. Modules migrate before the modules that depend on them in a bottom-up migration.
D. Modules migrate before the modules that depend on them in a top-down migration.
E. Modules that are not yet named modules are automatic modules in a bottom-up  
migration.
F. Modules that are not yet named modules are automatic modules in a top-down  
migration
39. A class in which of the following parts of a module service should include a method call to 
load(ChocolateLab.class) that would allow callers to use it?
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
E. None of the above
40. How many of these module declarations are valid?
module com.leaf {}
module com.leaf2 {}
module com-leaf { }
module LEAF {}
module leaf2 {}
A. Zero
B. One
C. Two
D. Three
E. Four
F. Five
41. Which is a benefit of ServiceLoader?
A. It allows you to add functionality without recompiling the application.
B. It allows you to load a service written in C++.
C. It is an interface.
D. When implementing a service, it references the ServiceLoader.
42. Which are true statements? (Choose two.)
A. Code on the classpath can reference code in automatic, named, and unnamed modules.
B. Code on the classpath can reference code in named modules, but not automatic and 
unnamed modules.
C. Code on the classpath can reference code in automatic and named modules, but not 
unnamed modules.
D. Code on the module path can reference code in automatic, named, and unnamed  
modules.
E. Code on the module path can reference code in named modules, but not automatic and 
unnamed modules.
F. Code on the module path can reference code in automatic and named modules, but not 
unnamed modules.
43. Suppose we have the packages in the diagram. What could we add to the  
module-info.java in com.duck to allow the com.park module to reference the 
Duckling class but not allow the com.bread module to do the same?
com.duck com.bread
com.park
com
duckling 
bread
Duckling.java
Egg.java
module-info.java
Food.java
Grass.java
module-info.java
module-info.java
egg
com
com
park
A. exports com.duckling;
B. exports com.duckling from com.park;
C. exports com.duckling to com.park;
D. exports com.park from com.duckling;
E. exports com.park to com.duckling;
F. None of the above
44. Given the diagram in the previous question, what could we add to module-info.java in 
com.duck to allow the com.park package to reference the Duckling class, but not allow 
the Egg class to reference the Duckling class?
A. exports com.duckling;
B. exports com.duckling from com.park;
C. exports com.duckling to com.park;
D. exports com.park from com.duckling;
E. exports com.park to com.duckling;
F. None of the above
45. Given the diagram in question 43 and the correct export statement to share only com.
duckling, which of the following should be included in the module-info.java file of 
com.park to specify that com.park should have access to the com.duckling and com.
bread packages, but not the com.egg package?
A. require com.duck, com.bread;
B. requires com.duck; com.bread;
C. require com.duckling, com.bread;
D. requires com.duckling; com.bread;
E. None of the above
46. Which is both part of the service and has a provides directive?
A. Consumer
B. Service locator
C. Service provider
D. Service provider interface
E. None of the above
47. What command is the simplest way to list suggestions for classes in jdk.unsupported?
A. jdeps cookie.jar
B. jdeps –s cookie.jar
C. jdeps –jdkinternals cookie.jar
D. jdeps --jdkinternals cookie.jar
E. jdeps -jdkunsupported cookie.jar
F. jdeps --jdkunsupported cookie.jar
48. Which modules are on the classpath?
A. Automatic only
B. Named only
C. Unnamed only
D. Automatic and named
E. Automatic and unnamed
F. Named and unnamed
49. Which line of code belongs in a service locator?
A. ServiceLoader loader = ServiceLoader.load();
B. ServiceLoader loader = ServiceLoader.load(Mouse.class);
C. ServiceLoader<Mouse> loader = ServiceLoader.load();
D. ServiceLoader<Mouse> loader = ServiceLoader.load(Mouse.class);
E. Mouse loader = ServiceLoader.load();
F. Mouse loader = ServiceLoader.load(Mouse .class);Java Platform Module System 257
50. Which is true about a service? (Choose two.)
A. Changing the service provider interface always requires recompiling the service provider.
B. Changing the service provider interface sometimes requires recompiling the service  
provider.
C. Changing the service provider interface never requires recompiling the service provider.
D. If the service provider interface references other classes in the method signatures, they 
are considered part of the service.
E. If the service provider interface references other classes in the method signatures, they 
are not considered part of the service.
51. Which modules are on the module path?
A. Automatic only
B. Named only
C. Unnamed only
D. Automatic and named
E. Automatic and unnamed
F. Named and unnamed
52. The service locator and service provider interface share a module. Which boxes represent the 
consumer and service provider, respectively?
X
Z
Y
A. X and Y
B. X and Z
C. Y and Z
D. Z and Z
E. Z and Y
F. None of the above
53. What command is the simplest way to list what modules a JAR depends on without listing 
package names?
A. jdeps cookie.jar
B. jdeps –s cookie.jar
C. jdeps –jdkinternals cookie.jar
D. jdeps --jdkinternals cookie.jar
E. jdeps -jdk-unsupported cookie.jar
F. jdeps --jdk-unsupported cookie.jar
54. What is a benefit of using modules? (Choose three.)
A. Ability to reuse code
B. Clearer dependency management
C. Improved performance
D. Multithreading support
E. Platform independence
F. Unique package enforcement
55. Fill in the blanks to list a way of getting a lot of information useful in debugging modules:
_______ -m x –p y --______________
A. jar and –show-modules
B. jar and –show-module-detail
C. jar and –show-module-resolution
D. java and –show-modules
E. java and –show-module-detail
F. java and –show-module-resolution
56. Suppose you have the following interface in a module named animal.insect.api. What 
needs to be included in the module-info file for it to be a service provider interface?
package animal.insect.api.bugs;
 
public interface Bug {
   int crawl();
}
A. exports animal.insect.api;
B. exports animal.insect.api.bugs;
C. exports animal.insect.api.bugs.Bug;
D. requires animal.insect.api;
E. requires animal.insect.api.bugs;
F. requires animal.insect.api.bugs.Bug;
57. Suppose you have the following class in a module named animal.insect.impl and the 
service provider interface module from question 56. What needs to be included in the  
module-info for it to be a service provider? (Choose two.)
package animal.insect.impl;
 
import animal.insect.api.bugs.Bug;
 
public class Worm implements Bug {Java Platform Module System 259
   @Override
   public int crawl() {
      return 1;
   }
}
A. requires animal.insect.api.bugs;
B. requires animal.insect.lookup;
C. requires animal.printer;
D. provides animal.insect.impl.Worm;
E. provides animal.insect.api.bugs.Bug with animal.insect.impl.
Worm;
F. provides animal.insect.impl.Worm with animal.insect.api.bugs.
Bug;
58. Suppose you have the following class in a module named animal.insect.lookup, the 
service provider interface from question 56, and the service provider from question 57. What 
needs to be included in the module-info file besides an exports directive for it to be a 
service locator? (Choose two.)
package animal.insect.lookup;
 
import animal.insect.api.bugs.Bug;
import java.util.List;
import java.util.ServiceLoader;
import java.util.stream.Collectors;
 
public class InsectFinder {
   public static List<Bug> findAllBugs() {
      return ServiceLoader.load(Bug.class)
         .stream()
         .map(ServiceLoader.Provider::get)
         .collect(Collectors.toList());
   }
}
A. provides animal.insect.lookup;
B. provides animal.insect.lookup.InsectFinder;
C. requires animal.insect.api.bugs;
D. requires animal.insect.api.Bug;
E. uses animal.insect.api.bugs;
F. uses animal.insect.api.bugs.Bug;
59. Suppose you have the following class in a module named animal.insect.printer, the 
service provider interface from question 56, the service provider from question 57, and the 
service locator from question 58. What needs to be included in the module-info for it to 
be a consumer? (Choose two.)
package animal.printer;
 
import animal.insect.lookup.InsectFinder;
 
public class Print {
   public static void main(String[] args) {
      var bugs = InsectFinder.findAllBugs();
      bugs.forEach(System.out::println);
   }
}
A. requires animal.insect.api.bugs;
B. requires animal.insect.lookup;
C. requires animal.printer;
D. uses animal.insect.api.bugs;
E. uses animal.insect.api.bugs.Bug;
F. uses animal.insect.lookup.InsectFinder;
60. What command is the simplest way to list what modules a JAR depends on including 
package names?
A. jdeps cookie.jar
B. jdeps –s cookie.jar
C. jdeps –jdkinternals cookie.jar
D. jdeps --jdkinternals cookie.jar
E. jdeps -jdk-unsupported cookie.jar
F. jdeps --jdk-unsupported cookie.jar
61. How many modules are part of the cyclic dependency?
module com.light {
   exports com.light;
}
module com.animal {
   exports com.animal;
   requires com.light;
   requires com.plant;
}
module com.plant {Java Platform Module System 261
   exports com.plant;
   requires com.light;
   requires com.animal;
}
module com.worm {
   exports com.worm;
   requires com.light;
   requires com.animal;
   requires com.plant;
}
A. 0
B. 1
C. 2
D. 3
E. 4
62. What is true about the -d option?
A. It can be used with the jar command, but not the java command.
B. It can be used with the java command, but not the jar command.
C. It can be used with the jar and java commands and serves the same purpose for both.
D. It can be used with the jar and java commands, but means “directory” for the former and 
“describe module” for the later.
E. None of the above.
63. Assuming all referenced files and directories exist and are correct, what does this code do?
javac –m mods –d mouse mouse/com/mouse/*.java
   mouse/module-info.java
jar –cvf mods/com.mouse.jar –C mouse/ .
A. Creates a JAR file representing the com.mouse module
B. Creates a JAR file that is not a module
C. Fails on the javac command
D. Fails on the jar command
64. What module is always in the jdeps output?
A. java.base
B. java.lang
C. java.self
D. jdk.base
E. jdk.lang
F. jdk.self
65. Which are valid modes on the jmod command? (Choose three.)
A. create
B. list
C. hash
D. show
E. verbose
F. version
66. This diagram shows the second step of a migration to modules. What type of  
migration is this?
butterfly
caterpillar
classpath module path
A. Bottom-up.
B. Side-to-side.
C. Top-down.
D. There is not enough information to determine which type it is.
67. Which are true statements about the diagram and scenario in the previous question? 
(Choose two.)
A. butterfly is an automatic module.
B. butterfly is a named module.
C. butterfly is an unnamed module.
D. caterpillar is an automatic module.
E. caterpillar is a named module.
F. caterpillar is an unnamed module.
68. Suppose we have the two JARs in the diagram on the module path and the module-info  
in the com.magic jar only exports one package: com.magic.unicorn. There is no 
module-info file in the com.science JAR. How many of the four packages in the  
diagram can a third module on the module path access?
com.magic
module-info
com.magic.dragon
com.magic.unicorn
com.science
com.science.bio
com.science.chemJava Platform Module System 263
A. 0
B. 1
C. 2
D. 3
E. 4
69. Suppose the two JARs described in the previous question are on the classpath. How many of 
the four packages in the diagram can a module on the module path access?
A. 0
B. 1
C. 2
D. 3
E. 4
70. What is true about the following module-info.java file?
module Book { }
A. It does not compile because it is empty.
B. It does not compile because the module name is uppercase.
C. It does not compile because the module name has only one component.
D. It does not compile for another reason.
E. It compiles.
71. When adding a new service provider, which of these do you need to recompile?
A. Consumer
B. Service locator
C. Existing service providers
D. Service provider interface
E. None of the above
72. When working with modules, what option names are equivalent to -m and -s?
A. --module and --short
B. --module and --statistics
C. --module and --summary
D. --module-path and --short
E. --module-path and --statistics
F. --module-path and --summary
73. Which are considered part of a service?
A. Classes referenced by the implementation, but not the interface
B. Classes referenced by the interface, but not the implementation
C. Classes referenced by either the implementation or the interface
D. None of the above
74. Which commands have the options -m and –s to represent modules and summary, 
respectively?
A. javac and jar
B. javac and jdeps
C. javac and jmod
D. java and jar
E. java and jdeps
F. java and jmod
75. Suppose you have the following class in a module named animal.insect.impl. Which 
two most likely go in the module-info of the service locator? (Choose two.)
package animal.insect.impl;
 
import animal.insect.api.bugs.Bug;
 
public class Worm implements Bug {
   @Override
   public int crawl() {
      return 1;
   }
}
A. requires animal.insect.api.bugs;
B. requires animal.insect.api.bugs.Bug;
C. requires animal.insect.impl;
D. uses animal.insect.api.bugs;
E. uses animal.insect.api.bugs.Bug;
F. uses animal.insect.api.bugs.Bug with animal.insect.impl.Worm;
76. Which statements are true? (Choose two.)
A. A bottom-up migration has more steps involving the classpath than a  
top-down migration.
B. A top-down migration has more steps involving the classpath than a  
bottom-up migration.
C. Both types of migration have the same number of steps involving the classpath.
D. A bottom-up migration has unnamed modules on the module path
E. A top-down migration has unnamed modules on the module path.
F. Neither migration type has unnamed modules on the module path.
77. Fill in the blank with code to look up and call a service.
String cheese = ServiceLoader.load(Mouse.class)
   .stream()Java Platform Module System 265
   .map(______________)
   .map(Mouse::favoriteFood)
   .findFirst()
   .orElse("");
A. Mouse.get()
B. Mouse::get
C. Provider.get()
D. Provider::get
E. None of the above
78. Given the diagram, what statements need to be in module-info.java for the mammal 
module? (Choose three.)
animal
animal.util
milk
milk.store
mammal
mammal.eat
panda
panda.food
A. exports mammal;
B. exports mammal.eat;
C. requires animal;
D. requires animal.util;
E. requires milk;
F. requires milk.store;
79. Given the previous diagram and the following module-info.java for the panda module, 
what change can be made to the requires statement?
module panda {
   requires mammal;
}
A. exports transitive mammal;
B. exports transitive mammal.eat;
C. requires transitive animal;
D. requires transitive animal.util;
E. transitive requires animal;
F. transitive requires animal.util;
80. Given the diagram in question 78 and the following module-info.java for the panda 
module, what is the result of including line m1?
module panda {
   requires mammal;
   requires transitive mammal; // line m1
}
A. Any modules that require mammal will automatically get panda as well.
B. Any modules that require panda will automatically get mammal as well.
C. There is no change in behavior.
D. The code does not compile.
81. How many service providers are allowed to implement a service provider interface and have 
the consumer reference the first one?
A. Exactly one
B. Exactly two
C. One or two
D. One or more
E. None of the above
82. Which of the following are modules supplied by the JDK? (Choose three.)
A. java.logging
B. java.javadoc
C. java.jdk
D. java.management
E. java.naming
F. java.scripts
83. Which are true of a JAR file that has only one module-info.class file, placed in the 
META-INF directory? (Choose two.)
A. It is an automatic module if on the classpath.
B. It is an automatic module if on the module path.
C. It is a named module if on the classpath.
D. It is a named module if on the module path.
E. It is an unnamed module if on the classpath.
F. It is an unnamed module if on the module path.Java Platform Module System 267
84. The service locator and service provider interface share a module. Which boxes represent the 
consumer and service provider, respectively?
X
Z
Y
A. X and Y
B. X and Z
C. Y and Z
D. Z and Z
E. Z and Y
F. None of the above
85. What statements are most accurate about the ServiceLoader class? (Choose two.)
A. load() does not take any parameters.
B. load() takes the class type as a parameter.
C. When looping through the results of load(), you need to call the get() method on  
Provider.
D. When using the results of load() in a Stream, you need to call the get() method on  
Provider.
86. Suppose we have an automatic module on the module path named  
lizard-^-cricket-^-1.0.0-SNAPSHOT.jar and no Automatic-Module-Name 
specified. What module name should named modules use to reference it?
A. lizard-cricket
B. lizard.cricket
C. lizard-cricket-SNAPSHOT
D. lizard-cricket.SNAPSHOT
E. None of the above
87. What file formats are legal for a module to be distributed?
A. jar
B. jmod
C. zip
D. jar and jmod
E. jar and zip
F. jmod and zip
88. Why is this module-info incorrect for a service provider?
module plant.flower {
   exports plant.flower.impl;
   requires plant.flower.api;
   provides plant.flower.api.Petal 
      with plant.flower.impl.PetalImpl;
}
A. The exports directive should be export.
B. The exports directive should not be present because all calls to the service provider 
should use the service locator.
C. The provides directive should be uses instead.
D. The provides directive has the implementation and interface in the wrong order.
E. The requires directive should be exports instead.
F. The requires directive should not be present because provides implies it.
89. How many modules are part of the cyclic dependency?
module.com.light {
   exports com.light;
}
module com.plant {
   exports com.plant;
   requires com.light;
   requires com.animal;
}
module com.animal {
   exports com.animal;
   requires com.light;
}
module com.worm {
   exports com.worm;
   requires com.light;
   requires com.animal;
   requires com.plant;
}
A. 0
B. 1
C. 2
D. 3
E. 4Java Platform Module System 269
90. What statements are true about requires mandated java.base? (Choose two.)
A. This output is expected when running the java --list-modules command.
B. This output is expected when running the java --show-module-resolution 
command.
C. This output is expected when running the jdeps command.
D. This output is expected when running the jmod command.
E. All modules will include this in the output.
F. Some modules will include this in the output.Concurrency
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Concurrency
✓■ Create worker threads using Runnable and Callable,  
and manage concurrency using an ExecutorService and  
java.util.concurrent API
✓■ Develop thread-safe code, using different locking mechanisms 
and java.util.concurrent API
Chapter 
8272 Chapter 8 ■ Concurrency
1. What is the output of the following code snippet?
Callable c = new Callable() {
   public Object run() {
      System.out.print("X");
      return 10;
   }
};
var s = Executors.newScheduledThreadPool(1);
for(int i=0; i<10; i++) {
   Future f = s.submit(c);
   f.get();
}
s.shutdown();
System.out.print("Done!");
A. XXXXXXXXXXDone!
B. Done!XXXXXXXXXX
C. The code does not compile.
D. The code hangs indefinitely at runtime.
E. The code throws an exception at runtime.
F. The output cannot be determined ahead of time.
2. Which of the following methods is not available on an ExecutorService instance? 
(Choose two.)
A. execute(Callable)
B. shutdownNow()
C. submit(Runnable)
D. exit()
E. submit(Callable)
F. execute(Runnable)
3. The following program simulates flipping a coin an even number of times. Assuming five 
seconds is enough time for all of the tasks to finish, what is the output of the following 
application?
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
public class Luck {
   private AtomicBoolean coin = new AtomicBoolean(false);
   void flip() {
      coin.getAndSet(!coin.get());
   }Concurrency 273
   public static void main(String[] gamble) throws Exception {
      var luck = new Luck();
      ExecutorService s = Executors.newCachedThreadPool();
      for(int i=0; i<1000; i++) {
         s.execute(() -> luck.flip());
      }
      s.shutdown();
      Thread.sleep(5000);
      System.out.println(luck.coin.get());
   } }
A. false
B. true
C. The code does not compile.
D. The code hangs indefinitely at runtime.
E. The code throws an exception at runtime.
F. The output cannot be determined ahead of time.
4. Which of the following is a recommended way to define an asynchronous task?
A. Create a Callable expression and pass it to an instance of an Executor.
B. Create a class that extends Thread and override the start() method.
C. Create a Runnable lambda expression and pass it to a Thread constructor.
D. Create an anonymous Runnable class that overrides the begin() method.
E. All of the above.
5. Given the following program, how many times is Locked! expected to be printed? Assume 
100 milliseconds is enough time for each task created by the program to complete.
import java.util.concurrent.locks.*;
public class Padlock {
   private Lock lock = new ReentrantLock();
   public void lockUp() {
      if (lock.tryLock()) {
         lock.lock();
         System.out.println("Locked!");
         lock.unlock();
      }
   }
   public static void main(String... unused) throws Exception {
      var gate = new Padlock();
      for(int i=0; i<5; i++) {
         new Thread(() -> gate.lockUp()).start();
         Thread.sleep(100);
      }
   } }
A. One time.
B. Five times.
C. The code does not compile.
D. The code hangs indefinitely at runtime.
E. The code throws an exception at runtime.
F. The output cannot be determined ahead of time.
6. Given the original array, how many of the following for statements result in an exception at 
runtime, assuming each is executed independently?
var original = List.of(1,2,3,4,5);
 
var copy1 = new CopyOnWriteArrayList<Integer>(original);
for(Integer w : copy1)
   copy1.remove(w);
 
var copy2 = Collections.synchronizedList(original);
for(Integer w : copy2)
   copy2.remove(w);
 
var copy3 = new ArrayList<Integer>(original);
for(Integer w : copy3)
   copy3.remove(w);
 
var copy4 = new ConcurrentLinkedQueue<Integer>(original);
for(Integer w : copy4)
   copy4.remove(w);
A. Zero.
B. One.
C. Two.
D. Three.
E. Four.
F. The code does not compile.Concurrency 275
7. Fill in the blanks: ______________ is a special case of ______________, in which two or more 
active threads try to acquire the same set of locks and are repeatedly unsuccessful.
A. Deadlock, livelock
B. Deadlock, resource starvation
C. Livelock, resource starvation
D. Resource starvation, race conditions
E. Resource starvation, livelock
F. None of the above
8. What is the output of the following application?
3:  public class TpsReport {
4:     public void submitReports() {
5:        var s = Executors.newCachedThreadPool();
6:        Future bosses = s.submit(() -> System.out.print("1"));
7:        s.shutdown();
8:        System.out.print(bosses.get());
9:     }
10:    public static void main(String[] memo) {
11:       new TpsReport().submitReports();
12:    }
13: }
A. null
B. 1null
C. 1
D. Line 6 does not compile.
E. Line 8 does not compile.
F. An exception is thrown at runtime.
9. Which of the following static methods does not exist in the Executors class? (Choose two.)
A. newFixedScheduledThreadPool()
B. newThreadPool()
C. newFixedThreadPool(int)
D. newSingleThreadExecutor()
E. newScheduledThreadPool(int)
F. newSingleThreadScheduledExecutor()
10. How many times does the following application print Ready at runtime?
package parade;
import java.util.concurrent.*;
public class CartoonCat {
   private void await(CyclicBarrier c) {
      try {
         c.await();
      } catch (Exception e) {}
   }
   public void march(CyclicBarrier c) {
      var s = Executors.newSingleThreadExecutor();
      for(int i=0; i<12; i++)
         s.execute(() -> await(c));
      s.shutdown();
   }
   public static void main(String... strings) {
      new CartoonCat().march(new CyclicBarrier(4,
            () -> System.out.println("Ready")));
   }
}
A. Zero.
B. One.
C. Three.
D. The code does not compile.
E. An exception is thrown at runtime.
11. Let’s say you needed a thread executor to create tasks for a CyclicBarrier that has a barrier 
limit of five threads. Which static method in ExecutorService should you use to obtain it?
A. newSingleThreadExecutor()
B. newSingleThreadScheduledExecutor()
C. newCachedThreadPool()
D. newFixedThreadPool(2)
E. None of the above
12. The following diagrams represent the order of read/write operations of two threads sharing 
a common variable. Each thread first reads the value of the variable from memory and then 
writes a new value of the variable back to memory. Which diagram demonstrates proper  
synchronization?Concurrency 277
A. 
Thread 1
Thread 2
Time
Shared Memory
B. 
Thread 1
Thread 2
Time
Shared Memory
C. 
Thread 1
Thread 2
Time
Shared Memory
D. 
Thread 1
Thread 2
Time
Shared Memory
13. What is the output of the following application?
import java.util.*;
import java.util.concurrent.*;
public class Race {
   ExecutorService service = Executors.newFixedThreadPool(8);
   public static int sleep() {
      try { Thread.sleep(1000); } catch (Exception e) {}
      return 1;
   }
   public void hare() {
      try {
         Callable<Integer> c = () -> sleep();
         final var r = List.of(c,c,c);
         var results = service.invokeAll(r);
         System.out.println("Hare won the race!");
      } catch (Exception e) {e.printStackTrace();}
   }
   public void tortoise() {
      try {
         Callable<Integer> c = () -> sleep();
         final var r = List.of(c,c,c);
         Integer result = service.invokeAny(r);
         System.out.println("Tortoise won the race!");
      } catch (Exception e) {e.printStackTrace();}
   }
   public static void main(String[] p) throws Exception {
      var race = new Race();
      race.service.execute(() -> race.hare());
      race.service.execute(() -> race.tortoise());
   }
}
A. Hare won the race! is printed first.
B. Tortoise won the race! is printed first.
C. The code does not compile.
D. The code hangs indefinitely at runtime.
E. The code throws an exception at runtime.
F. The output cannot be determined ahead of time.Concurrency 279
14. Which of the following concurrent collections is sorted? (Choose two.)
A. ConcurrentSkipList
B. ConcurrentSkipListSet
C. CopyOnWriteArrayList
D. ConcurrentSkipListMap
E. ConcurrentLinkedQueue
F. LinkedBlockingQueue
15. What is the output of the following application?
package taxes;
import java.util.concurrent.*;
public class Accountant {
   public static void completePaperwork() {
      System.out.print("[Filing]");
   }
   public static double getPi() {
      return 3.14159;
   }
   public static void main(String[] args) throws Exception {
      ExecutorService x = Executors.newSingleThreadExecutor();
      Future<?> f1 = x.submit(() -> completePaperwork());
      Future<Object> f2 = x.submit(() -> getPi());
      System.out.print(f1.get()+" "+f2.get());
      x.shutdown();
   }
}
A. [Filing]
B. [Filing]3.14159
C. [Filing]null 3.14159
D. The declaration of f1 does not compile.
E. The declaration of f2 does not compile.
F. The output cannot be determined ahead of time.
16. Assuming 10 seconds is enough time for all of the tasks to finish, what statements about the 
following program are correct? (Choose two.)
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
public class Clock {
   private AtomicLong bigHand = new AtomicLong(0);
   void incrementBy10() {
      bigHand.getAndSet(bigHand.get() + 10);
   }
   public static void main(String[] c) throws Exception {
      var smartWatch = new Clock();
      ExecutorService s = Executors.newCachedThreadPool();
      for(int i=0; i<100; i++) {
         s.submit(() -> smartWatch.incrementBy10()).get();
      }
      s.shutdown();
      s.awaitTermination(10, TimeUnit.SECONDS);
      System.out.println(smartWatch.bigHand.get());
   } }
A. The code does not compile.
B. The incrementBy10() method is thread-safe.
C. The incrementBy10() method is not thread-safe.
D. The output is 1000 on every execution.
E. The output cannot be determined ahead of time.
F. The code hangs indefinitely at runtime.
17. What is the most likely result of executing the following application?
package jokes;
import java.util.concurrent.*;
public class Riddle {
   public void sleep() {
      try { Thread.sleep(5000); } catch (Exception e) {}
   }
   public String getQuestion(Riddle r) {
      synchronized {
         sleep();
         if(r != null) r.getAnswer(null);
         return "How many programmers does it take "
               + "to change a light bulb?";
      }
   }
   public synchronized String getAnswer(Riddle r) {
      sleep();
      if(r != null) r.getAnswer(null);
      return "None, that's a hardware problem";Concurrency 281
   }
 
   public static void main(String... ununused) {
      var r1 = new Riddle();
      var r2 = new Riddle();
      var s = Executors.newFixedThreadPool(2);
      s.submit(() -> r1.getQuestion(r2));
      s.execute(() -> r2.getAnswer(r1));
      s.shutdown();
   }
}
A. A deadlock is produced at runtime.
B. A livelock is produced at runtime.
C. The application completes successfully.
D. The code does not compile.
E. The code hangs indefinitely at runtime.
F. The output cannot be determined ahead of time.
18. Which ScheduledExecutorService method can result in the same action being executed by two 
threads at the same time?
A. scheduleAtFixedDelay()
B. scheduleAtFixedRate()
C. scheduleWithFixedDelay()
D. scheduleAtSameRate()
E. scheduleWithRate()
F. None of the above
19. What is the output of the following application?
package olympics;
import java.util.concurrent.*;
public class Athlete {
   int stroke = 0;
   public synchronized void swimming() {
      stroke++;
   }
   private int getStroke() {
      synchronized(this) { return stroke; }
   }
   public static void main(String... laps) {
      ExecutorService s = Executors.newFixedThreadPool(10);
      Athlete a = new Athlete();
      for(int i=0; i<1000; i++) {
         s.execute(() -> a.swimming());
      }
      s.shutdown();
      System.out.print(a.getStroke());
   } }
A. A deadlock is produced at runtime.
B. A livelock is produced at runtime.
C. 1000
D. The code does not compile.
E. The result is unknown until runtime because stroke is not written in a thread-safe 
manner and a write may be lost.
F. None of the above.
20. Which of the following is most likely to be caused by a race condition?
A. A thread perpetually denied access to a resource
B. A program hanging indefinitely
C. An int variable incorrectly reporting the number of times an operation was performed
D. Two threads actively trying to restart a blocked process that is guaranteed to always end 
the same way
E. Two threads endlessly waiting on each other to release shared locks
21. Which statement about the following class is correct?
package my;
import java.util.*;
public class ThreadSafeList {
   private List<Integer> data = new ArrayList<>();
   public synchronized void addValue(int value) {
      data.add(value);
   }
   public int getValue(int index) {
      return data.get(index);
   }
   public int size() {
      synchronized(ThreadSafeList.class) {
         return data.size();
      }
   }
}Concurrency 283
A. The code compiles and is thread-safe.
B. The code compiles and is not thread-safe.
C. The code does not compile because of the size() method.
D. The code does not compile because of the getValue() method.
E. The code does not compile for another reason.
F. None of the above.
22. Which two method names, when filled into the print2() method, produce the same output 
as the print1() method? Assume the input arguments for each represent the same non-null 
numeric value.
public static synchronized void print1(int counter) {
   System.out.println(counter--);
   System.out.println(++counter);
}
 
public static synchronized void print2(AtomicInteger counter) {
   System.out.println(counter. );
   System.out.println(counter. );
}
A. decrementAndGet() and getAndIncrement()
B. decrementAndGet() and incrementAndGet()
C. getAndDecrement() and getAndIncrement()
D. getAndDecrement() and incrementAndGet()
E. None of the above
23. How many lines of the following code snippet contain compilation errors?
11: ScheduledExecutorService t = Executors
12:    .newSingleThreadScheduledExecutor();
13: Future result = t.execute(System.out::println);
14: t.invokeAll(null);
15: t.scheduleAtFixedRate(() -> {return;},5,TimeUnit.MINUTES);
A. None
B. One
C. Two
D. Three
E. None of the above
24. How many times does the following application print W at runtime?
package crew;
import java.util.concurrent.*;
import java.util.stream.*;
public class Boat {
   private void waitTillFinished(CyclicBarrier c) {
      try {
         c.await();
         System.out.print("W");
      } catch (Exception e) {}
   }
   public void row(ExecutorService s) {
      var cb = new CyclicBarrier(5);
      IntStream.iterate(1, i-> i+1)
         .limit(12)
         .forEach(i -> s.submit(() -> waitTillFinished(cb)));
   }
   public static void main(String[] oars) {
      ExecutorService service = null;
      try {
         service = Executors.newCachedThreadPool();
         new Boat().row(service);
      } finally {
         service.isShutdown();
      } } }
A. 0
B. 10
C. 12
D. The code does not compile.
E. The output cannot be determined ahead of time.
F. None of the above.
25. Using the Boat class from the previous question, what is the final state of the application?
A. The application produces an exception at runtime.
B. The application terminates successfully.
C. The application hangs indefinitely because the ExecutorService is never shut down.
D. The application produces a deadlock at runtime.
E. None of the above.Concurrency 285
26. Given the following program, how many times is TV Time expected to be printed? Assume 
10 seconds is enough time for each task created by the program to complete.
import java.util.concurrent.*;
import java.util.concurrent.locks.*;
public class Television {
   private static Lock myTurn = new ReentrantLock();
   public void watch() {
      try {
         if (myTurn.lock(5, TimeUnit.SECONDS)) {
            System.out.println("TV Time");
            myTurn.unlock();
         }
      } catch (InterruptedException e) {}
   }
   public static void main(String[] t) throws Exception {
      var newTv = new Television();
      for (int i = 0; i < 3; i++) {
         new Thread(() -> newTv.watch()).start();
         Thread.sleep(10*1000);
      }
   } }
A. One time.
B. Three times.
C. The code does not compile.
D. The code hangs indefinitely at runtime.
E. The code throws an exception at runtime.
F. The output cannot be determined ahead of time.
27. Given the original array, how many of the following for statements enter an infinite loop at 
runtime, assuming each is executed independently?
var original = new ArrayList<Integer>(List.of(1,2,3));
 
var copy1 = new ArrayList<Integer>(original);
for(Integer q : copy1)
   copy1.add(1);
 
var copy2 = new CopyOnWriteArrayList<Integer>(original);
for(Integer q : copy2)
   copy2.add(2);
 
var copy3 = new LinkedBlockingQueue<Integer>(original);
for(Integer q : copy3)
   copy3.offer(3);
 
var copy4 = Collections.synchronizedList(original);
for(Integer q : copy4)
   copy4.add(4);
A. Zero.
B. One.
C. Two.
D. Three.
E. Four.
F. The code does not compile.
28. Which ExecutorService method guarantees all running tasks are stopped in an 
orderly fashion?
A. shutdown()
B. shutdownNow()
C. halt()
D. shutdownAndTerminate()
E. None of the above
29. Assuming 10 seconds is enough time for all of the tasks to finish, what is the output of the 
following application?
import java.util.concurrent.*;
public class Bank {
   static int cookies = 0;
   public synchronized void deposit(int amount) {
      cookies += amount;
   }
   public static synchronized void withdrawal(int amount) {
      cookies -= amount;
   }
   public static void main(String[] amount) throws Exception {
      var teller = Executors.newScheduledThreadPool(50);
      Bank bank = new Bank();
      for(int i=0; i<25; i++) {
         teller.submit(() -> bank.deposit(5));
         teller.submit(() -> bank.withdrawal(5));
      }
      teller.shutdown();
      teller.awaitTermination(10, TimeUnit.SECONDS);Concurrency 287
      System.out.print(bank.cookies);
   } }
A. 0
B. 125
C. -125
D. The code does not compile.
E. The result is unknown until runtime.
F. An exception is thrown.
30. What is the output of the following application?
import java.util.*;
public class SearchList<T> {
   private List<T> data;
   private boolean foundMatch = false;
   public SearchList(List<T> list) {
      this.data = list;
   }
   public void exists(T v,int start, int end) {
      if(end-start==0) {}
      else if(end-start==1) {
         foundMatch = foundMatch || v.equals(data.get(start));
      } else {
         final int middle = start + (end-start)/2;
         new Thread(() -> exists(v,start,middle)).run();
         new Thread(() -> exists(v,middle,end)).run();
      }
   }
   public static void main(String[] a) throws Exception {
      List<Integer> data = List.of(1,2,3,4,5,6);
      SearchList<Integer> t = new SearchList<Integer>(data);
      t.exists(5, 0, data.size());
      System.out.print(t.foundMatch);
   } }
A. true
B. false
C. The code does not compile.
D. The result is unknown until runtime.
E. An exception is thrown.
F. None of the above.Java I/O API
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Java I/O API
✓■ Read and write console and file data using I/O Streams
✓■ Implement serialization and deserialization techniques on 
Java objects
✓■ Handle file system objects using java.nio.file API
Chapter 
9290 Chapter 9 ■ Java I/O API
1. The following code snippet results in an exception at runtime. Which of the following is the 
most likely type of exception to be thrown?
var oldHardDrivePath = Path.get("c://rodent/mouse.txt");
var newHardDrivePath = Path.get("d://rodent/rat.txt");
Files.move(oldHardDrivePath,newHardDrivePath,
   StandardCopyOption.REPLACE_EXISTING);
A. AtomicMoveNotSupportedException
B. DirectoryNotEmptyException
C. FileAlreadyExistsException
D. The code does not compile.
E. None of the above.
2. What is the result of compiling and executing the following program?
package vacation;
import java.io.*;
import java.util.*;
public class Itinerary {
   private List<String> activities = new ArrayList<>();
   private static Itinerary getItinerary(String name) {
      return null;
   }
   public static void printItinerary() throws Exception {
      Console c = new Console();
      final String name = c.readLine("What is your name?");
      final var stuff = getItinerary(name);
      stuff.activities.forEach(s -> c.printf(s));
   }
   public static void main(String[] h) throws Exception {
      printItinerary();
   }
}
A. The code does not compile.
B. The code compiles and prints a NullPointerException at runtime.
C. The code compiles but does not print anything at runtime.
D. The code compiles and prints the value the user enters at runtime.
E. The behavior cannot be determined until runtime.
F. None of the above.Java I/O API 291
3. Assuming the file path referenced in the following class is accessible and writable, what is the 
output of the following program? (Choose two.)
String fn = "icecream.txt";
try (var w = new BufferedWriter(new FileOutputStream(fn));
     var s = System.out) {
   w.write("ALERT!");
   w.flush();
   w.write('!');
   System.out.print("1");
} catch (IOException e) {
   System.out.print("2");
} finally {
   System.out.print("3");
}
A. 1
B. 23
C. 13
D. The code does not compile.
E. If the code compiles or the lines that do not compile are fixed, then the last value output 
is 3.
F. If the code compiles or the lines that do not compile are fixed, then the last value output 
is not 3.
4. What is the expected output of the following application? Assume the directories referenced 
in the class do not exist prior to the execution and that the file system is available and able to 
be written.
package job;
import java.nio.file.*;
public class Resume {
   public void writeResume() throws Exception {
      var f1 = Path.of("/templates/proofs");
      f1.createDirectories();
      var f2 = Path.of("/templates");
      f2.createDirectory(); // k1
      try(var w = Files.newBufferedWriter(
            Path.of(f2.toString(), "draft.txt"))) {
         w.append("My dream job");
         w.flush();
      }
      f1.delete(f1);
      f2.delete(f2);        // k2
   }
 
   public static void main(String... leads) {
      try {
         new Resume().writeResume();
      } catch (Exception e) {
         e.printStackTrace();
      } } }
A. One line of this application does not compile.
B. Two lines of this application do not compile.
C. The code compiles, but line k1 triggers an exception at runtime.
D. The code compiles, but line k2 triggers an exception at runtime.
E. The code compiles and runs without printing an exception.
F. None of the above.
5. Which classes are least likely to be marked Serializable. (Choose two.)
A. A class that monitors the state of every thread in the application
B. A class that holds data about the amount of rain that has fallen in a given year
C. A class that manages the memory of running processes in an application
D. A class that stores information about apples in an orchard
E. A class that tracks the amount of candy in a gumball machine
F. A class that tracks which users have logged in
6. What is the output of the following code snippet? Assume that the current directory is the 
root path.
Path p1 = Path.of("./found/../keys");
Path p2 = Paths.get("/lost/blue.txt");
System.out.println(p1.resolve(p2));
System.out.println(p2.resolve(p1));
A. /lost/blue.txt and /lost/blue.txt/keys
B. /found/../keys/./lost/blue.txt and /lost/blue.txt/keys
C. /found/../keys/./lost/blue.txt and keys
D. /lost/blue.txt and /lost/blue.txt/./found/../keys
E. The code does not compile.
F. None of the above.Java I/O API 293
7. Fill in the blanks: Writer is a(n) ______________ that related stream classes ______________.
A. concrete class, extend
B. abstract class, extend
C. abstract class, implement
D. interface, extend
E. interface, implement
F. None of the above
8. Assuming /away/baseball.txt exists and is accessible, what is the expected result of 
executing the following code snippet?
var p1 = Path.of("baseball.txt");
var p2 = Path.of("/home");
var p3 = Path.of("/away");
Files.createDirectories(p2);
Files.copy(p3.resolve(p1),p2);
A. A new file /home/baseball.txt is created.
B. A new file /home/away/baseball.txt is created.
C. The code does not compile.
D. The code compiles, but an exception is printed at runtime.
E. The output cannot be determined until runtime.
F. None of the above.
9. Assuming the file referenced in the following snippet exists and contains five lines with the 
word eggs in them, what is the expected output?
var p = Path.of("breakfast.menu");
Files.readAllLines(p)
   .filter(s -> s.contains("eggs"))
   .collect(Collectors.toList())
   .forEach(System.out::println);
A. No lines will be printed.
B. One line will be printed.
C. Five lines will be printed.
D. More than five lines will be printed.
E. The code does not compile.
F. None of the above.
10. What is the output of the following program? Assume the file paths referenced in the class 
exist and are able to be written to and read from.
import java.io.*;
public class Vegetable implements Serializable {
   private Integer size = 1;
   private transient String name = "Red";
   { size = 3; name = "Purple"; }
   public Vegetable() { this.size = 2; name = "Green"; }
   public static void main(String[] love) throws Throwable {
      try (var o = new ObjectOutputStream(
            new FileOutputStream("healthy.txt"))) {
         final var v = new Vegetable();
         v.size = 4;
         o.writeObject(v);
      }
      
      try (var o = new ObjectInputStream(
            new FileInputStream("healthy.txt"))) {
         var v = (Vegetable) o.readObject();
         System.out.print(v.size + "," + v.name);
      } } }
A. 1,Red
B. 2,Green
C. 2,null
D. 3,Purple
E. 4,null
F. null,null
G. None of the above
11. Why does Console readPassword() return a char array rather than a String?
A. It improves performance.
B. It improves security.
C. Passwords must be stored as a char array.
D. String cannot hold the individual password characters.
E. It adds encryption.
F. None of the above.Java I/O API 295
12. Given the following class inheritance diagram, which two classes can be placed in the 
blank boxes?
FilterOutputStream
OutputStream
A. BufferedOutputStream and PrintStream
B. BufferedOutputStream and PrintOutputStream
C. ByteArrayOutputStream and Stream
D. FileOutputStream and OutputStream
E. ObjectOutputStream and PrintOutputStream
F. None of the above
13. How many lines of the following code contain compiler errors?
12: var path = Paths.get(new URI("ice.cool"));
13: var view = Files.readAttributes(path, 
14:    BasicFileAttributes.class);
15: Files.createDirectories(Path.relativize(".backup"));
16: if(view.length() > 0 && view.isDirectory())
17:    view.setTimes(null,null,null);
18: System.out.println(Files.deleteIfExists(path));
A. All of the lines compile
B. One
C. Two
D. Three
E. Four or more
14. What is the output of the following application?
import java.io.*;
public class TaffyFactory {
   public int getPrize(byte[] luck) throws Exception {
      try (InputStream is = new ByteArrayInputStream(luck)) {
         is.read(new byte[2]);
         if (!is.markSupported()) return -1;
         is.mark(5);
         is.read(); is.read();
         is.skip(3);
         is.reset();
         return is.read();
      }
   }
   public static void main(String[] x) throws Exception {
      final TaffyFactory p = new TaffyFactory();
      final var luck = new byte[] { 1, 2, 3, 4, 5, 6, 7 };
      System.out.print(p.getPrize(luck));
   } }
A. -2
B. 2
C. 3
D. 5
E. 7
F. An exception is thrown at runtime.
15. What is the output of the following program? Assume the file paths referenced in the class 
exist and are able to be written to and read from.
package heart;
import java.io.*;
public class Valve implements Serializable {
   private int chambers = -1;
   private transient Double size = null;
   private static String color;
   public Valve() {
      this.chambers = 3;
      color = "BLUE";
   }
   public static void main(String[] love) throws Throwable {
      try (var o = new ObjectOutputStream(
            new FileOutputStream("scan.txt"))) {
         final Valve v = new Valve();
         v.chambers = 2;
         v.size = 10.0;
         v.color = "RED";
         o.writeObject(v);
      }Java I/O API 297
      new Valve();
      try (var o = new ObjectInputStream(
            new FileInputStream("scan.txt"))) {
         Valve v = (Valve)o.readObject();
         System.out.print(v.chambers+","+v.size+","+v.color);
      }
   }
   { chambers = 4; }
}
A. 2,null,RED
B. 2,null,BLUE
C. 3,10.0,RED
D. 3,10.0,BLUE
E. 0,null,null
F. None of the above
16. Given the following file system diagram, in which forward is a symbolic link to the java 
directory, which values if inserted into the following code do not print /java/Sort.java 
at runtime? (Choose two.)
/
java objC
Sort.java Sort.class Heap.m bin
Heap.exe
forward
Path p = Path.of("/", "objC", "bin");
System.out.print(p.resolve(" ").toRealPath());
A. objC/forward/Sort.java
B. ../backwards/../forward/Sort.java
C. ../forward/./Sort.java
D. ../java/./forward/Sort.java
E. ../../java/Sort.java
F. .././forward/Sort.java
17. Which method defined in Reader can be used in place of calling skip(1)?
A. jump()
B. mark()
C. markSupported()
D. read()
E. reset()
F. None of the above
18. The Rose application is run with an input argument of /flower. The /flower directory 
contains five subdirectories, each of which contains five files. What is the result of executing 
the following program?
import java.nio.file.*;
public class Rose {
   public void tendGarden(Path p) throws Exception {
      Files.walk(p,1)
         .map(q -> q.toRealPath())
         .forEach(System.out::println);
   }
   public static void main(String... thorns) throws Exception {
      new Rose().tendGarden(Paths.get(thorns[0]));
   }
}
A. The program completes without outputting anything.
B. One Path value is printed.
C. Six Path values are printed.
D. Twenty-five Path values are printed.
E. Twenty-six Path values are printed.
F. None of the above.
19. What may be the result of executing the following program?
package test;
import java.io.*;
public class Turing {
   public static void main(String... robots) {
      Console c = System.console();
      final String response = c.readLine("Are you human?");
      System.err.print(response);
   }
}Java I/O API 299
A. The program asks the user a question and prints the results to the error stream.
B. The program throws a NullPointerException at runtime.
C. The program does not terminate.
D. All of the above.
E. The class does not compile.
20. What is the output of the following method applied to an InputStream that contains the first 
four prime numbers, stored as bytes: 2, 3, 5, 7?
private void jumpAround(InputStream is) throws IOException {
   try (is) {
      is.skip(1);
      is.read();
      is.skip(1);
      is.mark(4);
      is.skip(1);
      is.reset();
      System.out.print(is.read());
   }
}
A. 5
B. 7
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
E. The result cannot be determined until runtime.
F. None of the above.
21. Which statement about the following method is correct? Assume the directory /tea/ 
earlGrey/hot exists and is able to be read.
void order() throws Exception {
   var s = Path.of("/tea","earlGrey","hot");
   Files.find(s, (p,a) -> a.isDirectory());
}
A. It does not compile.
B. It compiles but does not print anything at runtime.
C. It compiles and prints true exactly once at runtime.
D. It compiles and prints true at least once.
E. The answer cannot be determined without knowing the contents of the directory.
F. None of the above.
22. Which method are classes that implement java.io.Serializable required to 
implement?
A. cereal()
B. deserialize()
C. serial()
D. serialize()
E. clone()
F. None of the above
23. What is the result of compiling and executing the following program? Assume the current 
directory is /stock and the path /stock/sneakers does not exist prior to execution.
package shoe;
import java.io.*;
import java.nio.file.*;
public class Sneaker {
   public void setupInventory(Path d) throws Exception {
      Path suggestedPath = Paths.get("sneakers");
      if(Files.isSameFile(suggestedPath, d)           // j1
            && !Files.exists(suggestedPath))
         Files.createDirectories(d);                  // j2
   }
   public static void main(String[] socks) throws Exception {
      Path w = new File("/stock/sneakers").toPath();  // j3
      new Sneaker().setupInventory(w);
   }
}
A. The directory /stock/sneakers is created.
B. Line j1 does not compile or produces an exception at runtime.
C. Line j2 does not compile or produces an exception at runtime.
D. Line j3 does not compile or produces an exception at runtime.
E. None of the above.
24. Assuming the absolute path referenced in the code exists and its contents are accessible, 
which statement about the following code snippet is correct?
Path p = Paths.get("/glasses/lens");
 
Files.walk(p)
   .map(z -> z.toAbsolutePath().toString())
   .filter(s -> s.endsWith(".java"))
   .collect(Collectors.toList()).forEach(System.out::println);Java I/O API 301
Files.find(p,Integer.MAX_VALUE,
      (w,a) -> w.toAbsolutePath().toString().endsWith(".java"))
   .collect(Collectors.toList()).forEach(System.out::println);
A. The first stream statement does not compile.
B. The second stream statement does not compile.
C. Neither statement compiles.
D. Both statements compile and produce the same result at runtime.
E. None of the above.
25. When reading file information, what is an advantage of using an NIO.2 attribute interface 
rather than reading the values individually using Files methods? (Choose two.)
A. Costs fewer round-trips to the file system
B. Guarantees performance improvement
C. Has support for symbolic links
D. Reduces memory leaks
E. Supports file-system dependent attributes
F. Reduces resource leaks
26. Suppose that you need to read data that consists of serialized int, double, boolean, 
and String values from a file. You also want the program to be performant on large files. 
Which three java.io stream classes can be chained together to best achieve this result? 
(Choose three.)
A. BufferedInputStream
B. FileReader
C. ObjectInputStream
D. BufferedReader
E. BufferedStream
F. FileInputStream
27. Which statement about the following method is correct? Assume the directory coffee exists 
and is able to be read.
void brew() throws Exception {
   final var m = Path.of("coffee");
   Files.walk(m)
      .filter(Files::isDirectory)
      .forEach(Files::isDirectory);
}
A. It does not compile.
B. It compiles but does not print anything at runtime.
C. It compiles and prints true exactly once at runtime.
D. It compiles and prints true at least once.
E. The answer cannot be determined without knowing the contents of the directory.
F. None of the above.
28. Assuming the file referenced in the StudentManager class exists and contains data, which 
statement about the following class is correct? (Choose two.)
package school;
import java.io.*;
class Student implements Serializable {
   transient int score = -1;
   String name;
   public String toString() { return name + ":" + score; }
}
public class StudentManager {
   public static void main(String[] grades) {
      try(var ios = new ObjectInputStream(
            new FileInputStream(new File("s.data")))) {
         Student record;
         while((record = (Student)ios.readObject()) != null)
            System.out.print(record);
      } catch (EOFException e) {
      } catch (Exception e) {
         throw new RuntimeException(e);
      }
   }
}
A. The code does not compile.
B. The code compiles but prints an exception at runtime.
C. The program runs and prints all students in the file.
D. The program runs but may only print some students in the files.
E. For any instance of Student that is correctly deserialized, the value of score will be -1.
F. For any instance of Student that is correctly deserialized, the value of score will not be 
-1.
29. Given an instance of Console c, which of the following two method calls are invalid ways 
of retrieving input from the user? (Choose two.)
A. c.read()
B. c.reader().read()
C. c.reader().readLine()
D. c.readLine()
E. c.readPassword()
30. What is the output of the following code snippet? Assume that the current directory is the 
root path /.
Path p1 = Paths.get("./locks");
Path p2 = Paths.get("/found/red.zip");
System.out.println(p1.relativize(p2));Java I/O API 303
System.out.println(p2.relativize(p1));
A. ../found/red.zip and ../../locks
B. /found/red.zip and /found/red.zip/./locks
C. locks/../found/red.zip and ../found/locks
D. ../../locks and ../found/red.zip
E. /found/red.zip and /found/red.zip/locks
F. None of the above
31. Assuming the current working directory is /home, then what is the output of the follow-
ing program?
1:  package magic;
2:  import java.nio.file.*;
3:  public class Magician {
4:     public String doTrick(Path path) {
5:        return path.subpath(2,3)
6:           .getName(1)
7:           .toAbsolutePath()
8:           .toString();
9:     }
10:    public static void main(String... cards) {
11:       final Magician m = new Magician();
12:       System.out.print(m.doTrick(
13:          Paths.get("/bag/of/tricks/.././disappear.txt")));
14:    } }
A. /home/tricks
B. /home
C. tricks
D. The code does not compile.
E. The code compiles but prints an exception at runtime.
F. None of the above.
32. Which statements about the Files methods lines() and readAllLines() are correct? 
(Choose two.)
A. They have different return types.
B. The readAllLines() method is always faster.
C. The lines() may require more memory.
D. They have the same return type.
E. The lines() method is always faster.
F. The readAllLines() method may require more memory.
33. Given the following application, in which a user enters bone twice, what is the 
expected result?
long start = System.currentTimeMillis();
var retriever = new BufferedReader(new 
   InputStreamReader(System.in));
try(retriever; var husky = System.err) {
   var fetch = retriever.readLine();
   System.out.printf("%s fetched in %5.1f seconds",fetch, // v1
      (System.currentTimeMillis()-start)/1000.0);
}
var fetchAgain = retriever.readLine();
System.out.println(fetchAgain + " fetched again!");
A. The program completes after printing a message once.
B. The program completes after printing a message twice.
C. An IOException is thrown.
D. The program prints an exception because the format of the String on line v1 is invalid.
E. A NullPointerException is thrown since System.in may be unavailable.
F. None of the above as the code does not compile.
34. What is the expected result of calling deleteTree() on a directory? Assume the directory 
exists and is able to be modified.
import java.nio.file.*;
public class Exterminate {
   public void deleteTree(Path q) {
      if (!Files.isDirectory(q))
         Files.delete(q);
      else {
         Files.list(q).forEach(this::deleteTree);
         Files.delete(q);
      } } }
A. It will delete the directory itself only.
B. It will delete the directory and its file contents only.
C. It will delete the entire directory tree.
D. The code does not compile.
E. The code compiles but produces an exception at runtime.
F. None of the above.Java I/O API 305
35. Which code, if inserted into the method, will cause it to correctly copy any file passed to it 
that is accessible? (Choose two.)
void copyFile(String source, String target) throws Exception {
   try (var is = new FileInputStream(source);
         OutputStream os = new FileOutputStream(target)) {
      byte[] data = new byte[123];
      int chirps;
 
      // INSERT CODE HERE
   }
}
A. 
while (is.read(data) > 0)
   os.write(data);
B. 
while ((chirps = is.read(data)) > 0)
   os.write(data, 0, chirps);
C. 
while ((chirps = is.read(data)) > 0)
   os.write(data);
D. 
while ((chirps = is.read(data)) > 0)
   os.write(data, chirps, data.length);
E. 
String line;
while ((line = is.readLine()) != null)
   os.write(line + "\n");
F. 
while ((chirps = is.read()) > 0)
   os.write(chirps);
36. Let’s say we want to write an instance of Cereal to disk, having a name value of  
CornLoops and sugar value of 5. What is the value of name and sugar after this object 
has been read from disk using the ObjectInputStream’s readObject() method?
package breakfast;
import java.io.Serializable;
class Bowl {
   boolean spoon = true;
   // Getters/Setters Omitted
}
public class Cereal implements Serializable {
   private String name = "CocoaCookies";
   private transient int sugar = 10;
   private Bowl bowl;
   public Cereal() {
      super();
      this.name = "CaptainPebbles";
      this.bowl = new Bowl();
      sugar = 2;
   }
   { name = "SugarPops"; }
   // Getters/Setters Omitted
}
A. CaptainPebbles and 10
B. CornLoops and 0
C. SugarPops and 10
D. SugarPops and 2
E. CornLoops and -1
F. None of the above
37. What is the output of the following code snippet?
11: var halleysComet = Path.of("stars/./rocks/../m1.meteor")
12:    .subpath(1, 5).normalize();
13:
14: var lexellsComet = Paths.get("./stars/../solar/");
15: lexellsComet.subpath(1, 3)
16:    .resolve("m1.meteor").normalize();
17:
18: System.out.print(halleysComet.equals(lexellsComet) ? 
19:    "Same!" : "Different!");
A. Same!
B. Different!
C. The code does not compile.
D. The class compiles but throws an exception at runtime.
E. None of the above.Java I/O API 307
38. During deserialization from an I/O stream, which element of the class can be used to assign a 
value to the deserialized object?
A. Variable initializer
B. Instance initializer
C. Static initializer
D. Constructor
E. The restoreObject() method
F. None of the above
39. Assuming there are no symbolic links involved and file /nursery/sapling.seed exists, 
which statements about the following code snippet are correct? (Choose three.)
Files.move(
   Paths.get("/nursery/sapling.seed"),
   Paths.get("/forest"),
   StandardCopyOption.ATOMIC_MOVE);
A. The code may throw an exception at runtime.
B. The code may complete without throwing an exception at runtime.
C. After it runs, the new location of the file would be /nursery/sapling.seed
D. After it runs, the new location of the file would be /forest/sapling.seed
E. If a process is monitoring the move, it will not see an incomplete file.
F. If a process is monitoring the move, it could see an incomplete file.
40. What is the output of the following application? Assume /all-data exists and is accessible 
within the file system.
1:  package sesame;
2:  import java.nio.file.*;
3:  import java.util.stream.*;
4:  public class TheCount {
5:     public static Stream<String> readLines(Path p) {
6:        try { return Files.lines(p); } catch (Exception e) {
7:           throw new RuntimeException(e);
8:        }
9:     }
10:    public static long count(Path p) throws Exception {
11:       return Files.list(p)
12:             .filter(w -> Files.isRegularFile(w))
13:             .flatMap(s -> readLines(s))
14:             .count();
15:    }
16:    public static void main(String[] d) throws Exception {
17:       System.out.print(count(Paths.get("/all-data")));
18:    } }
A. The code does not compile.
B. The number of lines in all files in a directory tree.
C. The number of lines in all files in a single directory.
D. The code hangs indefinitely at runtime.
E. An exception is printed at runtime.
F. None of the above.Secure Coding in 
Java SE Application
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Secure Coding in Java SE Application
✓■ Develop code that mitigates security threats such as denial 
of service, code injection, input validation and ensure 
data integrity
✓■ Secure resource access including filesystems, manage policies 
and execute privileged code
Chapter 
10310 Chapter 10 ■ Secure Coding in Java SE Application
1. Which statement best describes this class?
import java.util.*;
public final class Forest {
   private final int flora;
   private final List<String> fauna;
 
   public Forest() {
      this.flora = 5;
      this.fauna = new ArrayList<>();
   }
   
   public int getFlora() {
      return flora;
   }
   public List<String> getFauna() {
      return fauna;
   }
}
A. It can be serialized.
B. It is well encapsulated.
C. It is immutable.
D. It is both well encapsulated and immutable.
E. None of the above as the code does not compile.
2. Fill in the blanks: The ___________ class variable defines a whitelist of fields that should be 
serialized, while the ___________ modifier is used to construct a blacklist of fields that should 
not be serialized. (Choose two.)
A. serialVersionUID in the first blank
B. serialFields in the first blank
C. serialPersistentFields in the first blank
D. ignore in the second blank
E. transient in the second blank
F. skip in the second blank
3. Which statement best describes the following method?
public String findNewLego(String url, String type) 
      throws SQLException {
   var query = "SELECT name FROM sets WHERE "
      + "type = " + type + " ORDER BY date DESC";Secure Coding in Java SE Application 311
   var con = DriverManager.getConnection(url);
   try(con; 
      var ps = con.createStatement(); 
      var rs = ps.executeQuery(query)) {
 
      if(rs.next()) return rs.getString(1);
   }
   throw new RuntimeException("None available, try  later");
}
A. It is not susceptible to any common attacks.
B. It is at risk of SQL injection attack only.
C. It is at risk of a denial of service attack only.
D. It is at risk of both SQL injection and denial of service attacks.
E. The method does not compile.
F. None of the above.
4. Fill in the blanks: ____________ means the state of an object cannot be changed, while 
_____________ means that it can.
A. Encapsulation, factory method
B. Immutability, mutability
C. Rigidity, flexibility
D. Static, instance
E. Tightly coupled, loosely coupled
F. None of the above
5. Which of the following best protect against denial of service attacks? (Choose three.)
A. Close resources with catch blocks.
B. Use PreparedStatement instead of Statement.
C. Close resources with try-with-resources statements.
D. Set a limit of the size of a file upload.
E. Set a limit on the size of a numeric input value.
F. Use immutable objects.
6. You ask to borrow one of your friend’s recipe cards. Which statements about these cards, 
represented as Java policy file grants, are correct? (Choose two.)
grant {
   permission java.io.FilePermission 
      "/dessert/icecream/rockyroad.yum", "read,write";
   permission java.io.FilePermission
      "/dessert/icecream/mintchip.yum", "read";
};
A. The policy syntax of the policy file is correct.
B. The policy syntax of the policy file is incorrect.
C. The policy is incorrect because read should not be included in the first permission.
D. The policy is incorrect because write should not be included in the first permission.
E. The policy is incorrect because read should not be included in the second permission.
F. The policy is incorrect because file permissions cannot be granted this way.
7. Which of the following best protect against inclusion attacks? (Choose two.)
A. Encrypt user passwords.
B. Use immutable objects.
C. Limit the recursive depth of ZIP files.
D. Apply a blacklist to the input data.
E. Turn the computer off when not in use.
F. Restrict the number of parse levels of XML files.
8. What changes, taken together, would make the Tree class immutable? (Choose three.)
1:  public class Tree {
2:     String species;
3:     public Tree(String species) {
4:        this.species = species;
5:     }
6:     public String getSpecies() {
7:        return species;
8:     }
9:     private final void setSpecies(String newSpecies) {
10:       species = newSpecies;
11:    }
12: }
A. Make all constructors private.
B. Change the access level of species to private.
C. Change the access level of species to protected.
D. Remove the setSpecies() method.
E. Mark the Tree class final.
F. Make a defensive copy of species in the Tree constructor.Secure Coding in Java SE Application 313
9. Which techniques best prevent sensitive objects from being manipulated by an attacker who 
wants to create a malicious subclass? (Choose three.)
A. Add final to the class declaration.
B. Set protected as the access level for all method declarations.
C. Add final to all method declarations.
D. Add final to all instance variable declarations.
E. Add final to all constructors.
F. Set private as the access level for all constructors.
10. Which statement best describes the following method?
public String findNewLego(String url, int type) 
      throws SQLException {
   var query = "SELECT name FROM sets WHERE "
      + "type = " + type + " ORDER BY date DESC";
   var con = DriverManager.getConnection(url);
   var ps = con.createStatement();
   try(con; ps; var rs = ps.executeQuery(query)) {
      if(rs.next()) return rs.getString(1);
   }
   throw new RuntimeException("None available, try  later");
}
A. It is not susceptible to any common attacks.
B. It is at risk of SQL injection attack only.
C. It is at risk of a denial of service attack only.
D. It is at risk of both SQL injection and denial of service attacks.
E. The method does not compile.
F. None of the above.
11. Which statements about executing the following program are correct? (Choose two.)
import java.security.*;
import java.util.*;
 
public class MagicTrick {
   private static final String WORD = "abracadabra";
   private static List<String> trick = new ArrayList<>();
   public static List<String> castSpell(String magic) {
      return AccessController.doPrivileged(
            new PrivilegedAction<List<String>>() {
         public List<String> run() {
            if (magic.equalsIgnoreCase(WORD)) {         // p1
               if(trick.isEmpty())
                  trick.add(System.getProperty(magic)); // p2
               return trick;                            // p3
            }
            throw new SecurityException("Incorrect code");
         }
      });
   }
   public static void main(String[] args) {
      if(args != null && args.length>0)
         System.out.print(MagicTrick.castSpell(args[0]));
   } }
A. Line p1 makes the code susceptible to tainted inputs from the user.
B. Line p2 makes the code susceptible to tainted inputs from the user.
C. Line p3 makes the code susceptible to tainted inputs from the user.
D. The code is not susceptible to tainted inputs from the user.
E. Line p1 exposes sensitive information.
F. Line p2 exposes sensitive information.
G. Line p3 exposes sensitive information.
H. The code does not expose any sensitive information.
12. How do you change the value of an instance variable in an immutable class?
A. Call the setter method.
B. Remove the final modifier and set the instance variable directly.
C. Create a new instance with an inner class.
D. Use a method other than Option A, B, or C.
E. You can’t.
13. Let’s say you want to serialize the following class, but only want the flour quantity saved. 
What changes, if any, are required to the following class for this to occur?
import java.io.*;
public class Muffin {
   private Double flour;
   private Integer eggs;
   private Float sugar;
   private final ObjectStreamField[] serialPersistentFields = 
      { new ObjectStreamField("flour", Double.class) };
}Secure Coding in Java SE Application 315
A. No changes are required.
B. Mark eggs and sugar as transient.
C. Remove the serialPersistentFields variable.
D. Remove the final modifier from the serialPersistentFields variable.
E. Add a missing modifier to the serialPersistentFields variable.
F. None of the above.
14. Which are true about closing resources to guard against a denial of service attack? 
(Choose two.)
A. The NIO.2 Files.lines() method does not require closing a resource when it is used 
in a stream pipeline.
B. The NIO.2 Files.lines() method requires closing a resource when it is used in a 
stream pipeline.
C. When locking a resource using an instance of the concurrent Lock interface, the unlock() 
statement should be immediately before the finally block.
D. When locking a resource using an instance of the concurrent Lock interface, the unlock() 
statement should be in a finally block.
E. When locking a resource using an instance of the concurrent Lock interface, the unlock() 
statement should be immediately after the finally block.
15. Which type of attack requires more than one source to initiate?
A. Billion laughs attack
B. Million frowns attack
C. Distributed denial of service attack
D. SQL injection
E. Inclusion attack
F. Denial of service attack
16. What is this class an example of?
import java.util.*;
public class Nightclub {
   private List<String> approved = // IMPLEMENTATION OMITTED
   private List<String> rejected = // IMPLEMENTATION OMITTED
   public boolean checkAccess(String name) {
      var grantAccess = approved.contains(name) 
         || rejected.contains(name);
      return grantAccess;
   } }
A. Turquoiselist
B. Whitelist
C. Orangelist
D. Blacklist
E. Both blacklist and whitelist
F. None of the above
17. Which statements about the clone() method are correct? (Choose two.)
A. Calling clone() on a class that does not implement Cloneable results in a compiler error.
B. Calling clone() on a class that does not implement Cloneable results in an exception at 
runtime.
C. If a class implements Cloneable and does not override the clone() method, then the code 
does not compile.
D. If a class implements Cloneable and does not override the clone() method, then an 
exception is thrown at runtime.
E. Overriding the clone() method in a class that implements Cloneable guarantees at least a 
shallow copy will be performed.
F. Overriding the clone() method in a class that implements Cloneable may result in a deep 
copy.
18. Which statements about securing confidential information are correct? (Choose three.)
A. When writing to System.out, you should not include sensitive information.
B. When reading sensitive data from a Console, you should use readLine().
C. When throwing an exception, it is acceptable to include sensitive information in  
the message.
D. A String is not a good object type for sensitive data.
E. A Java policy should only grant the permission lock to prevent a user from modifying 
the file.
F. A Java policy should only grant the permission read to prevent a user from modifying 
the file.
19. What are the best scenarios for customizing the serialization process? (Choose two.)
A. To prevent SQL injection.
B. To shuffle data among users.
C. It is the only way to prevent a sensitive field like birthdate from being written to disk.
D. To improve performance by applying advanced optimization techniques.
E. To encrypt a password before it is saved to disk.
F. To customize the handling of certain user sensitive data like a Social Security number.
20. Select a good strategy for handling input validation failures?
A. Use the assert statement.
B. Throw an Error.
C. Log an error but allow the user to continue.
D. Throw an Exception.Secure Coding in Java SE Application 317
E. Shut down the computer.
F. None of the above.
21. Which statements about executing the following program are correct? (Choose two.)
import java.security.*;
 
public class PrintScores {
   private static final String CODE = "12345";
   private static final String SCORES = "test.scores";
   public static String getScores(String accessCode) {
      return AccessController.doPrivileged(
            new PrivilegedAction<String>() {
         public String run() {
            if(accessCode.equals(CODE))           // m1
               return System.getProperty(SCORES); // m2
            throw new SecurityException("Incorrect code");
         }
      });
   }
 
   public static void main(String[] args) {
      if(args != null && args.length>0)
         System.out.print(PrintScores.getScores(args[0]));
   } }
A. Line m1 makes the code susceptible to tainted inputs from the user.
B. Line m2 makes the code susceptible to tainted inputs from the user.
C. The code is not susceptible to tainted inputs from the user.
D. The code is susceptible to an injection attack.
E. The code is not susceptible to an injection attack.
F. The code is susceptible to an injection only if executed with a number as input.
22. Which can fill in the blank to make this code compile?
import java.io.*;
public class Pony implements Serializable {
   private static final ObjectStreamField[] 
      serialPersistentFields = { new ObjectStreamField("name", 
         String.class) };
   private String name;
   private Integer age;
   private void readObject(ObjectInputStream s)
         throws Exception {
      ObjectInputStream.  fields = s.readFields();
      this.name = (String) fields.get("name", null);
   } }
A. GetObject
B. ReadField
C. FetchItem
D. ReadItem
E. GetField
F. None of the above
23. Which statement about the following classes is correct?
import java.util.*;
public class Flower {
   private final String name;
   private final List<Integer> counts;
   public Flower(String name, List<Integer> counts) {
      this.name = name;
      this.counts = new ArrayList<>(counts);
   }
   public final String getName() { return name; }
   public final List<Integer> getCounts() {
      return new ArrayList<>(counts);
   } }
 
class Plant {
   private final String name;
   private final List<Integer> counts;
   public Plant(String name, List<Integer> counts) {
      this.name = name;
      this.counts = new ArrayList<>(counts);
   }
   public String getName() { return name; }
   public List<Integer> getCounts() {
      return new ArrayList<>(counts);
   } }
A. Only Flower is immutable.
B. Only Plant is immutable.
C. Both classes are immutable.Secure Coding in Java SE Application 319
D. Neither class is immutable.
E. None of the above as one of the classes does not compile.
24. Which of the following can cause an injection attack? (Choose two.)
A. Access control
B. Command line input
C. Constants in the program
D. Mutable code
E. Serialization
F. XML parsing
25. Assuming this class is passed a valid non-negative integer, which statements best describe the 
following class? (Choose two.)
public class Charity {
   private int numberRequests = 0;
   public synchronized int getNumberOfRequests() {
      return numberRequests;
   }
 
   private void callDatabaseToDonateADollar() {
      // IMPLEMENTATION OMITTED
   }
 
   public synchronized void donateDollar(int numDollars) {
      numberRequests++;
      for(int i=0; i<numDollars; i++) {
         callDatabaseToDonateADollar();
      }
   }
   
   public static void main(String[] args) {
      final var humanFund = new Charity();
      humanFund.donateDollar(Integer.valueOf(args[0]));
      System.out.print(humanFund.getNumberOfRequests());
   } }
A. It is well encapsulated.
B. It is susceptible to a denial of service attack.
C. It creates an immutable object.
D. It is susceptible to an inclusion attack.
E. It is not thread-safe.
F. It is susceptible to an exploit attack.
26. In which scenario is it appropriate for confidential information to be used?
A. Writing to a log file
B. Printing a stack trace
C. Outputting to System.err
D. Storing in a String
E. Writing an unsecure email
F. None of the above
27. What statements about the following method are correct? (Choose three.)
public String checkAlarm(String connectionStr, boolean alarmed)
      throws SQLException {
   var query = "SELECT * FROM office WHERE alarmed = true";
   var con = DriverManager.getConnection(connectionStr);
   var stmt = con.createStatement();
   try (con; 
         stmt;
         var rs = stmt.executeQuery(query)) {
      return rs.next() ? rs.getString("address") : null;
   } }
A. It protects against a denial of service attack.
B. It does not protect against denial of service attacks.
C. It protects against SQL injection.
D. It does not protect against SQL injection because it does not use a PreparedStatement.
E. Even if the method completes without throwing an exception, a resource leak might 
occur.
F. If the method completes without throwing an exception, then no resource leak can 
occur.
28. Which statement best describes this class?
import java.util.*;
public final class Ocean {
   private final List<String> algae;
   private final double wave;
   private int sun;
   
   public Ocean(double wave) {
      this.wave = wave;
      this.algae = new ArrayList<>();
   }Secure Coding in Java SE Application 321
   public int getSun() {
      return sun;
   }
   public void setSun(int sun) {
      sun = sun;
   }
   public double getWave() {
      return wave;
   }
   public List<String> getAlgae() {
      return new ArrayList<String>(algae);
   }
}
A. It can be serialized.
B. It is well encapsulated.
C. It is immutable.
D. It is both well encapsulated and immutable.
E. None of the above as the code does not compile.
29. Which are true about this class? (Choose three.)
import java.io.*;
import java.util.*;
public final class Forest implements Serializable {
   public final int flora;
   public final List<String> fauna;
 
   public Forest() {
      this.flora = 5;
      this.fauna = new ArrayList<>();
   }
   
   public int getFlora() {
      return flora;
   }
   public List<String> getFauna() {
      return new ArrayList<>(fauna);
   }
}
A. It is able to be serialized.
B. It is not able to be serialized.
C. It is well encapsulated.
D. It is not well encapsulated.
E. It is immutable.
F. It is not immutable.
30. You’ve been hired by Charlie Sweets to perform a security audit of their login system. After 
reviewing the following code, what recommendations would best improve the security of 
their system? (Choose three.)
1:  public class CandyFactory {
2:     boolean check(String username, String password) {
3:        // IMPLEMENTATION OMITTED
4:     }
5:     public void login() {
6:        var c = System.console();
7:        if(c != null) {
8:           var username = c.readLine("Username: ");
9:           var password = c.readLine("Password: ");
10:          System.out.println("["+username+","+password+"]");
11:          System.out.println(check(username,password)
12:             ? "Here is your candy"
13:             : "No candy for you");
14:       } } }
A. Mark the check() method final on line 2.
B. Remove the null check on line 7.
C. Rewrite to not use var on lines 6, 8, and 9, as it is inherently unsafe.
D. Rewrite to use readPassword() on line 8.
E. Rewrite to use readPassword() on line 9.
F. Change or remove line 10.
31. Fill in the blanks with the proper method names to serialize an object. (Choose two.)
import java.io.*;
public class DeliSandwich implements Serializable {
   public Object () throws ObjectStreamException {
      // IMPLEMENTATION OMITTED
   }
 
   private void (ObjectOutputStream out)
         throws IOException {
      // IMPLEMENTATION OMITTED
   }
}Secure Coding in Java SE Application 323
A. readResolve in the first blank
B. writeReplace in the first blank
C. writeObject in the first blank
D. writeObject in the second blank
E. readObject in the second blank
F. writeReplace in the second blank
32. Your co-worker has called you in the middle of the night to report all the servers have 
been compromised and have run out of memory. After some debugging, it seems like the 
attacker exploited a file upload resource, but you aren’t sure how since the endpoint has 
a small maximum file size limit. What is the most likely type of attack perpetrated against 
the system?
A. Denial of service attack
B. Inclusion attack
C. Distributed denial of service attack
D. Exploit attack
E. SQL injection
F. Injection attack
33. Which statements about the following class are correct? (Choose three.)
import java.security.*;
import java.util.*;
 
public class UserProfile {
   private static class UserEntry {
      private final UserProfile value;
      private final Permission permission;
      // Constructors/Getters Omitted
   }
   
   public static Permission getPermission(String check) {
      // Implementation Omitted
   }
   
   private static Map<String,UserEntry> data = new HashMap<>();
   public static UserProfile getProfile(String check) {
      var securityRecord = data.get(check);
      if (securityRecord != null)
         return securityRecord.getValue();              // h1
      var permission = getPermission(check);
      var permCol = permission.newPermissionCollection();
      permCol.add(permission);
      var prof = AccessController.doPrivileged(         // h2
         new PrivilegedAction<UserProfile>() {
            public UserProfile run() {
               return new UserProfile();
         }},
         new AccessControlContext(
            new ProtectionDomain[] {
               new ProtectionDomain(null, permCol)
            }));
      data.put(check, new UserEntry(prof, permission)); // h3
      return prof;
   } }
A. Line h1 properly validates security.
B. Line h1 presents an unacceptable security risk.
C. Line h2 elevates security privileges.
D. Line h2 does not elevate security privileges.
E. Line h3 violates security guidelines by allowing security information to be cached.
F. Line h3 does not violate security guidelines.
34. For which value of name will this code result in a successful SQL injection attack?
public Integer getScore(String connectionStr, String name)
      throws SQLException {
   var query = "SELECT score FROM records WHERE name = ?";
   var con = DriverManager.getConnection(connectionStr);
   try (con; var stmt = con.prepareStatement(query)) {
      stmt.setString(1, name);
      try(var rs = stmt.executeQuery()) {
         if(rs.next()) return rs.getInt("score");
      }
   }
   return null;
}
A. DELETE TABLE records;
B. 'Olivia'; DELETE TABLE records
C. 'Sophia; DELETE TABLE records
D. 'Elysia'; DELETE TABLE recordsSecure Coding in Java SE Application 325
E. ?; DELETE TABLE records;
F. None of the above
35. Which are requirements for a class to be immutable? (Choose three.)
A. A private constructor is provided.
B. Any instance variables are private.
C. Any instance variables are initialized in a constructor.
D. Methods cannot be overridden.
E. There are no setter methods.
F. Any instance variables are marked final.
36. Which of the following are not typically considered denial of service attacks? (Choose two.)
A. Downloading confidential information from a log file
B. Uploading a very large file
C. Performing SQL injection
D. Passing invalid numbers to trigger overflow or underflow
E. Exploiting a database resource leak
F. Uploading a zip bomb
37. The following code prints false. Which statements best describe the Fruit class? 
(Choose three.)
var original = new Fruit();
original.sweet = new ArrayList<>();
var cloned = (Fruit) original.clone();
System.out.print(original.sweet == cloned.sweet);
A. It does not implement Cloneable.
B. It performs a deep copy.
C. It performs a shallow copy.
D. It overrides clone().
E. It implements Cloneable.
F. It does not override clone().
38. What are the best ways to prevent SQL injection? (Choose two.)
A. Avoid SQL statements that take query parameters.
B. Log an error anytime a SQL injection attack is successful.
C. Avoid concatenating user input into a query string.
D. Ensure database resources are closed.
E. Always use a PreparedStatement instead of a Statement.
F. Do not use a relational database.
39. Given the following two classes, what change to the StealSecret class would allow it to read 
and email the password to a hacker?
public class Secret {
   private String mySecret;
   public void setSecret(String secret) {
      mySecret = secret;
   }
   public void printSecret() {
      throw new UnsupportedOperationException("Nope!");
   }
   private void saveToDisk() {
      // IMPLEMENTATION OMITTED
   }
}
 
public class StealSecret extends Secret {
   // DO BAD STUFF
}
A. There are no changes, as the Secret class is secure.
B. Override the mySecret variable.
C. Override the setSecret() method.
D. Override the printSecret() method.
E. Override the saveToDisk() method.
F. Add a constructor.
40. Which statement about the following classes is correct?
import java.util.*;
final class Faucet {
   private final String water;
   private final List<Double> pipes;
   public Faucet(String water, List<Double> pipes) {
      this.water = water;
      this.pipes = pipes;
   }
   public String getWater() { return water; }
   public List<Double> getPipes() { return pipes; } }
 
public final class Spout {
   private final String well;Secure Coding in Java SE Application 327
   private final List<Boolean> buckets;
   public Spout(String well, List<Boolean> buckets) {
      this.well = well;
      this.buckets = new ArrayList<>(buckets);
   }
   public String getWell() { return well; }
 
   public List<Boolean> getBuckets() {
      return new ArrayList<>(buckets);
   } }
A. Only Faucet is immutable.
B. Only Spout is immutable.
C. Both classes are immutable.
D. Neither class is immutable.
E. None of the above as one of the classes does not compile.Database 
Applications 
with JDBC
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Database Applications with JDBC
✓■ Connect to and perform database SQL operations, process 
query results using JDBC API
Chapter 
11330 Chapter 11 ■ Database Applications with JDBC
1. How many of Connection, Driver, DriverManager, PreparedStatement, and 
ResultSet are JDBC interfaces included with the JDK?
A. None
B. One
C. Two
D. Three
E. Four
F. Five
2. Which is found in the java.sql package that come with the standard JDK?
A. Only DerbyDriver
B. Only MySqlDriver
C. Only OracleDriver
D. DerbyDriver, MySqlDriver, OracleDriver
E. Only DerbyDriver and MySqlDriver
F. None of these
3. What must be the first characters of a database URL?
A. db,
B. db:
C. jdbc,
D. jdbc:
E. None of the above
4. Which is responsible for getting a connection to the database?
A. Driver
B. Connection
C. PreparedStatement
D. Statement
E. ResultSet
5. Which of these obtains a Connection?
A. Connection.getConnection(url)
B. Driver.getConnection(url)
C. DriverManager.getConnection(url)
D. new Connection(url)
E. None of the aboveDatabase Applications with JDBC 331
6. Which method in DriverManager is overloaded to allow passing a username 
and password?
A. conn()
B. connect()
C. forName()
D. getStatement()
E. open()
F. None of the above
7. What is the output if the clowns database exists and contains an empty clowns table?
var url = "jdbc:derby:clowns;create=true";
var sql = "SELECT count(*) FROM clowns";
try (var conn = DriverManager.getConnection(url);
   var stmt = conn.prepareStatement(sql);
   var rs = stmt.executeQuery()) {
 
   System.out.println(rs.getInt(1));
}
A. 0
B. 1
C. The code does not compile.
D. The code compiles but throws an exception at runtime.
8. Consider the three methods execute(), executeQuery(), and executeUpdate().  
Fill in the blanks: _______ of these methods is/are allowed to run a DELETE SQL statement 
while ________ of these methods is/are allowed to run an UPDATE SQL statement.
A. None, one
B. One, none
C. One, one
D. One, two
E. Two, two
F. Three, three
9. Suppose the pandas table has one row with the name Mei Xiang and the location DC. 
What does the following code output?
var url = "jdbc:derby:pandas";
var sql = "SELECT name FROM pandas WHERE location = 'DC'";
try (var conn = DriverManager.getConnection(url);    // s1
   var stmt = conn.prepareStatement(sql);            // s2
   var rs = stmt.executeQuery()) {
 
   if (rs.next())
      System.out.println(rs.getString("name"));
   else
      System.out.println("No match");
}
A. Mei Xiang
B. No match
C. The code does not compile due to line s1.
D. The code does not compile due to line s2.
E. The code does not compile due to another line.
F. The code throws an exception at runtime.
10. Suppose we have a peacocks table with two columns: name and rating. What does the fol-
lowing code output if the table is empty?
var url = "jdbc:derby:birds";
var sql = "SELECT name FROM peacocks WHERE name = ?";
try (var conn = DriverManager.getConnection(url);
   var stmt = conn.prepareStatement(sql)) {       // s1
 
   stmt.setString(1, "Feathers");
   stmt.setString(2, "Nice");
 
   boolean result = stmt.execute();               // s2
 
   System.out.println(result);
}
A. false
B. true
C. The code does not compile due to line s1.
D. The code does not compile due to line s2.
E. The code does not compile due to another line.
F. The code throws an exception at runtime.
11. Suppose we have an empty bunny table with two columns: name and color. What is the state 
of the table after running this code?
var url = "jdbc:derby:bunnies";
var sql = "INSERT INTO bunny(name, color) VALUES (?, ?)";
try (var conn = DriverManager.getConnection(url);Database Applications with JDBC 333
   var stmt = conn.prepareStatement(sql)) {  // s1
 
   stmt.setString(1, "Daisy");
   stmt.setString(2, "Brown");
 
   stmt.executeUpdate();
 
   stmt.setString(1, "Cinna");
   stmt.setString(2, "Brown");
 
   stmt.executeUpdate();
}
A. It has one row.
B. It has two rows, and the color is Brown in both.
C. The code does not compile due to line s1.
D. The code does not compile due to line s2.
E. The code does not compile due to another line.
F. The code throws an exception at runtime.
12. What is the name of a concrete class that implements Statement and is included in 
the core JDK?
A. CallableStatement
B. PreparedStatement
C. StatementImpl
D. Both A and B
E. None of the above
13. Given the table books in the figure and a ResultSet created by running the following SQL 
statement, which option prints the value 379?
title
varchar(255)
Beginning Java
Advanced Java
379
669
num_pages
integer
SELECT * FROM books WHERE title = 'Beginning Java'
A. System.out.println(rs.getInt(1));
B. System.out.println(rs.getInt(2));
C. System.out.println(rs.getInteger(1));
D. System.out.println(rs.getInteger(2));
14. Given the table books in the previous question and the following code, which lines would 
you add to successfully insert a row? (Choose two.)
var url = "jdbc:derby:books;create=true";
var sql = "INSERT INTO books (title,num_pages) VALUES(?,?)";
try (var conn = DriverManager.getConnection(url);
     var stmt = conn.prepareStatement(sql)) {
 
  // INSERT CODE HERE
 
  stmt.executeUpdate();
}
A. stmt.setObject(0, "Intermediate Java");
B. stmt.setObject(1, "Intermediate Java");
C. stmt.setObject(1, 500);
D. stmt.setObject(2, 500);
15. Given the table books from the previous two questions and a ResultSet created by 
running this SQL statement, which option prints Advanced Java?
SELECT title FROM books WHERE num_pages > 500
A. System.out.println(rs.getString());
B. System.out.println(rs.getString("0"));
C. System.out.println(rs.getString("1"));
D. System.out.println(rs.getString("title"));
E. None of the above
16. Which of the following could be valid JDBC URL formats for an imaginary driver named 
magic and a database named box?
String first = "jdbc:magic:127.0.0.1:1234/box";
String second = "jdbc:magic:box";
String third = "jdbc@magic:@127.0.0.1:1234"; 
A. Only first
B. Only second
C. Only third
D. Both first and second
E. Both first and third
F. All of theseDatabase Applications with JDBC 335
17. Which is a benefit of PreparedStatement over Statement? (Choose two.)
A. Language independence
B. NoSQL support
C. Readability
D. Security
E. Supports stored procedures
18. Assuming the clowns database exists and contains one empty table named clowns, what is the 
output of the following?
var url = "jdbc:derby:clowns";
var sql = "SELECT * FROM clowns";
try (var conn = new Connection(url);      // s1
   var stmt = conn.prepareStatement(sql); // s2
   var rs = stmt.executeQuery()) {        // s3  
   if (rs.next())
      System.out.println(rs.getString(1));
   }
}
A. The code terminates successfully without any output.
B. The code does not compile due to line s1.
C. The code does not compile due to line s2.
D. The code does not compile due to line s3.
E. None of the above.
19. What is the correct order to close database resources?
A. Connection then PreparedStatement then ResultSet
B. Connection then ResultSet then PreparedStatement
C. PreparedStatement then Connection then ResultSet
D. PreparedStatement then ResultSet then Connection
E. ResultSet then PreparedStatement then Connection
F. None of the above
20. Assuming the clowns database exists and contains one empty table named clowns, what is the 
output of the following?
var url = "jdbc:derby:clowns";
var sql = "SELECT * FROM clowns";
try (var conn = DriverManager.getConnection(url);   // s1
   var stmt = conn.prepareStatement(sql);           // s2
   var rs = stmt.executeQuery()) {                    // s3
 
   if (rs.next())
      System.out.println(rs.getString(1));
   }
}
A. The code terminates successfully without any output.
B. The code does not compile due to line s1.
C. The code does not compile due to line s2.
D. The code does not compile due to line s3.
E. None of the above.
21. Suppose we have a bunny table with two columns: name and color. What does the following 
code output if the table is empty?
var url = "jdbc:derby:bunnies";
var sql = 
   "SELECT count(*) FROM bunny WHERE color = ? and name = ?";
try (var conn = DriverManager.getConnection(url);
   var stmt = conn.prepareStatement(sql)) {  // s1
 
   stmt.setString(1, "White");
 
   try (var rs = stmt.executeQuery()) {      // s2
      if (rs.next())
         System.out.println(rs.getInt(1));
   }
}
A. 0
B. 1
C. The code does not compile due to line s1.
D. The code does not compile due to line s2.
E. The code does not compile due to another line.
F. The code throws an exception at runtime.
22. Suppose the pandas table has one row with the name Mei Xiang and the location DC. 
What does the following code output?
var url = "jdbc:derby:pandas";
var sql = "SELECT name FROM pandas WHERE location = ?";
try (var conn = DriverManager.getConnection(url);  // s1Database Applications with JDBC 337
   var stmt = conn.prepareStatement(sql)) {        // s2
 
   stmt.setString(1, "DC");
   try (var rs = stmt.executeQuery()) {
      if (rs.next())
         System.out.println(rs.getString("name"));
      else
         System.out.println("No match");
   }
}
A. Mei Xiang
B. No match
C. The code does not compile due to line s1.
D. The code does not compile due to line s2.
E. The code does not compile due to another line.
F. The code throws an exception at runtime.
23. Which statement is true about the JDBC core classes?
A. Driver is an implementation of DriverManager.
B. A general Connection implementation is included in the JDK.
C. A PreparedStatement uses bind variables.
D. None of the above.
24. Which is true if the clowns database exists and contains an empty clowns table?
var url = "jdbc:derby:clowns";
var sql = "SELECT COUNT(*) FROM clowns";
try (var conn = DriverManager.getConnection(url);
    var stmt = conn.prepareStatement(sql);
    var rs = stmt.executeQuery()) {
 
    rs.next();                          // r1
    System.out.println(rs.getInt(1));   // r2
}
A. The code compiles and prints 0 without error.
B. The code compiles and prints 1 without error.
C. The code does not compile.
D. The code compiles but throws an exception at runtime on line r1.
E. The code compiles but throws an exception at runtime on line r2.
25. Suppose we have an empty bunny table with two columns: name and color. What is the state 
of the table after running this code?
var url = "jdbc:derby:bunnies";
var sql = "INSERT INTO bunny(name, color) VALUES (?, ?)";
try (var conn = DriverManager.getConnection(url);
   var stmt = conn.prepareStatement(sql)) {  // s1
 
   stmt.setString(1, "Hoppy");
   stmt.setString(2, "Brown");
 
   stmt.executeUpdate();
 
   stmt.setString(1, "Daisy");
 
   stmt.executeUpdate();
}
A. Only one row has the color Brown set.
B. It has two rows, and the color is Brown in both.
C. The code does not compile due to line s1.
D. The code does not compile due to line s2.
E. The code does not compile due to another line.
F. The code throws an exception at runtime.
26. Which are true statements? (Choose two.)
A. A PreparedStatement is generally faster than a Statement when each is run 100 times.
B. A PreparedStatement is generally slower than a Statement when each is run 100 times.
C. A PreparedStatement is generally the same speed as a Statement when each is run 100 
times.
D. PreparedStatement extends Statement
E. Statement extends PreparedStatement
F. PreparedStatement and Statement are not in the same inheritance hierarchy.
27. Which is true of a PreparedStatement?
A. It has a method to change the bind variable to a different character other than ?.
B. It can be used only for SELECT statements.
C. It can be used only for UPDATE statements.
D. All of these are true.
E. None of these are true.Database Applications with JDBC 339
28. Suppose we have a peacocks table with two columns: name and rating. What does the 
following code output if the table is empty?
var url = "jdbc:derby:birds";
var sql = "SELECT name FROM peacocks WHERE name = ?";
try (var conn = DriverManager.getConnection(url);
   var stmt = conn.prepareStatement(sql)) {    // s1
 
   stmt.setString(1, "Feathers");
 
   System.out.println(stmt.executeUpdate());   // s2
}
A. false
B. true
C. The code does not compile due to line s1.
D. The code does not compile due to line s2.
E. The code does not compile due to another line.
F. The code throws an exception at runtime.
29. What is the most likely outcome of this code if the people table is empty?
6: var stmt = conn.prepareStatement("SELECT * FROM people");
7: var rs1 = stmt.executeQuery();
8: var rs2 = stmt.executeQuery();
9: System.out.println(rs1.next() + " " + rs2.next());
A. It prints false false.
B. It prints true false.
C. It does not terminate.
D. It throws a SQLException.
E. None of the above.
30. What is the most likely outcome of this code if the bunnies table is empty?
var url = "jdbc:derby:bunnies";
var sql = "INSERT INTO bunny(name, color) VALUES (?, ?)";
try (var conn = DriverManager.getConnection(url);
   var stmt = conn.createStatement()) {
   stmt.setString(1, "Hoppy");
   stmt.setString(2, "Brown");
 
   stmt.executeUpdate(sql);
}
A. One row is in the table.
B. Two rows are in the table.
C. The code does not compile.
D. The code throws a SQLException.Localization
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Localization
✓■ Implement Localization using Locale, resource bundles, and 
Java APIs to parse and format messages, dates, and numbers
Chapter 
1. Which of the following are considered locales? (Choose three.)
A. Cultural region
B. Local address
C. City
D. Time zone region
E. Political region
F. Geographical region
2. Assuming the key green is in all five of the files referenced in the options, which file will the 
following code use for the resource bundle?
Locale.setDefault(new Locale("en", "US"));
var rb = ResourceBundle.getBundle("Colors", new Locale("fr"));
System.out.print(rb.getString("green"));
A. Colors_default.properties
B. Colors.properties
C. Colors_en.properties
D. Colors_US.properties
E. Colors_en_US.properties
F. None of the above
3. When localizing an application, which type of data varies in presentation depending 
on locale?
A. Currencies
B. Dates
C. Both
D. Neither
4. How do you find out the locale of the running program?
A. Locale.get("default")
B. Locale.get(Locale.DEFAULT)
C. Locale.of()
D. Locale.now()
E. Locale.getDefault()
F. None of the above
5. How long will the effects of calling Locale.setDefault() be active assuming no other 
calls to that method are made?
A. Until the end of the method.
B. Until the program exits.
C. Until the next reboot of the computer.
D. It persists after reboot.
E. None of the above.Localization 343
6. What is the output of the following code snippet?
var d = LocalDateTime.parse("2022-01-21T12:00:00",
   DateTimeFormatter.ISO_LOCAL_DATE_TIME);
System.out.print(d.format(DateTimeFormatter.ISO_LOCAL_DATE));
A. 2022-00-21
B. 2022-00-22
C. 2022-01-21
D. 2022-01-22
E. The code does not compile.
F. An exception is thrown at runtime.
7. What is the output if the solveMystery() method is applied to a Properties object 
loaded from mystery.properties?
mystery.properties
mystery=bag
type=paper
 
void solveMystery(Properties props) {
   var a = props.get("mystery");
   var b = props.get("more", null);
   var c = props.get("more", "trick");
   System.out.print(a + " " + b + " " + c);
}
A. bag ? trick
B. bag ? null
C. bag null null
D. bag null trick
E. The code does not compile.
F. An exception is thrown at runtime.
8. Fill in the blank with the option that allows the code snippet to compile and print a message 
without throwing an exception at runtime.
var x = LocalDate.of(2022, 3, 1);
var y = LocalDateTime.of(2022, 3, 1, 5, 55);
var f = DateTimeFormatter.ofPattern("MMMM' at 'h' o'clock'");
System.out.print( );
A. f.formatDate(x)
B. f.formatDate(y)
C. f.format(x)
D. f.format(y)
E. The code does not compile regardless of what is placed in the blank.
F. None of the above.
9. Which of the following are valid locale formats? (Choose two.)
A. hi
B. hi_IN
C. IN_hi
D. in_hi
E. HI_IN
F. IN
10. Assuming the key indigo is in all five of the files referenced in the options, which file will the 
following code use for the resource bundle?
Locale loc = new Locale("fr", "CH");
Locale.setDefault(new Locale("it", "CH"));
ResourceBundle rb = ResourceBundle.getBundle("Colors", loc);
rb.getString("Indigo");
A. Colors_default.properties
B. Colors_en_US.properties
C. Colors_CH.properties
D. Colors_en.properties
E. Colors_es.properties
F. None of the above
11. For currency, the US uses the $ symbol, the UK uses the £ symbol, and Germany uses the € 
symbol. Given this information, what is the expected output of the following code snippet?
Locale.setDefault(Locale.US);
Locale.setDefault(Category.FORMAT, Locale.GERMANY);
System.out.print(NumberFormat.getCurrencyInstance(Locale.UK)
   .format(1.1));
A. $1.10
B. 1,10€
C. £1.10
D. The code does not compile.
E. An exception is thrown at runtime.
F. The output cannot be determined without knowing the locale of the system where it will 
be run.Localization 345
12. Given the following four properties files, what does this code print?
Cars_en.properties
engine=engine
horses=241
engine=moteur
country=earth
road=highway
country=France
road=autoroute
country=US
horses=45
Cars.properties
Cars_en_US.properties Cars_fr_FR.properties
Locale.setDefault(new Locale("en"));
var rb = ResourceBundle.getBundle("Cars",
   new Locale("de", "DE"));
var r1 = rb.getString("engine");
var r2 = rb.getString("horses");
var r3 = rb.getString("country");
System.out.print(r1+ " " + r2 + " " + r3);
A. null null null
B. engine 241 US
C. moteur 45 US
D. engine 241 earth
E. moteur 241 earth
F. An exception is thrown at runtime.
13. Given the four properties files in question 12, what does this code print?
Locale.setDefault(new Locale("en", "US"));
var rb = ResourceBundle.getBundle("Cars",
   new Locale("fr", "FR"));
var s1 = rb.getString("country");
var s2 = rb.getString("horses");
var s3 = rb.getString("engine");
System.out.print(s1+ " " + s2 + " " + s3);
A. France null engine
B. France 241 moteur
C. France 45 moteur
D. France 241 engine
E. France 45 engine
F. An exception is thrown at runtime.
14. Given the four properties files in question 12, what does this code print?
Locale.setDefault(new Locale("ja","JP"));
var rb = ResourceBundle.getBundle("Cars",
   new Locale("fr", "FR"));
var t1 = rb.getString("engine");
var t2 = rb.getString("road");
var t3 = rb.getString("country");
System.out.print(t1+ " " + t2 + " " + t3);
A. moteur autoroute France
B. engine autoroute France
C. engine highway France
D. moteur highway France
E. moteur highway US
F. An exception is thrown at runtime.
15. Fill in the blank so the code correctly compiles and creates a Locale reference.
Locale loc = Locale.____________________;
A. get("Italian")
B. of(Locale.ITALIAN)
C. get(Locale.ITALIAN)
D. getLocale("Italian")
E. of("Italian")
F. None of the above
16. Assuming the key turquoise is in all five of the files referenced in the options, which file will 
the following code use for the resource bundle?
Locale loc = new Locale("zh", "CN");
Locale.setDefault(new Locale("en", "US"));
ResourceBundle rb = ResourceBundle.getBundle("Colors", loc);
rb.getString("turquoise");
A. Colors_en.properties
B. Colors_CN.properties
C. Colors.properties
D. Colors_default.properties
E. Colors_en_CN.properties
F. None of the aboveLocalization 347
17. How many lines does the following print out?
3: Locale.setDefault(Locale.KOREAN);
4: System.out.println(Locale.getDefault());
5: Locale.setDefault(new Locale("en", "AU"));
6: System.out.println(Locale.getDefault());
7: Locale.setDefault(new Locale("EN"));
8: System.out.println(Locale.getDefault());
A. Only an exception is printed.
B. One, followed by an exception.
C. Two, followed by an exception.
D. Three.
E. It does not compile.
18. Assuming the key red is in all five of the files referenced in the options, which file will the fol-
lowing code use for the resource bundle?
Locale.setDefault(new Locale("en", "US"));
var rb = ResourceBundle.getBundle("Colors",
   new Locale("ca","ES"));
System.out.print(rb.getString("red"));
A. Colors.properties
B. Colors_en_US.properties
C. Colors_US.properties
D. Colors_ES.properties
E. Colors_ca.properties
F. None of the above
19. What is the output of the following code snippet?
var d = LocalDate.parse("2022-04-01",
   DateTimeFormatter.ISO_LOCAL_DATE);
System.out.print(d.format(
   DateTimeFormatter.ISO_LOCAL_DATE_TIME));
A. 2022 APRIL 1
B. 2022 MAY 0
C. 2022 MAY 1
D. 2022 APRIL 0
E. The code does not compile.
F. An exception is thrown at runtime.
20. What is the output if the launch() method is applied to a Properties object loaded from 
scifi.properties?
scifi.properties
rocket=saturn5
moon=landing
 
void launch(Properties props) {
   var a = props.getProperty("rocket", "?");
   var b = props.getProperty("earth");
   var c = props.getProperty("earth", "?");
   System.out.print(a + " " + b + " " + c);
}
A. saturn5 null ?
B. saturn5 null null
C. null null ?
D. saturn5 ? ?
E. The code does not compile.
F. An exception is thrown at runtime.
21. For what values of pattern will the following print <02.1> <06.9> <10,00>? 
(Choose two.)
String pattern = " ";
var message = DoubleStream.of(2.1, 6.923, 1000)
   .mapToObj(v -> new DecimalFormat(pattern).format(v))
   .collect(Collectors.joining("> <"));
System.out.print("<" + message + ">");
A. ##,00.##
B. ##,00.#
C. 0,00.#
D. #,00.#
E. 0,00.0
F. #,##.#
22. What is the result of the following?
Map<String, String> map = new TreeMap<>();
map.put("tool", "hammer");
map.put("problem", "nail");
 
var props = new Property();             // p1
map.forEach((k,v) -> props.put(k, v));  // p2Localization 349
 
String t = props.getProperty("tool");   // p3
String n = props.getProperty("nail");
System.out.print(t + " " + n);
A. hammer nail
B. The code does not compile due to line p1.
C. The code does not compile due to line p2.
D. The code does not compile due to line p3.
E. An exception is thrown at runtime.
F. None of the above.
23. Assuming the key purple is in all five of the files referenced in the options, which file will the 
following code use for the resource bundle?
Locale.setDefault(new Locale("en", "US"));
var rb = ResourceBundle.getBundle("Colors", new Locale("en"));
System.out.print(rb.getString("purple"));
A. Colors_en_US.properties
B. Colors_en.properties
C. Colors_US.properties
D. Colors_fr.properties
E. Colors.properties
F. None of the above
24. Which of the following are not valid Locale formats? (Choose two.)
A. nl_BE
B. fr_CA
C. uk_ua
D. CR
E. no
F. ro_RO
25. For currency, the US uses the $ symbol, the UK uses the £ symbol, and Germany uses the € 
symbol. Given this information, what is the expected output of the following code snippet?
Locale.setDefault(Locale.US);
Locale.setDefault(Category.FORMAT, Locale.GERMANY);
Locale.setDefault(Category.DISPLAY, Locale.UK);
System.out.print(NumberFormat.getCurrencyInstance()
   .format(6.95));
A. $6.95
B. 6,95 €
C. £6.95
D. The code does not compile.
E. An exception is thrown at runtime.
F. The output cannot be determined without knowing the locale of the system where it will 
be run.
26. What is the output of the following code snippet?
var x = LocalDate.of(2022, 3, 1);
var y = LocalDateTime.of(2022, 1, 1, 2, 55);
var f = DateTimeFormatter.ofPattern("'yyyy-MM'");
System.out.print(f.format(x) + " " + f.format(y));
A. 2022-03 2022-01
B. 2022-01 2022-03
C. 2022-02 2022-00
D. yyyy-MM yyyy-MM
E. The code does not compile.
F. An exception is thrown at runtime.
27. Given the following two properties files, what does the following class output?
container.properties
name=generic
number=2
 
container_en.properties
name=Docker
type=container
 
void loadPod() {
   new Locale.Builder()
      .setLanguage("en")
      .setRegion("US").build();
   var rb = ResourceBundle.getBundle("container");
   String name = rb.getString("name");
   String type = rb.getString("type");
   System.out.print(name + " " + type);
}
A. Docker container
B. generic containerLocalization 351
C. generic null
D. The output cannot be determined without knowing the locale of the system where it will 
be run.
E. An exception is thrown at runtime.
F. None of the above.
28. Given the two properties files from question 27, what does the following class output?
void loadContainer() {
   Locale.setDefault(new Locale("en"));
   var rb = ResourceBundle.getBundle("container");
   String name = rb.getString("name");
   String type = rb.getString("type");
   System.out.print(name + " " + type);
}
A. Docker container
B. generic container
C. generic null
D. The output cannot be determined without knowing the locale of the system where it will 
be run.
E. An exception is thrown at runtime.
F. None of the above.
29. Given the two properties files from question 27, what does the following class output?
void loadControlPlane() {
   Locale.setDefault(new Locale("en_US"));
   var rb = ResourceBundle.getBundle("container");
   String name = rb.getString("name");
   String type = rb.getString("type");
   System.out.print(name + " " + type);
}
A. Docker container
B. generic container
C. generic null
D. The output cannot be determined without knowing the locale of the system where it will 
be run.
E. An exception is thrown at runtime.
F. None of the above.
30. Assuming the Forest.properties file is the only resource file available, what is the 
output of calling the hike() method?
Forest.properties
trees=evergreen {0}
animals=squirrels
 
static void hike() {
   Locale.setDefault(new Locale.Builder()
      .setLanguage("en").build());
   var rb = ResourceBundle
      .getBundle("Forest", new Locale("fr"));
   System.out.print(MessageFormat.format("trees","pretty"));
}
A. trees
B. trees pretty
C. trees {0}
D. trees null
E. The code does not compile.
F. An exception is thrown at runtime.Annotations
THE OCP EXAM TOPICS COVERED IN THIS 
PRACTICE TEST INCLUDE THE FOLLOWING:
✓✓ Annotations
✓■ Create, apply, and process annotations
Chapter 
1. What modifier is used to mark an annotation element as optional?
A. optional
B. default
C. required
D. value
E. case
F. None of the above
2. Given a Broadway show, which information is best stored using annotations? (Choose two.)
A. The number of people attending each day
B. The maximum number of tickets a person can purchase
C. The total number of people the theater can hold
D. The price including discounts a person pays for a ticket
E. A person’s seat assignment
F. The time a ticket is sold
3. Fill in the blank with the correct annotation usage that allows the code to compile.
public interface CelestialBody {
   String name();
   double size() default 100;
   int lightYears = 2;
}
 
_________________ class Planet {}
A. @CelestialBody(name="Venus")
B. @CelestialBody(name="Pluto", size=2, lightYears=5)
C. @CelestialBody(lightYears=10)
D. @CelestialBody("Jupiter")
E. @CelestialBody(size=3)
F. None of the above
4. Fill in the blank with the correct value for @Target that allows the code to compile.
import java.lang.annotation.*;
 
@Target({____________________})
public @interface LightSource {}
 
@LightSource class Bulb {
   @LightSource void lightSwitch() {}
   @LightSource private Bulb() {}
}Annotations 355
A. ElementType.METHOD, ElementType.CONSTRUCTOR
B. ElementType.ANNOTATION_TYPE
C. ElementType.CONSTRUCTOR, ElementType.TYPE, ElementType.METHOD
D. ElementType.TYPE_USE
E. ElementType.LOCAL_VARIABLE, ElementType.FIELD
F. None of the above
5. Which of the following are marker annotations? (Choose three.)
A. @Target
B. @Inherited
C. @Override
D. @Retention
E. @Repeatable
F. @Documented
6. Given the following declarations, which annotations can fill in the blank that would allow 
the code to compile? (Choose three.)
public @interface Music {
   String value() default "violin";
}
 
class Orchestra {
   ______________ void play() {}
}
A. @Music(super="piccolo")
B. @Music("viola")
C. @Music(value()="bass")
D. @Music
E. @Music(default="flute")
F. @Music(value="cello")
7. How many lines of the following declaration contain a compiler error?
1: public @interface Thermometer {
2:    int minTemp();
3:    Integer maxTemp() default 1;
4:    double[] color();
5:    final String type;
6:    Boolean compact;
7: }
A. None
B. One
C. Two
D. Three
E. Four
F. Five
8. In what ways are annotations similar to interfaces? (Choose two.)
A. They can both declare methods with bodies.
B. They can both declare constructors.
C. They can both declare constants.
D. They can both be extended with the extends keyword.
E. They can both be used in a class declaration.
F. They both are declared with the interface type.
9. In how many of the marked places (m1, m2, m3) will adding the line  
@SuppressWarnings() independently allow the class to compile without any warnings?
import java.util.*;
// m1
public class Space {
   // m2
   final void frontier() {
      List<Object> stars = List.of(1,2,3);
      stars.add(4);
      
      // m3
      List planets = new ArrayList<>();
      planets.add(5);
   }
}
A. None, the class does not compile as is.
B. None, the class already compiles without warnings.
C. One.
D. Two.
E. Three.
F. None of the above.
10. An annotation cannot be applied to which of the following?
A. Class declaration.
B. Annotation declaration.
C. Inner class declaration.
D. Cast operation.Annotations 357
E. Local variable declaration using var.
F. An annotation can be applied to all of the above.
11. Which statements about the @Override annotation are correct? (Choose three.)
A. It can be optionally specified when a class implements an abstract interface method.
B. Adding it to a method may trigger a compiler error.
C. It is required whenever a class implements an abstract interface method.
D. It can be added to an interface declaration type.
E. It can be optionally specified when a method is overridden in a subclass.
F. It is required whenever a method is overridden in a subclass.
12. Given the following declarations, which annotation can be applied to a method declaration?
import java.lang.annotation.*;
@interface Bread {
   public int maker = 5;
   String baker();
}
@Inherited
@interface Toast {
   boolean buttered() default true;
   int freshness() default Bread.maker;
   static boolean wheat = false;
}
A. @Toast(true)
B. @Toast
C. @Bread("null")
D. @Toast(wheat=true)
E. @Bread
F. None of the above, as the annotation declarations do not compile
13. Which properties of the Clean annotation must be true for the following to compile? 
(Choose three.)
@Clean("Basement") public class House {}
A. The annotation must contain exactly one element.
B. The annotation must contain an element named value.
C. The element must not have a default value.
D. The element may have a default value.
E. The annotation may contain more than one element.
F. The annotation must contain an element named values.
14. Assume the following code compiles. Which annotation inserted in the line allows the code to 
print a non-null value at runtime?
// INSERT HERE
@interface Fast {
   int topSpeed() default 10;
}
 
@Fast class BigCat {}
 
public class Cheetah extends BigCat {
   public static void main(String... unused) {
      var a = Cheetah.class.getAnnotation(Fast.class);
      System.out.print(a);
   }
}
A. @Inherited
B. @Polymorphism
C. @Inheritance
D. @Retention
E. @Subclass
F. None of the above
15. How many lines of the following declaration contain a compiler error?
1: public @interface Student {
2:    final boolean likesPonies = true;
3:    int value default 100;
4:    int age();
5:    /** TODO **/
6:    String name() default "Olivia";
7: }
A. None
B. One
C. Two
D. Three
E. Four
F. FiveAnnotations 359
16. Which statement about the following declarations is correct?
import java.lang.annotation.*;
import java.util.List;
 
@Target(ElementType.TYPE_USE)
public @interface Friend {
   String value();
   String lastName() default null;
   int age = 10;
}
class MyFriends {
   void makeFriends() {
      var friends = List.of(new @Friend("Olivia") Object(),
            new @Friend("Adeline") String(),
            new @Friend("Henry") MyFriends());
   }
}
A. None of the declarations compile.
B. Only the declaration of Friend contains a compiler error.
C. Only the declaration of MyFriends contains a compiler error.
D. Both declarations contain compiler errors.
E. None of the above.
17. Which of the following are permitted to be used for annotation element type? (Choose three.)
A. Object
B. An annotation
C. Class[]
D. An enum
E. Double
F. var
18. Fill in the blanks with the lines of code that allow the program to compile. (Choose two.)
import java.lang.annotation.*;
@Repeatable(___________)  // t1
@interface Gift {
   String value();
}
@interface Presents {
   ___________;           // t2
}
@Gift("Book") @Gift("Toy") public class Surprise {}
A. Presents on line t1
B. @Presents on line t1
C. Gift value() on line t2
D. Presents.class on line t1
E. Gift[] value() on line t2
F. Gift[] gift() on line t2
19. Which statements about annotations are correct? (Choose three.)
A. Annotations contain data that changes throughout the program execution.
B. Adding an annotation to a class that already compiles may trigger a compiler error and 
cause it to fail to compile.
C. Annotations contain metadata about a Java type.
D. Annotations cannot be applied to lambda expression variables.
E. Annotations cannot be applied to other annotations.
F. Removing all annotations from a class that already compiles will not introduce a com-
piler error.
20. Given the following declarations, which annotations can fill in the blank that would allow 
the code to compile? (Choose three.)
import java.util.*;
public @interface Vacuum {
   String[] value();
}
 
class Appliance {
   ______________ void clean() {}
}
A. @Vacuum({})
B. @Vacuum({"upright","new"})
C. @Vacuum(List.of("portable"))
D. @Vacuum
E. @Vacuum("handheld")
F. @Vacuum(default="shop")
21. Which method declarations can @SafeVarargs be correctly applied to? (Choose two.)
A. protected void hum(double... tune)
B. final int whistle(int length, float... measure)
C. static void sing()
D. private void listen(String... mp3)
E. void dance(List<Integer>... beat)
F. private static int play(int[] notes)Annotations 361
22. Which annotation can be applied to an existing annotation X and ensures a class that uses X 
shows the annotation in its generated Javadoc?
A. @Documented
B. @Generated
C. @JavaDoc
D. @PreserveAnnotations
E. @Retention
F. None of the above
23. Fill in the blank with the value that allows the annotation to be accessible by the JVM in 
which it is executed?
import java.lang.annotation.*; 
@Retention(__________________)
public class Corn {}
A. RetentionPolicy.CLASS
B. RetentionPolicy.JRE
C. RetentionPolicy.RUNTIME
D. RetentionPolicy.SOURCE
E. RetentionPolicy.LIVE
F. None of the above
24. How many lines of the following declarations contain a compiler error?
1: @interface Sword {}
2: public @interface Zelda {
3:    private String game();
4:    Sword sword();
5:    java.util.List<Integer> gems;
6:    final boolean hasBossKey();
7:    public abstract int level() default 99;
8:    protected boolean continue();
9: }
A. None
B. One
C. Two
D. Three
E. Four
F. Five
25. Which of the following are permitted for an annotation element default value? 
(Choose three.)
A. ""
B. (int)1_000.0
C. new String()
D. Integer.valueOf(3).intValue()
E. null
F. Integer.MAX_VALUE
26. Assuming @Weather is a valid repeatable annotation that takes a String, with its associated 
containing type annotation @Forecast, which of the following can be applied to a type decla-
ration? (Choose two.)
A. @Forecast({"Storm", "Cloudy"})
B. @Forecast({@Weather("Storm"), @Weather("Cloudy")})
C. @Weather("Storm") @Weather("Cloudy")
D. @Weather({@Forecast("Storm"), @Forecast("Cloudy")})
E. @Forecast("Storm") @Forecast("Cloudy")
F. @Weather({"Storm", "Cloudy"})
27. Which of the following interface declarations will still compile if @FunctionalInterface is 
applied to each? (Choose two.)
interface Dog {
   default void drink() {}
   void play();
}
interface Astra extends Dog {
   private static int eat() { return 1; }
   void fetch();
}
interface Webby extends Dog {
   abstract void play();
   default void rest() {}
   abstract String toString();
}
interface KC {}
interface Georgette extends Dog {
   int intelligence = 5;
   void jump();
}Annotations 363
A. Dog
B. KC
C. Georgette
D. Webby
E. Astra
28. How many lines of the following declarations contain a compiler error?
import java.lang.annotation.*;
 
enum Colors { RED, BLUE, GREEN }
@Documented
public @interface Bouncy {
   int value();
   Colors color() default Colors.RED;
   double size();
}
@Bouncy(999, size=10.0) class Trampoline {}
A. None
B. One
C. Two
D. Three
E. Four
F. Five
29. Fill in the blanks: The __________ annotation allows annotations from a superclass to be 
applied to a subclass, while the __________ annotation determines whether annotations are 
present in generated Javadoc. (Choose two.)
A. @Retention in the first blank
B. @Inherited in the first blank
C. @Subclass in the first blank
D. @Javadoc in the second blank
E. @Retention in the second blank
F. @Documented in the second blank
30. Fill in the blank with the correct annotation usage that allows the code to compile without 
any warnings.
@Deprecated(since="5.0")
public class ProjectPlanner<T> {
   ProjectPlanner create(T t) { return this; }
}
 
@SuppressWarnings(___________________) 
class SystemPlanner {
   ProjectPlanner planner = new ProjectPlanner().create("TPS");
}
A. value=ignoreAll
B. value="deprecation","unchecked"
C. "unchecked","deprecation"
D. {"deprecation","unchecked"}
E. "deprecation"
F. None of the above